+ export HYDRA_FULL_ERROR=1
+ HYDRA_FULL_ERROR=1
+ ulimit -n 65535
++ pwd
+ PROJECT_DIR=/mnt/task_runtime/verl
+ CONFIG_PATH=/mnt/task_runtime/verl/examples/sglang_multiturn/config
+ python3 -m verl.trainer.main_ppo --config-path=/mnt/task_runtime/verl/examples/sglang_multiturn/config --config-name=gsm8k_multiturn_grpo algorithm.adv_estimator=grpo data.train_batch_size=1024 data.max_prompt_length=128 data.filter_overlong_prompts=True data.truncation=error data.return_raw_chat=True data.filter_overlong_prompts_workers=40 actor_rollout_ref.model.path=/root/.cache/huggingface/hub/models--allenai--OLMo-2-0425-1B/snapshots/a1847dff35000b4271fa70afc5db10fd29fedbdf +actor_rollout_ref.actor.ntp_coeff=1.0 actor_rollout_ref.actor.optim.lr=2e-6 actor_rollout_ref.model.use_remove_padding=True actor_rollout_ref.actor.ppo_mini_batch_size=256 +actor_rollout_ref.actor.ntp_mini_batch_size=512 actor_rollout_ref.actor.ppo_micro_batch_size_per_gpu=32 +actor_rollout_ref.actor.ntp_micro_batch_size_per_gpu=64 actor_rollout_ref.actor.use_kl_loss=False actor_rollout_ref.actor.kl_loss_coef=0.0 actor_rollout_ref.actor.entropy_coeff=0.0 actor_rollout_ref.model.enable_gradient_checkpointing=True actor_rollout_ref.actor.fsdp_config.param_offload=False actor_rollout_ref.actor.fsdp_config.optimizer_offload=False actor_rollout_ref.rollout.log_prob_micro_batch_size_per_gpu=80 actor_rollout_ref.ref.log_prob_micro_batch_size_per_gpu=80 actor_rollout_ref.rollout.tensor_model_parallel_size=1 actor_rollout_ref.rollout.name=sglang actor_rollout_ref.rollout.gpu_memory_utilization=0.8 actor_rollout_ref.rollout.n=5 actor_rollout_ref.rollout.temperature=1.0 +actor_rollout_ref.rollout.per_turn_response_length=16 +actor_rollout_ref.rollout.max_code_lines=32 actor_rollout_ref.rollout.response_length=1024 algorithm.use_kl_in_reward=False trainer.critic_warmup=0 'trainer.logger=["console","wandb"]' trainer.project_name=em-new trainer.experiment_name=openandsyn-ours-40-100-olmo-15warmup-003penalty-log-len12-nomean trainer.n_gpus_per_node=8 trainer.nnodes=1 trainer.val_before_train=False trainer.save_freq=100 trainer.test_freq=-1 trainer.total_epochs=1 +trainer.q_steps=60 +trainer.ref_update_freq=100 data.train_files=/mnt/task_runtime/opencoder_post.parquet data.val_files=/root/data/real_code/test.parquet actor_rollout_ref.rollout.multi_turn.interaction_config_path=/mnt/task_runtime/verl/examples/sglang_multiturn/config/interaction_config/gsm8k_interaction_config.yaml actor_rollout_ref.rollout.multi_turn.max_user_turns=1
2025-08-24 06:05:22,027	INFO worker.py:1918 -- Started a local Ray instance. View the dashboard at [1m[32m127.0.0.1:8265 [39m[22m
[36m(TaskRunner pid=155900)[0m TaskRunner hostname: bolt-zju7e9bb4a-5ru8bui3ka, PID: 155900
[36m(TaskRunner pid=155900)[0m {'actor_rollout_ref': {'actor': {'checkpoint': {'load_contents': ['hf_model',
[36m(TaskRunner pid=155900)[0m                                                                   'model',
[36m(TaskRunner pid=155900)[0m                                                                   'optimizer',
[36m(TaskRunner pid=155900)[0m                                                                   'extra'],
[36m(TaskRunner pid=155900)[0m                                                 'save_contents': ['hf_model',
[36m(TaskRunner pid=155900)[0m                                                                   'model',
[36m(TaskRunner pid=155900)[0m                                                                   'optimizer',
[36m(TaskRunner pid=155900)[0m                                                                   'extra']},
[36m(TaskRunner pid=155900)[0m                                  'clip_ratio': 0.2,
[36m(TaskRunner pid=155900)[0m                                  'clip_ratio_c': 3.0,
[36m(TaskRunner pid=155900)[0m                                  'clip_ratio_high': 0.2,
[36m(TaskRunner pid=155900)[0m                                  'clip_ratio_low': 0.2,
[36m(TaskRunner pid=155900)[0m                                  'entropy_checkpointing': False,
[36m(TaskRunner pid=155900)[0m                                  'entropy_coeff': 0.0,
[36m(TaskRunner pid=155900)[0m                                  'entropy_from_logits_with_chunking': False,
[36m(TaskRunner pid=155900)[0m                                  'fsdp_config': {'forward_prefetch': False,
[36m(TaskRunner pid=155900)[0m                                                  'fsdp_size': -1,
[36m(TaskRunner pid=155900)[0m                                                  'offload_policy': False,
[36m(TaskRunner pid=155900)[0m                                                  'optimizer_offload': False,
[36m(TaskRunner pid=155900)[0m                                                  'param_offload': False,
[36m(TaskRunner pid=155900)[0m                                                  'reshard_after_forward': True,
[36m(TaskRunner pid=155900)[0m                                                  'wrap_policy': {'min_num_params': 0}},
[36m(TaskRunner pid=155900)[0m                                  'grad_clip': 1.0,
[36m(TaskRunner pid=155900)[0m                                  'kl_loss_coef': 0.0,
[36m(TaskRunner pid=155900)[0m                                  'kl_loss_type': 'low_var_kl',
[36m(TaskRunner pid=155900)[0m                                  'loss_agg_mode': 'token-mean',
[36m(TaskRunner pid=155900)[0m                                  'ntp_coeff': 1.0,
[36m(TaskRunner pid=155900)[0m                                  'ntp_micro_batch_size_per_gpu': 64,
[36m(TaskRunner pid=155900)[0m                                  'ntp_mini_batch_size': 512,
[36m(TaskRunner pid=155900)[0m                                  'optim': {'lr': 2e-06,
[36m(TaskRunner pid=155900)[0m                                            'lr_warmup_steps': -1,
[36m(TaskRunner pid=155900)[0m                                            'lr_warmup_steps_ratio': 0.0,
[36m(TaskRunner pid=155900)[0m                                            'min_lr_ratio': 0.0,
[36m(TaskRunner pid=155900)[0m                                            'num_cycles': 0.5,
[36m(TaskRunner pid=155900)[0m                                            'total_training_steps': -1,
[36m(TaskRunner pid=155900)[0m                                            'warmup_style': 'constant',
[36m(TaskRunner pid=155900)[0m                                            'weight_decay': 0.01},
[36m(TaskRunner pid=155900)[0m                                  'policy_loss': {'clip_cov_lb': 1.0,
[36m(TaskRunner pid=155900)[0m                                                  'clip_cov_ratio': 0.0002,
[36m(TaskRunner pid=155900)[0m                                                  'clip_cov_ub': 5.0,
[36m(TaskRunner pid=155900)[0m                                                  'kl_cov_ratio': 0.0002,
[36m(TaskRunner pid=155900)[0m                                                  'loss_mode': 'vanilla',
[36m(TaskRunner pid=155900)[0m                                                  'ppo_kl_coef': 0.1},
[36m(TaskRunner pid=155900)[0m                                  'ppo_epochs': 1,
[36m(TaskRunner pid=155900)[0m                                  'ppo_max_token_len_per_gpu': 16384,
[36m(TaskRunner pid=155900)[0m                                  'ppo_micro_batch_size': None,
[36m(TaskRunner pid=155900)[0m                                  'ppo_micro_batch_size_per_gpu': 32,
[36m(TaskRunner pid=155900)[0m                                  'ppo_mini_batch_size': 256,
[36m(TaskRunner pid=155900)[0m                                  'shuffle': False,
[36m(TaskRunner pid=155900)[0m                                  'strategy': 'fsdp',
[36m(TaskRunner pid=155900)[0m                                  'ulysses_sequence_parallel_size': 1,
[36m(TaskRunner pid=155900)[0m                                  'use_dynamic_bsz': False,
[36m(TaskRunner pid=155900)[0m                                  'use_kl_loss': False,
[36m(TaskRunner pid=155900)[0m                                  'use_torch_compile': True},
[36m(TaskRunner pid=155900)[0m                        'hybrid_engine': True,
[36m(TaskRunner pid=155900)[0m                        'model': {'custom_chat_template': None,
[36m(TaskRunner pid=155900)[0m                                  'enable_activation_offload': False,
[36m(TaskRunner pid=155900)[0m                                  'enable_gradient_checkpointing': True,
[36m(TaskRunner pid=155900)[0m                                  'exclude_modules': None,
[36m(TaskRunner pid=155900)[0m                                  'external_lib': None,
[36m(TaskRunner pid=155900)[0m                                  'fused_kernel_options': {'impl_backend': 'torch'},
[36m(TaskRunner pid=155900)[0m                                  'lora_alpha': 16,
[36m(TaskRunner pid=155900)[0m                                  'lora_rank': 0,
[36m(TaskRunner pid=155900)[0m                                  'override_config': {},
[36m(TaskRunner pid=155900)[0m                                  'path': '/root/.cache/huggingface/hub/models--allenai--OLMo-2-0425-1B/snapshots/a1847dff35000b4271fa70afc5db10fd29fedbdf',
[36m(TaskRunner pid=155900)[0m                                  'target_modules': 'all-linear',
[36m(TaskRunner pid=155900)[0m                                  'trust_remote_code': False,
[36m(TaskRunner pid=155900)[0m                                  'use_fused_kernels': False,
[36m(TaskRunner pid=155900)[0m                                  'use_liger': False,
[36m(TaskRunner pid=155900)[0m                                  'use_remove_padding': True,
[36m(TaskRunner pid=155900)[0m                                  'use_shm': False},
[36m(TaskRunner pid=155900)[0m                        'profiler': {'_target_': 'verl.utils.profiler.ProfilerConfig',
[36m(TaskRunner pid=155900)[0m                                     'all_ranks': False,
[36m(TaskRunner pid=155900)[0m                                     'discrete': False,
[36m(TaskRunner pid=155900)[0m                                     'ranks': []},
[36m(TaskRunner pid=155900)[0m                        'ref': {'entropy_checkpointing': False,
[36m(TaskRunner pid=155900)[0m                                'entropy_from_logits_with_chunking': False,
[36m(TaskRunner pid=155900)[0m                                'fsdp_config': {'forward_prefetch': False,
[36m(TaskRunner pid=155900)[0m                                                'param_offload': False,
[36m(TaskRunner pid=155900)[0m                                                'reshard_after_forward': True,
[36m(TaskRunner pid=155900)[0m                                                'wrap_policy': {'min_num_params': 0}},
[36m(TaskRunner pid=155900)[0m                                'log_prob_max_token_len_per_gpu': 16384,
[36m(TaskRunner pid=155900)[0m                                'log_prob_micro_batch_size': None,
[36m(TaskRunner pid=155900)[0m                                'log_prob_micro_batch_size_per_gpu': 80,
[36m(TaskRunner pid=155900)[0m                                'log_prob_use_dynamic_bsz': False,
[36m(TaskRunner pid=155900)[0m                                'strategy': 'fsdp',
[36m(TaskRunner pid=155900)[0m                                'ulysses_sequence_parallel_size': 1,
[36m(TaskRunner pid=155900)[0m                                'use_torch_compile': True},
[36m(TaskRunner pid=155900)[0m                        'rollout': {'agent': {'agent_loop_config_path': None,
[36m(TaskRunner pid=155900)[0m                                              'custom_async_server': {'name': None,
[36m(TaskRunner pid=155900)[0m                                                                      'path': None},
[36m(TaskRunner pid=155900)[0m                                              'num_workers': 8},
[36m(TaskRunner pid=155900)[0m                                    'calculate_log_probs': False,
[36m(TaskRunner pid=155900)[0m                                    'disable_log_stats': True,
[36m(TaskRunner pid=155900)[0m                                    'do_sample': True,
[36m(TaskRunner pid=155900)[0m                                    'dtype': 'bfloat16',
[36m(TaskRunner pid=155900)[0m                                    'enable_chunked_prefill': True,
[36m(TaskRunner pid=155900)[0m                                    'enforce_eager': True,
[36m(TaskRunner pid=155900)[0m                                    'engine_kwargs': {'sglang': {'attention_backend': None},
[36m(TaskRunner pid=155900)[0m                                                      'vllm': {'disable_mm_preprocessor_cache': False,
[36m(TaskRunner pid=155900)[0m                                                               'swap_space': None}},
[36m(TaskRunner pid=155900)[0m                                    'free_cache_engine': True,
[36m(TaskRunner pid=155900)[0m                                    'gpu_memory_utilization': 0.8,
[36m(TaskRunner pid=155900)[0m                                    'ignore_eos': False,
[36m(TaskRunner pid=155900)[0m                                    'layered_summon': False,
[36m(TaskRunner pid=155900)[0m                                    'load_format': 'dummy_dtensor',
[36m(TaskRunner pid=155900)[0m                                    'log_prob_max_token_len_per_gpu': 16384,
[36m(TaskRunner pid=155900)[0m                                    'log_prob_micro_batch_size': None,
[36m(TaskRunner pid=155900)[0m                                    'log_prob_micro_batch_size_per_gpu': 80,
[36m(TaskRunner pid=155900)[0m                                    'log_prob_use_dynamic_bsz': False,
[36m(TaskRunner pid=155900)[0m                                    'max_code_lines': 32,
[36m(TaskRunner pid=155900)[0m                                    'max_model_len': None,
[36m(TaskRunner pid=155900)[0m                                    'max_num_batched_tokens': 8192,
[36m(TaskRunner pid=155900)[0m                                    'max_num_seqs': 1024,
[36m(TaskRunner pid=155900)[0m                                    'mode': 'sync',
[36m(TaskRunner pid=155900)[0m                                    'multi_stage_wake_up': False,
[36m(TaskRunner pid=155900)[0m                                    'multi_turn': {'completion_callback': None,
[36m(TaskRunner pid=155900)[0m                                                   'enable': True,
[36m(TaskRunner pid=155900)[0m                                                   'format': 'hermes',
[36m(TaskRunner pid=155900)[0m                                                   'interaction_config_path': '/mnt/task_runtime/verl/examples/sglang_multiturn/config/interaction_config/gsm8k_interaction_config.yaml',
[36m(TaskRunner pid=155900)[0m                                                   'max_assistant_turns': 100000,
[36m(TaskRunner pid=155900)[0m                                                   'max_parallel_calls': 1,
[36m(TaskRunner pid=155900)[0m                                                   'max_tool_response_length': 256,
[36m(TaskRunner pid=155900)[0m                                                   'max_user_turns': 1,
[36m(TaskRunner pid=155900)[0m                                                   'tokenization_sanity_check_mode': 'strict',
[36m(TaskRunner pid=155900)[0m                                                   'tool_config_path': None,
[36m(TaskRunner pid=155900)[0m                                                   'tool_response_truncate_side': 'middle',
[36m(TaskRunner pid=155900)[0m                                                   'use_inference_chat_template': False},
[36m(TaskRunner pid=155900)[0m                                    'n': 5,
[36m(TaskRunner pid=155900)[0m                                    'name': 'sglang',
[36m(TaskRunner pid=155900)[0m                                    'per_turn_response_length': 16,
[36m(TaskRunner pid=155900)[0m                                    'prompt_length': 128,
[36m(TaskRunner pid=155900)[0m                                    'response_length': 1024,
[36m(TaskRunner pid=155900)[0m                                    'temperature': 1.0,
[36m(TaskRunner pid=155900)[0m                                    'tensor_model_parallel_size': 1,
[36m(TaskRunner pid=155900)[0m                                    'top_k': -1,
[36m(TaskRunner pid=155900)[0m                                    'top_p': 1,
[36m(TaskRunner pid=155900)[0m                                    'trace': {'backend': None,
[36m(TaskRunner pid=155900)[0m                                              'token2text': False},
[36m(TaskRunner pid=155900)[0m                                    'update_weights_bucket_megabytes': 512,
[36m(TaskRunner pid=155900)[0m                                    'val_kwargs': {'do_sample': False,
[36m(TaskRunner pid=155900)[0m                                                   'n': 1,
[36m(TaskRunner pid=155900)[0m                                                   'temperature': 0,
[36m(TaskRunner pid=155900)[0m                                                   'top_k': -1,
[36m(TaskRunner pid=155900)[0m                                                   'top_p': 1.0}}},
[36m(TaskRunner pid=155900)[0m  'algorithm': {'_target_': 'verl.trainer.config.AlgoConfig',
[36m(TaskRunner pid=155900)[0m                'adv_estimator': 'grpo',
[36m(TaskRunner pid=155900)[0m                'gamma': 1.0,
[36m(TaskRunner pid=155900)[0m                'kl_ctrl': {'_target_': 'verl.trainer.config.KLControlConfig',
[36m(TaskRunner pid=155900)[0m                            'horizon': 10000,
[36m(TaskRunner pid=155900)[0m                            'kl_coef': 0.001,
[36m(TaskRunner pid=155900)[0m                            'target_kl': 0.1,
[36m(TaskRunner pid=155900)[0m                            'type': 'fixed'},
[36m(TaskRunner pid=155900)[0m                'kl_penalty': 'kl',
[36m(TaskRunner pid=155900)[0m                'lam': 1.0,
[36m(TaskRunner pid=155900)[0m                'norm_adv_by_std_in_grpo': True,
[36m(TaskRunner pid=155900)[0m                'pf_ppo': {'_target_': 'verl.trainer.config.PFPPOConfig',
[36m(TaskRunner pid=155900)[0m                           'reweight_method': 'pow',
[36m(TaskRunner pid=155900)[0m                           'weight_pow': 2.0},
[36m(TaskRunner pid=155900)[0m                'use_kl_in_reward': False,
[36m(TaskRunner pid=155900)[0m                'use_pf_ppo': False},
[36m(TaskRunner pid=155900)[0m  'critic': {'_target_': 'verl.trainer.config.FSDPCriticConfig',
[36m(TaskRunner pid=155900)[0m             'checkpoint': {'load_contents': ['model', 'optimizer', 'extra'],
[36m(TaskRunner pid=155900)[0m                            'save_contents': ['model', 'optimizer', 'extra']},
[36m(TaskRunner pid=155900)[0m             'cliprange_value': 0.5,
[36m(TaskRunner pid=155900)[0m             'forward_max_token_len_per_gpu': 32768,
[36m(TaskRunner pid=155900)[0m             'forward_micro_batch_size': None,
[36m(TaskRunner pid=155900)[0m             'forward_micro_batch_size_per_gpu': None,
[36m(TaskRunner pid=155900)[0m             'grad_clip': 1.0,
[36m(TaskRunner pid=155900)[0m             'loss_agg_mode': 'token-mean',
[36m(TaskRunner pid=155900)[0m             'model': {'enable_activation_offload': False,
[36m(TaskRunner pid=155900)[0m                       'enable_gradient_checkpointing': True,
[36m(TaskRunner pid=155900)[0m                       'external_lib': None,
[36m(TaskRunner pid=155900)[0m                       'fsdp_config': {'forward_prefetch': False,
[36m(TaskRunner pid=155900)[0m                                       'fsdp_size': -1,
[36m(TaskRunner pid=155900)[0m                                       'offload_policy': False,
[36m(TaskRunner pid=155900)[0m                                       'optimizer_offload': False,
[36m(TaskRunner pid=155900)[0m                                       'param_offload': False,
[36m(TaskRunner pid=155900)[0m                                       'reshard_after_forward': True,
[36m(TaskRunner pid=155900)[0m                                       'wrap_policy': {'min_num_params': 0}},
[36m(TaskRunner pid=155900)[0m                       'lora_alpha': 16,
[36m(TaskRunner pid=155900)[0m                       'lora_rank': 0,
[36m(TaskRunner pid=155900)[0m                       'override_config': {},
[36m(TaskRunner pid=155900)[0m                       'path': '~/models/deepseek-llm-7b-chat',
[36m(TaskRunner pid=155900)[0m                       'target_modules': 'all-linear',
[36m(TaskRunner pid=155900)[0m                       'tokenizer_path': '/root/.cache/huggingface/hub/models--allenai--OLMo-2-0425-1B/snapshots/a1847dff35000b4271fa70afc5db10fd29fedbdf',
[36m(TaskRunner pid=155900)[0m                       'trust_remote_code': False,
[36m(TaskRunner pid=155900)[0m                       'use_remove_padding': False,
[36m(TaskRunner pid=155900)[0m                       'use_shm': False},
[36m(TaskRunner pid=155900)[0m             'optim': {'lr': 1e-05,
[36m(TaskRunner pid=155900)[0m                       'lr_warmup_steps_ratio': 0.0,
[36m(TaskRunner pid=155900)[0m                       'min_lr_ratio': None,
[36m(TaskRunner pid=155900)[0m                       'total_training_steps': -1,
[36m(TaskRunner pid=155900)[0m                       'warmup_style': 'constant',
[36m(TaskRunner pid=155900)[0m                       'weight_decay': 0.01},
[36m(TaskRunner pid=155900)[0m             'ppo_epochs': 1,
[36m(TaskRunner pid=155900)[0m             'ppo_max_token_len_per_gpu': 32768,
[36m(TaskRunner pid=155900)[0m             'ppo_micro_batch_size': None,
[36m(TaskRunner pid=155900)[0m             'ppo_micro_batch_size_per_gpu': None,
[36m(TaskRunner pid=155900)[0m             'ppo_mini_batch_size': 256,
[36m(TaskRunner pid=155900)[0m             'profiler': {'_target_': 'verl.utils.profiler.ProfilerConfig',
[36m(TaskRunner pid=155900)[0m                          'all_ranks': False,
[36m(TaskRunner pid=155900)[0m                          'discrete': False,
[36m(TaskRunner pid=155900)[0m                          'ranks': []},
[36m(TaskRunner pid=155900)[0m             'rollout_n': 5,
[36m(TaskRunner pid=155900)[0m             'shuffle': False,
[36m(TaskRunner pid=155900)[0m             'strategy': 'fsdp',
[36m(TaskRunner pid=155900)[0m             'ulysses_sequence_parallel_size': 1,
[36m(TaskRunner pid=155900)[0m             'use_dynamic_bsz': False},
[36m(TaskRunner pid=155900)[0m  'custom_reward_function': {'name': 'compute_score', 'path': None},
[36m(TaskRunner pid=155900)[0m  'data': {'custom_cls': {'name': None, 'path': None},
[36m(TaskRunner pid=155900)[0m           'datagen': {'name': None, 'path': None},
[36m(TaskRunner pid=155900)[0m           'dataloader_num_workers': 8,
[36m(TaskRunner pid=155900)[0m           'filter_overlong_prompts': True,
[36m(TaskRunner pid=155900)[0m           'filter_overlong_prompts_workers': 40,
[36m(TaskRunner pid=155900)[0m           'image_key': 'images',
[36m(TaskRunner pid=155900)[0m           'max_prompt_length': 128,
[36m(TaskRunner pid=155900)[0m           'max_response_length': 1024,
[36m(TaskRunner pid=155900)[0m           'prompt_key': 'prompt',
[36m(TaskRunner pid=155900)[0m           'return_full_prompt': False,
[36m(TaskRunner pid=155900)[0m           'return_multi_modal_inputs': True,
[36m(TaskRunner pid=155900)[0m           'return_raw_chat': True,
[36m(TaskRunner pid=155900)[0m           'return_raw_input_ids': False,
[36m(TaskRunner pid=155900)[0m           'reward_fn_key': 'data_source',
[36m(TaskRunner pid=155900)[0m           'sampler': {'class_name': None, 'class_path': None},
[36m(TaskRunner pid=155900)[0m           'shuffle': True,
[36m(TaskRunner pid=155900)[0m           'tokenizer': None,
[36m(TaskRunner pid=155900)[0m           'train_batch_size': 1024,
[36m(TaskRunner pid=155900)[0m           'train_files': '/mnt/task_runtime/opencoder_post.parquet',
[36m(TaskRunner pid=155900)[0m           'truncation': 'error',
[36m(TaskRunner pid=155900)[0m           'trust_remote_code': False,
[36m(TaskRunner pid=155900)[0m           'use_shm': False,
[36m(TaskRunner pid=155900)[0m           'val_batch_size': None,
[36m(TaskRunner pid=155900)[0m           'val_files': '/root/data/real_code/test.parquet',
[36m(TaskRunner pid=155900)[0m           'validation_shuffle': False,
[36m(TaskRunner pid=155900)[0m           'video_key': 'videos'},
[36m(TaskRunner pid=155900)[0m  'ray_init': {'num_cpus': None, 'timeline_json_file': None},
[36m(TaskRunner pid=155900)[0m  'reward_model': {'enable': False,
[36m(TaskRunner pid=155900)[0m                   'forward_max_token_len_per_gpu': 32768,
[36m(TaskRunner pid=155900)[0m                   'launch_reward_fn_async': False,
[36m(TaskRunner pid=155900)[0m                   'max_length': None,
[36m(TaskRunner pid=155900)[0m                   'micro_batch_size': None,
[36m(TaskRunner pid=155900)[0m                   'micro_batch_size_per_gpu': None,
[36m(TaskRunner pid=155900)[0m                   'model': {'external_lib': None,
[36m(TaskRunner pid=155900)[0m                             'fsdp_config': {'forward_prefetch': False,
[36m(TaskRunner pid=155900)[0m                                             'fsdp_size': -1,
[36m(TaskRunner pid=155900)[0m                                             'param_offload': False,
[36m(TaskRunner pid=155900)[0m                                             'reshard_after_forward': True,
[36m(TaskRunner pid=155900)[0m                                             'wrap_policy': {'min_num_params': 0}},
[36m(TaskRunner pid=155900)[0m                             'input_tokenizer': '/root/.cache/huggingface/hub/models--allenai--OLMo-2-0425-1B/snapshots/a1847dff35000b4271fa70afc5db10fd29fedbdf',
[36m(TaskRunner pid=155900)[0m                             'path': '~/models/FsfairX-LLaMA3-RM-v0.1',
[36m(TaskRunner pid=155900)[0m                             'trust_remote_code': False,
[36m(TaskRunner pid=155900)[0m                             'use_fused_kernels': False,
[36m(TaskRunner pid=155900)[0m                             'use_remove_padding': False,
[36m(TaskRunner pid=155900)[0m                             'use_shm': False},
[36m(TaskRunner pid=155900)[0m                   'profiler': {'_target_': 'verl.utils.profiler.ProfilerConfig',
[36m(TaskRunner pid=155900)[0m                                'all_ranks': False,
[36m(TaskRunner pid=155900)[0m                                'discrete': False,
[36m(TaskRunner pid=155900)[0m                                'ranks': []},
[36m(TaskRunner pid=155900)[0m                   'reward_manager': 'naive',
[36m(TaskRunner pid=155900)[0m                   'sandbox_fusion': {'max_concurrent': 64,
[36m(TaskRunner pid=155900)[0m                                      'memory_limit_mb': 1024,
[36m(TaskRunner pid=155900)[0m                                      'url': None},
[36m(TaskRunner pid=155900)[0m                   'strategy': 'fsdp',
[36m(TaskRunner pid=155900)[0m                   'ulysses_sequence_parallel_size': 1,
[36m(TaskRunner pid=155900)[0m                   'use_dynamic_bsz': False},
[36m(TaskRunner pid=155900)[0m  'trainer': {'balance_batch': True,
[36m(TaskRunner pid=155900)[0m              'controller_nsight_options': {'cuda-graph-trace': 'graph',
[36m(TaskRunner pid=155900)[0m                                            'cuda-memory-usage': 'true',
[36m(TaskRunner pid=155900)[0m                                            'trace': 'cuda,nvtx,cublas,ucx'},
[36m(TaskRunner pid=155900)[0m              'critic_warmup': 0,
[36m(TaskRunner pid=155900)[0m              'default_hdfs_dir': None,
[36m(TaskRunner pid=155900)[0m              'default_local_dir': '/mnt/task_wrapper/user_output/artifacts/checkpoints/em-new/openandsyn-ours-40-100-olmo-15warmup-003penalty-log-len12-nomean',
[36m(TaskRunner pid=155900)[0m              'del_local_ckpt_after_load': False,
[36m(TaskRunner pid=155900)[0m              'device': 'cuda',
[36m(TaskRunner pid=155900)[0m              'esi_redundant_time': 0,
[36m(TaskRunner pid=155900)[0m              'experiment_name': 'openandsyn-ours-40-100-olmo-15warmup-003penalty-log-len12-nomean',
[36m(TaskRunner pid=155900)[0m              'log_val_generations': 0,
[36m(TaskRunner pid=155900)[0m              'logger': ['console', 'wandb'],
[36m(TaskRunner pid=155900)[0m              'max_actor_ckpt_to_keep': None,
[36m(TaskRunner pid=155900)[0m              'max_critic_ckpt_to_keep': None,
[36m(TaskRunner pid=155900)[0m              'n_gpus_per_node': 8,
[36m(TaskRunner pid=155900)[0m              'nnodes': 1,
[36m(TaskRunner pid=155900)[0m              'npu_profile': {'options': {'analysis': True,
[36m(TaskRunner pid=155900)[0m                                          'level': 'level1',
[36m(TaskRunner pid=155900)[0m                                          'record_shapes': False,
[36m(TaskRunner pid=155900)[0m                                          'save_path': './profiler_data',
[36m(TaskRunner pid=155900)[0m                                          'with_cpu': True,
[36m(TaskRunner pid=155900)[0m                                          'with_memory': False,
[36m(TaskRunner pid=155900)[0m                                          'with_module': False,
[36m(TaskRunner pid=155900)[0m                                          'with_npu': True,
[36m(TaskRunner pid=155900)[0m                                          'with_stack': False}},
[36m(TaskRunner pid=155900)[0m              'profile_steps': None,
[36m(TaskRunner pid=155900)[0m              'project_name': 'em-new',
[36m(TaskRunner pid=155900)[0m              'q_steps': 60,
[36m(TaskRunner pid=155900)[0m              'ray_wait_register_center_timeout': 300,
[36m(TaskRunner pid=155900)[0m              'ref_update_freq': 100,
[36m(TaskRunner pid=155900)[0m              'resume_from_path': None,
[36m(TaskRunner pid=155900)[0m              'resume_mode': 'auto',
[36m(TaskRunner pid=155900)[0m              'rollout_data_dir': None,
[36m(TaskRunner pid=155900)[0m              'save_freq': 100,
[36m(TaskRunner pid=155900)[0m              'test_freq': -1,
[36m(TaskRunner pid=155900)[0m              'total_epochs': 1,
[36m(TaskRunner pid=155900)[0m              'total_training_steps': None,
[36m(TaskRunner pid=155900)[0m              'use_legacy_worker_impl': 'auto',
[36m(TaskRunner pid=155900)[0m              'val_before_train': False,
[36m(TaskRunner pid=155900)[0m              'val_only': False,
[36m(TaskRunner pid=155900)[0m              'validation_data_dir': None,
[36m(TaskRunner pid=155900)[0m              'worker_nsight_options': {'capture-range': 'cudaProfilerApi',
[36m(TaskRunner pid=155900)[0m                                        'capture-range-end': None,
[36m(TaskRunner pid=155900)[0m                                        'cuda-graph-trace': 'graph',
[36m(TaskRunner pid=155900)[0m                                        'cuda-memory-usage': 'true',
[36m(TaskRunner pid=155900)[0m                                        'kill': 'none',
[36m(TaskRunner pid=155900)[0m                                        'trace': 'cuda,nvtx,cublas,ucx'}}}
[36m(TaskRunner pid=155900)[0m 2025-08-24 06:05:29.996934: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
[36m(TaskRunner pid=155900)[0m 2025-08-24 06:05:30.011934: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:485] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
[36m(TaskRunner pid=155900)[0m 2025-08-24 06:05:30.027578: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:8454] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
[36m(TaskRunner pid=155900)[0m 2025-08-24 06:05:30.031417: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1452] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
[36m(TaskRunner pid=155900)[0m 2025-08-24 06:05:30.041503: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[36m(TaskRunner pid=155900)[0m To enable the following instructions: AVX2 AVX512F AVX512_VNNI AVX512_BF16 AVX512_FP16 AVX_VNNI AMX_TILE AMX_INT8 AMX_BF16 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[36m(TaskRunner pid=155900)[0m 2025-08-24 06:05:30.901214: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[36m(TaskRunner pid=155900)[0m Using dataset class: RLHFDataset
[36m(TaskRunner pid=155900)[0m Setting TOKENIZERS_PARALLELISM=false for forked processes.
[36m(TaskRunner pid=155900)[0m WARNING:2025-08-24 06:05:34,476:Setting TOKENIZERS_PARALLELISM=false for forked processes.
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   0%|          | 0/1914690 [00:00<?, ? examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   0%|          | 1000/1914690 [00:01<35:47, 891.26 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   0%|          | 4000/1914690 [00:01<08:10, 3894.92 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   0%|          | 9000/1914690 [00:01<03:28, 9123.28 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   1%|          | 16000/1914690 [00:01<01:55, 16487.32 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   1%|▏         | 24000/1914690 [00:01<01:12, 25981.96 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   2%|▏         | 29000/1914690 [00:01<01:06, 28466.80 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   2%|▏         | 39000/1914690 [00:01<00:44, 42254.37 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   2%|▏         | 47000/1914690 [00:02<00:38, 49057.00 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   3%|▎         | 56000/1914690 [00:02<00:31, 58558.64 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   3%|▎         | 66000/1914690 [00:02<00:30, 61211.32 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   4%|▍         | 83000/1914690 [00:02<00:21, 85222.54 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   5%|▍         | 93000/1914690 [00:02<00:21, 86061.86 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   6%|▌         | 108000/1914690 [00:02<00:19, 91138.46 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   7%|▋         | 127000/1914690 [00:02<00:16, 110068.98 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   7%|▋         | 140000/1914690 [00:02<00:15, 115045.59 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   8%|▊         | 154000/1914690 [00:03<00:14, 120566.77 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   9%|▉         | 170000/1914690 [00:03<00:15, 115361.08 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  10%|█         | 195000/1914690 [00:03<00:11, 145407.91 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  11%|█         | 212000/1914690 [00:03<00:11, 147256.18 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  12%|█▏        | 229000/1914690 [00:03<00:12, 135357.26 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  13%|█▎        | 250000/1914690 [00:03<00:10, 153970.71 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  14%|█▍        | 276000/1914690 [00:03<00:09, 176942.05 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  15%|█▌        | 296000/1914690 [00:03<00:08, 182638.70 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  16%|█▋        | 315000/1914690 [00:03<00:08, 181412.04 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  18%|█▊        | 337000/1914690 [00:04<00:08, 190604.29 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  19%|█▉        | 365000/1914690 [00:04<00:07, 215268.63 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  20%|██        | 387000/1914690 [00:04<00:07, 198819.48 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  22%|██▏       | 412000/1914690 [00:04<00:07, 211518.80 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  23%|██▎       | 434000/1914690 [00:04<00:06, 211630.17 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  24%|██▍       | 457000/1914690 [00:04<00:06, 216103.73 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  25%|██▌       | 485000/1914690 [00:04<00:06, 227749.24 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  27%|██▋       | 508000/1914690 [00:04<00:06, 216612.59 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  28%|██▊       | 535000/1914690 [00:04<00:06, 228415.73 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  29%|██▉       | 559000/1914690 [00:05<00:05, 226558.19 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  30%|███       | 583000/1914690 [00:05<00:05, 230034.09 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  32%|███▏      | 607000/1914690 [00:05<00:05, 225201.00 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  33%|███▎      | 633000/1914690 [00:05<00:05, 233926.00 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  34%|███▍      | 657000/1914690 [00:05<00:05, 226547.45 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  36%|███▌      | 682000/1914690 [00:05<00:05, 231380.89 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  37%|███▋      | 706000/1914690 [00:05<00:05, 220055.94 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  38%|███▊      | 732000/1914690 [00:05<00:05, 229813.80 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  39%|███▉      | 756000/1914690 [00:05<00:05, 228678.55 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  41%|████      | 779000/1914690 [00:06<00:05, 220123.24 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  42%|████▏     | 807000/1914690 [00:06<00:04, 230375.38 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  43%|████▎     | 831000/1914690 [00:06<00:04, 222488.34 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  45%|████▍     | 855000/1914690 [00:06<00:04, 224185.44 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  46%|████▋     | 887000/1914690 [00:06<00:04, 241897.73 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  48%|████▊     | 912000/1914690 [00:06<00:04, 242662.54 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  49%|████▉     | 937000/1914690 [00:06<00:04, 230464.41 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  50%|█████     | 962000/1914690 [00:06<00:04, 232401.48 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  51%|█████▏    | 986000/1914690 [00:06<00:03, 232402.55 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  53%|█████▎    | 1010000/1914690 [00:07<00:04, 226033.73 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  54%|█████▍    | 1039000/1914690 [00:07<00:03, 239339.74 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  56%|█████▌    | 1064000/1914690 [00:07<00:03, 227113.41 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  57%|█████▋    | 1092000/1914690 [00:07<00:03, 241468.71 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  58%|█████▊    | 1117000/1914690 [00:07<00:03, 231079.06 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  60%|█████▉    | 1143000/1914690 [00:07<00:03, 237072.82 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  61%|██████    | 1167000/1914690 [00:07<00:03, 233514.36 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  62%|██████▏   | 1193000/1914690 [00:07<00:03, 234861.50 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  64%|██████▎   | 1219000/1914690 [00:07<00:02, 237423.75 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  65%|██████▍   | 1243000/1914690 [00:08<00:02, 236816.13 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  66%|██████▋   | 1269000/1914690 [00:08<00:02, 235751.05 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  68%|██████▊   | 1293000/1914690 [00:08<00:02, 233564.66 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  69%|██████▉   | 1319000/1914690 [00:08<00:02, 240024.44 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  70%|███████   | 1344000/1914690 [00:08<00:02, 233244.59 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  72%|███████▏  | 1371000/1914690 [00:08<00:02, 242857.76 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  73%|███████▎  | 1396000/1914690 [00:08<00:02, 230204.46 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  74%|███████▍  | 1422868/1914690 [00:08<00:02, 232291.80 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  76%|███████▌  | 1450868/1914690 [00:08<00:01, 243513.88 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  77%|███████▋  | 1475868/1914690 [00:09<00:01, 227304.73 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  78%|███████▊  | 1500604/1914690 [00:09<00:01, 229678.73 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  80%|███████▉  | 1527472/1914690 [00:09<00:01, 234545.66 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  81%|████████  | 1551208/1914690 [00:09<00:01, 214630.24 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  82%|████████▏ | 1573208/1914690 [00:09<00:01, 214755.92 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  83%|████████▎ | 1595208/1914690 [00:09<00:01, 210602.45 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  84%|████████▍ | 1616943/1914690 [00:09<00:01, 206696.72 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  86%|████████▌ | 1639545/1914690 [00:09<00:01, 211242.85 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  87%|████████▋ | 1661545/1914690 [00:09<00:01, 192795.20 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  88%|████████▊ | 1681545/1914690 [00:10<00:01, 181437.01 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  89%|████████▉ | 1702412/1914690 [00:10<00:01, 186357.59 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  90%|████████▉ | 1722280/1914690 [00:10<00:01, 174346.73 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  91%|█████████ | 1740881/1914690 [00:10<00:01, 167231.50 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  92%|█████████▏| 1759616/1914690 [00:10<00:00, 169541.36 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  93%|█████████▎| 1777483/1914690 [00:10<00:00, 156161.94 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  94%|█████████▎| 1794217/1914690 [00:10<00:00, 142385.20 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  94%|█████████▍| 1808951/1914690 [00:10<00:00, 137849.44 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  95%|█████████▌| 1823685/1914690 [00:11<00:00, 129205.52 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  96%|█████████▌| 1837552/1914690 [00:11<00:00, 117985.75 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  97%|█████████▋| 1850419/1914690 [00:11<00:00, 109199.42 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  97%|█████████▋| 1862153/1914690 [00:11<00:00, 99208.63 examples/s] 
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  98%|█████████▊| 1873020/1914690 [00:11<00:00, 89648.49 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  98%|█████████▊| 1882887/1914690 [00:11<00:00, 78678.63 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  99%|█████████▉| 1891887/1914690 [00:11<00:00, 73238.34 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  99%|█████████▉| 1899621/1914690 [00:12<00:00, 68578.84 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40): 100%|█████████▉| 1907089/1914690 [00:12<00:00, 53176.90 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40): 100%|█████████▉| 1912956/1914690 [00:12<00:00, 40340.46 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40): 100%|██████████| 1914690/1914690 [00:12<00:00, 148840.24 examples/s]
[36m(TaskRunner pid=155900)[0m Setting TOKENIZERS_PARALLELISM=false for forked processes.
[36m(TaskRunner pid=155900)[0m WARNING:2025-08-24 06:05:47,937:Setting TOKENIZERS_PARALLELISM=false for forked processes.
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   0%|          | 0/629183 [00:00<?, ? examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   0%|          | 1000/629183 [00:01<11:06, 942.14 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   0%|          | 3000/629183 [00:01<03:18, 3157.48 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   1%|          | 6000/629183 [00:01<01:34, 6604.69 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   2%|▏         | 11000/629183 [00:01<00:46, 13420.59 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   3%|▎         | 16000/629183 [00:01<00:32, 18607.89 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   4%|▍         | 25000/629183 [00:01<00:18, 32229.84 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   5%|▌         | 33000/629183 [00:01<00:15, 37874.11 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   7%|▋         | 44000/629183 [00:01<00:11, 52567.50 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):   9%|▊         | 55000/629183 [00:02<00:08, 65818.06 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  10%|█         | 66000/629183 [00:02<00:08, 69612.77 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  13%|█▎        | 82000/629183 [00:02<00:06, 89942.68 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  15%|█▌        | 96000/629183 [00:02<00:05, 102452.04 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  17%|█▋        | 108000/629183 [00:02<00:05, 94960.29 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  21%|██        | 132000/629183 [00:02<00:04, 121775.24 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  23%|██▎       | 145000/629183 [00:02<00:04, 113424.61 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  28%|██▊       | 174000/629183 [00:02<00:02, 151940.06 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  30%|███       | 190730/629183 [00:03<00:03, 136960.04 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  35%|███▍      | 220190/629183 [00:03<00:02, 171239.68 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  38%|███▊      | 238920/629183 [00:03<00:02, 152073.51 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  42%|████▏     | 262380/629183 [00:03<00:02, 170212.30 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  45%|████▍     | 281110/629183 [00:03<00:02, 149698.52 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  49%|████▉     | 310570/629183 [00:03<00:01, 173354.55 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  52%|█████▏    | 330300/629183 [00:03<00:01, 161237.93 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  56%|█████▋    | 354030/629183 [00:03<00:01, 176756.09 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  60%|█████▉    | 374760/629183 [00:04<00:01, 182679.15 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  63%|██████▎   | 394220/629183 [00:04<00:01, 181526.46 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  66%|██████▌   | 413680/629183 [00:04<00:01, 175907.68 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  69%|██████▊   | 431680/629183 [00:04<00:01, 173122.50 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  72%|███████▏  | 453410/629183 [00:04<00:01, 170649.96 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  75%|███████▌  | 472870/629183 [00:04<00:00, 176924.73 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  78%|███████▊  | 491330/629183 [00:04<00:00, 167512.32 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  81%|████████  | 508330/629183 [00:04<00:00, 153284.57 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  83%|████████▎ | 524790/629183 [00:05<00:00, 152095.25 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  86%|████████▌ | 540519/629183 [00:05<00:00, 147174.79 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  88%|████████▊ | 555977/629183 [00:05<00:00, 138138.55 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  91%|█████████ | 570706/629183 [00:05<00:00, 125600.80 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  93%|█████████▎| 584164/629183 [00:05<00:00, 114416.45 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  95%|█████████▍| 595893/629183 [00:05<00:00, 103657.60 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  97%|█████████▋| 607351/629183 [00:05<00:00, 95037.72 examples/s] 
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40):  98%|█████████▊| 617538/629183 [00:06<00:00, 76721.94 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40): 100%|█████████▉| 626454/629183 [00:06<00:00, 56671.66 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=40): 100%|██████████| 629183/629183 [00:06<00:00, 92630.25 examples/s]
[36m(TaskRunner pid=155900)[0m dataset len: 2273099
[36m(TaskRunner pid=155900)[0m Using dataset class: RLHFDataset
[36m(TaskRunner pid=155900)[0m num_proc must be <= 10. Reducing num_proc to 10 for dataset of size 10.
[36m(TaskRunner pid=155900)[0m WARNING:2025-08-24 06:05:55,325:num_proc must be <= 10. Reducing num_proc to 10 for dataset of size 10.
[36m(TaskRunner pid=155900)[0m Setting TOKENIZERS_PARALLELISM=false for forked processes.
[36m(TaskRunner pid=155900)[0m WARNING:2025-08-24 06:05:55,326:Setting TOKENIZERS_PARALLELISM=false for forked processes.
[36m(TaskRunner pid=155900)[0m Filter (num_proc=10):   0%|          | 0/10 [00:00<?, ? examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=10):  10%|█         | 1/10 [00:00<00:04,  1.81 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=10):  30%|███       | 3/10 [00:00<00:01,  5.33 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=10):  50%|█████     | 5/10 [00:00<00:00,  7.45 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=10):  70%|███████   | 7/10 [00:01<00:00,  8.77 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=10):  90%|█████████ | 9/10 [00:01<00:00,  9.99 examples/s]
[36m(TaskRunner pid=155900)[0m Filter (num_proc=10): 100%|██████████| 10/10 [00:01<00:00,  7.24 examples/s]
[36m(TaskRunner pid=155900)[0m DeprecationWarning: `ray.state.available_resources_per_node` is a private attribute and access will be removed in a future Ray version.
[36m(TaskRunner pid=155900)[0m dataset len: 9
[36m(TaskRunner pid=155900)[0m [validate_config] All configuration checks passed successfully!
[36m(TaskRunner pid=155900)[0m Size of train dataloader: 2219, Size of val dataloader: 1
[36m(TaskRunner pid=155900)[0m Total training steps: 2219
[36m(TaskRunner pid=155900)[0m colocated worker base class <class 'verl.single_controller.base.worker.Worker'>
[36m(TaskRunner pid=155900)[0m WARNING:2025-08-24 06:05:57,566:Waiting for register center actor X1aolg_register_center to be ready. Elapsed time: 0 seconds out of 300 seconds.
[36m(pid=167832)[0m 2025-08-24 06:06:03.819666: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
[36m(pid=167832)[0m 2025-08-24 06:06:03.833442: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:485] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
[36m(pid=167832)[0m 2025-08-24 06:06:03.850224: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:8454] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
[36m(pid=167832)[0m 2025-08-24 06:06:03.855057: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1452] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
[36m(pid=167832)[0m 2025-08-24 06:06:03.867061: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[36m(pid=167832)[0m To enable the following instructions: AVX2 AVX512F AVX512_VNNI AVX512_BF16 AVX512_FP16 AVX_VNNI AMX_TILE AMX_INT8 AMX_BF16 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[36m(pid=167832)[0m 2025-08-24 06:06:04.810033: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[36m(pid=168168)[0m 2025-08-24 06:06:15.348279: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
[36m(pid=168168)[0m 2025-08-24 06:06:15.361776: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:485] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
[36m(pid=168168)[0m 2025-08-24 06:06:15.378310: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:8454] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
[36m(pid=168168)[0m 2025-08-24 06:06:15.383193: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1452] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
[36m(pid=168168)[0m 2025-08-24 06:06:15.395082: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[36m(pid=168168)[0m To enable the following instructions: AVX2 AVX512F AVX512_VNNI AVX512_BF16 AVX512_FP16 AVX_VNNI AMX_TILE AMX_INT8 AMX_BF16 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[36m(pid=168166)[0m 2025-08-24 06:06:16.211044: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
[36m(pid=168166)[0m 2025-08-24 06:06:16.224425: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:485] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
[36m(pid=168166)[0m 2025-08-24 06:06:16.240866: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:8454] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
[36m(pid=168166)[0m 2025-08-24 06:06:16.245652: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1452] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
[36m(pid=168166)[0m 2025-08-24 06:06:16.257448: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[36m(pid=168166)[0m To enable the following instructions: AVX2 AVX512F AVX512_VNNI AVX512_BF16 AVX512_FP16 AVX_VNNI AMX_TILE AMX_INT8 AMX_BF16 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[36m(pid=168168)[0m 2025-08-24 06:06:16.373041: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[36m(WorkerDict pid=168171)[0m You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.
[36m(WorkerDict pid=168171)[0m Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]
[36m(WorkerDict pid=168171)[0m Loading checkpoint shards:  50%|█████     | 1/2 [00:01<00:01,  1.93s/it]
[36m(pid=168172)[0m 2025-08-24 06:06:17.474041: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.[32m [repeated 5x across cluster] (Ray deduplicates logs by default. Set RAY_DEDUP_LOGS=0 to disable log deduplication, or see https://docs.ray.io/en/master/ray-observability/user-guides/configure-logging.html#log-deduplication for more options.)[0m
[36m(pid=168172)[0m 2025-08-24 06:06:17.488282: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:485] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered[32m [repeated 5x across cluster][0m
[36m(pid=168172)[0m 2025-08-24 06:06:17.504915: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:8454] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered[32m [repeated 5x across cluster][0m
[36m(pid=168167)[0m 2025-08-24 06:06:17.509745: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1452] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered[32m [repeated 5x across cluster][0m
[36m(pid=168172)[0m 2025-08-24 06:06:17.522161: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 5x across cluster][0m
[36m(pid=168172)[0m To enable the following instructions: AVX2 AVX512F AVX512_VNNI AVX512_BF16 AVX512_FP16 AVX_VNNI AMX_TILE AMX_INT8 AMX_BF16 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 5x across cluster][0m
[36m(pid=168172)[0m 2025-08-24 06:06:18.533446: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 6x across cluster][0m
[36m(WorkerDict pid=167832)[0m Model config after override: Olmo2Config {
[36m(WorkerDict pid=167832)[0m   "architectures": [
[36m(WorkerDict pid=167832)[0m     "Olmo2ForCausalLM"
[36m(WorkerDict pid=167832)[0m   ],
[36m(WorkerDict pid=167832)[0m   "attention_bias": false,
[36m(WorkerDict pid=167832)[0m   "attention_dropout": 0.0,
[36m(WorkerDict pid=167832)[0m   "bos_token_id": 100257,
[36m(WorkerDict pid=167832)[0m   "eos_token_id": 100257,
[36m(WorkerDict pid=167832)[0m   "hidden_act": "silu",
[36m(WorkerDict pid=167832)[0m   "hidden_size": 2048,
[36m(WorkerDict pid=167832)[0m   "initializer_range": 0.02,
[36m(WorkerDict pid=167832)[0m   "intermediate_size": 8192,
[36m(WorkerDict pid=167832)[0m   "max_position_embeddings": 4096,
[36m(WorkerDict pid=167832)[0m   "model_type": "olmo2",
[36m(WorkerDict pid=167832)[0m   "num_attention_heads": 16,
[36m(WorkerDict pid=167832)[0m   "num_hidden_layers": 16,
[36m(WorkerDict pid=167832)[0m   "num_key_value_heads": 16,
[36m(WorkerDict pid=167832)[0m   "pad_token_id": 100277,
[36m(WorkerDict pid=167832)[0m   "rms_norm_eps": 1e-06,
[36m(WorkerDict pid=167832)[0m   "rope_scaling": null,
[36m(WorkerDict pid=167832)[0m   "rope_theta": 500000,
[36m(WorkerDict pid=167832)[0m   "tie_word_embeddings": false,
[36m(WorkerDict pid=167832)[0m   "torch_dtype": "float32",
[36m(WorkerDict pid=167832)[0m   "transformers_version": "4.51.1",
[36m(WorkerDict pid=167832)[0m   "use_cache": true,
[36m(WorkerDict pid=167832)[0m   "vocab_size": 100352
[36m(WorkerDict pid=167832)[0m }
[36m(WorkerDict pid=167832)[0m 
[36m(WorkerDict pid=168171)[0m Monkey patch _flash_attention_forward in transformers.integrations.flash_attention
[36m(WorkerDict pid=168171)[0m Skipping monkey patch for Olmo2ForCausalLM as use_fused_kernels is False or fused_kernels_backend is torch
[36m(WorkerDict pid=168171)[0m Loading checkpoint shards: 100%|██████████| 2/2 [00:02<00:00,  1.02s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:02<00:00,  1.16s/it]
[36m(WorkerDict pid=167832)[0m Olmo2ForCausalLM contains 1.48B parameters
[36m(WorkerDict pid=167832)[0m wrap_policy: functools.partial(<function _or_policy at 0x7d18d05d2f80>, policies=[functools.partial(<function transformer_auto_wrap_policy at 0x7d18d05d2e60>, transformer_layer_cls={<class 'transformers.models.olmo2.modeling_olmo2.Olmo2DecoderLayer'>})])
[36m(WorkerDict pid=167832)[0m NCCL version 2.21.5+cuda12.4
[36m(WorkerDict pid=167832)[0m 
[36m(WorkerDict pid=167832)[0m bolt-zju7e9bb4a-5ru8bui3ka:167832:169583 [0] /nccl-shim-net/src/guest_config_checker.cc:101 NCCL WARN NCCL/NET (shim) mismatch recommended: NCCL_FASTRAK_LLCM_DEVICE_DIRECTORY=/dev/aperture_devices (expected unset)
[36m(WorkerDict pid=167832)[0m 
[36m(WorkerDict pid=167832)[0m bolt-zju7e9bb4a-5ru8bui3ka:167832:169583 [0] /nccl-shim-net/src/guest_config_checker.cc:101 NCCL WARN NCCL/NET (shim) mismatch recommended: NCCL_LIB_DIR=/usr/local/nvidia/lib64 (expected unset)
[36m(WorkerDict pid=167832)[0m 
[36m(WorkerDict pid=167832)[0m bolt-zju7e9bb4a-5ru8bui3ka:167832:169583 [0] /nccl-shim-net/src/guest_config_checker.cc:101 NCCL WARN NCCL/NET (shim) mismatch recommended: NCCL_DYNAMIC_CHUNK_SIZE=524288 (expected unset)
[36m(WorkerDict pid=167832)[0m 
[36m(WorkerDict pid=167832)[0m bolt-zju7e9bb4a-5ru8bui3ka:167832:169583 [0] /nccl-shim-net/src/guest_config_checker.cc:101 NCCL WARN NCCL/NET (shim) mismatch recommended: NCCL_TESTS_VERSION=2.13.6 (expected unset)
[36m(WorkerDict pid=167832)[0m 
[36m(WorkerDict pid=167832)[0m bolt-zju7e9bb4a-5ru8bui3ka:167832:169583 [0] /nccl-shim-net/src/guest_config_checker.cc:101 NCCL WARN NCCL/NET (shim) mismatch recommended: cpu affinity settings not subset, curr=0xffff,ffffffff,ffffffff,ffffffff,ffffffff,ffffffff,ffffffff (expected 0xffffffff,00000000)
[36m(WorkerDict pid=168168)[0m 
[36m(WorkerDict pid=168168)[0m 
[36m(WorkerDict pid=168168)[0m 
[36m(WorkerDict pid=168168)[0m 
[36m(WorkerDict pid=168168)[0m 
[36m(WorkerDict pid=168171)[0m 
[36m(WorkerDict pid=168171)[0m 
[36m(WorkerDict pid=168171)[0m 
[36m(WorkerDict pid=168171)[0m 
[36m(WorkerDict pid=168171)[0m 
[36m(WorkerDict pid=168170)[0m 
[36m(WorkerDict pid=168170)[0m 
[36m(WorkerDict pid=168170)[0m 
[36m(WorkerDict pid=168170)[0m 
[36m(WorkerDict pid=168170)[0m 
[36m(WorkerDict pid=168166)[0m 
[36m(WorkerDict pid=168166)[0m 
[36m(WorkerDict pid=168166)[0m 
[36m(WorkerDict pid=168166)[0m 
[36m(WorkerDict pid=168166)[0m 
[36m(WorkerDict pid=168172)[0m 
[36m(WorkerDict pid=168172)[0m 
[36m(WorkerDict pid=168172)[0m 
[36m(WorkerDict pid=168172)[0m 
[36m(WorkerDict pid=168172)[0m 
[36m(WorkerDict pid=168167)[0m 
[36m(WorkerDict pid=168167)[0m 
[36m(WorkerDict pid=168167)[0m 
[36m(WorkerDict pid=168167)[0m 
[36m(WorkerDict pid=168167)[0m 
[36m(WorkerDict pid=168169)[0m 
[36m(WorkerDict pid=168169)[0m 
[36m(WorkerDict pid=168169)[0m 
[36m(WorkerDict pid=168169)[0m 
[36m(WorkerDict pid=168169)[0m 
[36m(WorkerDict pid=167832)[0m 
[36m(WorkerDict pid=167832)[0m bolt-zju7e9bb4a-5ru8bui3ka:167832:169583 [0] /nccl-tuner-config-based/src/config_based_tuner.cc:155 NCCL WARN Cannot find communicatorTunerConfig for communicator(num_node:1, num_rank:8) with config:communicator_configs {
[36m(WorkerDict pid=167832)[0m   node_range {
[36m(WorkerDict pid=167832)[0m     min: 2
[36m(WorkerDict pid=167832)[0m     max: 3
[36m(WorkerDict pid=167832)[0m   }
[36m(WorkerDict pid=167832)[0m   rank_per_node_range {
[36m(WorkerDict pid=167832)[0m     min: 1
[36m(WorkerDict pid=167832)[0m     max: 2
[36m(WorkerDict pid=167832)[0m   }
[36m(WorkerDict pid=167832)[0m   coll_configs {
[36m(WorkerDict pid=167832)[0m     coll_type: COLL_ALL_REDUCE
[36m(WorkerDict pid=167832)[0m     msg_size_tuning_rules {
[36m(WorkerDict pid=167832)[0m       per_rank_message_size {
[36m(WorkerDict pid=167832)[0m         min: 0
[36m(WorkerDict pid=167832)[0m       }
[36m(WorkerDict pid=167832)[0m       coll_tuning_spec {
[36m(WorkerDict pid=167832)[0m         num_channel: 2
[36m(WorkerDict pid=167832)[0m         protocol: PROTO_SIMPLE
[36m(WorkerDict pid=167832)[0m         algorithm: ALGO_TREE
[36m(WorkerDict pid=167832)[0m       }
[36m(WorkerDict pid=167832)[0m     }
[36m(WorkerDict pid=167832)[0m   }
[36m(WorkerDict pid=167832)[0m   coll_configs {
[36m(WorkerDict pid=167832)[0m     coll_type: COLL_DEFAULT
[36m(WorkerDict pid=167832)[0m     msg_size_tuning_rules {
[36m(WorkerDict pid=167832)[0m       per_rank_message_size {
[36m(WorkerDict pid=167832)[0m         min: 0
[36m(WorkerDict pid=167832)[0m         max: 65536
[36m(WorkerDict pid=167832)[0m       }
[36m(WorkerDict pid=167832)[0m       coll_tuning_spec {
[36m(WorkerDict pid=167832)[0m         num_channel: 2
[36m(WorkerDict pid=167832)[0m         protocol: PROTO_SIMPLE
[36m(WorkerDict pid=167832)[0m         algorithm: ALGO_RING
[36m(WorkerDict pid=167832)[0m       }
[36m(WorkerDict pid=167832)[0m     }
[36m(WorkerDict pid=167832)[0m     msg_size_tuning_rules {
[36m(WorkerDict pid=167832)[0m       per_rank_message_size {
[36m(WorkerDict pid=167832)[0m         min: 65536
[36m(WorkerDict pid=167832)[0m       }
[36m(WorkerDict pid=167832)[0m       coll_tuning_spec {
[36m(WorkerDict pid=167832)[0m         num_channel: 4
[36m(WorkerDict pid=167832)[0m         protocol: PROTO_SIMPLE
[36m(WorkerDict pid=167832)[0m         algorithm: ALGO
[36m(WorkerDict pid=167832)[0m 
[36m(WorkerDict pid=167832)[0m bolt-zju7e9bb4a-5ru8bui3ka:167832:169583 [0] /nccl-tuner-config-based/src/config_based_tuner.cc:271 NCCL WARN No communicator config selected from config:communicator_configs {
[36m(WorkerDict pid=167832)[0m   node_range {
[36m(WorkerDict pid=167832)[0m     min: 2
[36m(WorkerDict pid=167832)[0m     max: 3
[36m(WorkerDict pid=167832)[0m   }
[36m(WorkerDict pid=167832)[0m   rank_per_node_range {
[36m(WorkerDict pid=167832)[0m     min: 1
[36m(WorkerDict pid=167832)[0m     max: 2
[36m(WorkerDict pid=167832)[0m   }
[36m(WorkerDict pid=167832)[0m   coll_configs {
[36m(WorkerDict pid=167832)[0m     coll_type: COLL_ALL_REDUCE
[36m(WorkerDict pid=167832)[0m     msg_size_tuning_rules {
[36m(WorkerDict pid=167832)[0m       per_rank_message_size {
[36m(WorkerDict pid=167832)[0m         min: 0
[36m(WorkerDict pid=167832)[0m       }
[36m(WorkerDict pid=167832)[0m       coll_tuning_spec {
[36m(WorkerDict pid=167832)[0m         num_channel: 2
[36m(WorkerDict pid=167832)[0m         protocol: PROTO_SIMPLE
[36m(WorkerDict pid=167832)[0m         algorithm: ALGO_TREE
[36m(WorkerDict pid=167832)[0m       }
[36m(WorkerDict pid=167832)[0m     }
[36m(WorkerDict pid=167832)[0m   }
[36m(WorkerDict pid=167832)[0m   coll_configs {
[36m(WorkerDict pid=167832)[0m     coll_type: COLL_DEFAULT
[36m(WorkerDict pid=167832)[0m     msg_size_tuning_rules {
[36m(WorkerDict pid=167832)[0m       per_rank_message_size {
[36m(WorkerDict pid=167832)[0m         min: 0
[36m(WorkerDict pid=167832)[0m         max: 65536
[36m(WorkerDict pid=167832)[0m       }
[36m(WorkerDict pid=167832)[0m       coll_tuning_spec {
[36m(WorkerDict pid=167832)[0m         num_channel: 2
[36m(WorkerDict pid=167832)[0m         protocol: PROTO_SIMPLE
[36m(WorkerDict pid=167832)[0m         algorithm: ALGO_RING
[36m(WorkerDict pid=167832)[0m       }
[36m(WorkerDict pid=167832)[0m     }
[36m(WorkerDict pid=167832)[0m     msg_size_tuning_rules {
[36m(WorkerDict pid=167832)[0m       per_rank_message_size {
[36m(WorkerDict pid=167832)[0m         min: 65536
[36m(WorkerDict pid=167832)[0m       }
[36m(WorkerDict pid=167832)[0m       coll_tuning_spec {
[36m(WorkerDict pid=167832)[0m         num_channel: 4
[36m(WorkerDict pid=167832)[0m         protocol: PROTO_SIMPLE
[36m(WorkerDict pid=167832)[0m         algorithm: ALGO_RING
[36m(WorkerDict pid=167832)[0m       }
[36m(WorkerDict pid=167832)[0m     }
[36m(WorkerDict pid=167832)[0m   }
[36m(WorkerDict pid=167832)[0m }
[36m(WorkerDict pid=167832)[0m communicator_config
[36m(WorkerDict pid=167832)[0m 
[36m(WorkerDict pid=167832)[0m bolt-zju7e9bb4a-5ru8bui3ka:167832:169583 [0] /nccl-tuner-config-based/src/tuner_tcpx.cc:70 NCCL WARN No communicator found for nRanks:8, nNodes:1 from config_path:/usr/local/nvidia/lib64/a3plus_tuner_config.textproto
[36m(WorkerDict pid=167832)[0m Monkey patch _flash_attention_forward in transformers.integrations.flash_attention[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=167832)[0m Skipping monkey patch for Olmo2ForCausalLM as use_fused_kernels is False or fused_kernels_backend is torch[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=168169)[0m bolt-zju7e9bb4a-5ru8bui3ka:168169:169606 [0] /nccl-shim-net/src/guest_config_checker.cc:101 NCCL WARN NCCL/NET (shim) mismatch recommended: NCCL_FASTRAK_LLCM_DEVICE_DIRECTORY=/dev/aperture_devices (expected unset)[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=168169)[0m bolt-zju7e9bb4a-5ru8bui3ka:168169:169606 [0] /nccl-shim-net/src/guest_config_checker.cc:101 NCCL WARN NCCL/NET (shim) mismatch recommended: NCCL_TESTS_VERSION=2.13.6 (expected unset)[32m [repeated 21x across cluster][0m
[36m(WorkerDict pid=168169)[0m bolt-zju7e9bb4a-5ru8bui3ka:168169:169606 [0] /nccl-shim-net/src/guest_config_checker.cc:101 NCCL WARN NCCL/NET (shim) mismatch recommended: cpu affinity settings not subset, curr=0xffff,ffffffff,ffffffff,ffffffff,ffffffff,ffffffff,ffffffff (expected 0xffffffff,00000000)[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=168168)[0m 
[36m(WorkerDict pid=168168)[0m   }
[36m(WorkerDict pid=168168)[0m   }
[36m(WorkerDict pid=168168)[0m       }
[36m(WorkerDict pid=168168)[0m       }
[36m(WorkerDict pid=168168)[0m     }
[36m(WorkerDict pid=168168)[0m   }
[36m(WorkerDict pid=168168)[0m       }
[36m(WorkerDict pid=168168)[0m       }
[36m(WorkerDict pid=168168)[0m     }
[36m(WorkerDict pid=168168)[0m       }
[36m(WorkerDict pid=168168)[0m 
[36m(WorkerDict pid=168168)[0m   }
[36m(WorkerDict pid=168168)[0m   }
[36m(WorkerDict pid=168168)[0m       }
[36m(WorkerDict pid=168168)[0m       }
[36m(WorkerDict pid=168168)[0m     }
[36m(WorkerDict pid=168168)[0m   }
[36m(WorkerDict pid=168168)[0m       }
[36m(WorkerDict pid=168168)[0m       }
[36m(WorkerDict pid=168168)[0m     }
[36m(WorkerDict pid=168168)[0m       }
[36m(WorkerDict pid=168168)[0m       }
[36m(WorkerDict pid=168168)[0m     }
[36m(WorkerDict pid=168168)[0m   }
[36m(WorkerDict pid=168168)[0m }
[36m(WorkerDict pid=168168)[0m 
[36m(WorkerDict pid=168171)[0m 
[36m(WorkerDict pid=168171)[0m 
[36m(WorkerDict pid=168171)[0m 
[36m(WorkerDict pid=168167)[0m 
[36m(WorkerDict pid=168167)[0m 
[36m(WorkerDict pid=168167)[0m 
[36m(WorkerDict pid=168170)[0m 
[36m(WorkerDict pid=168170)[0m 
[36m(WorkerDict pid=168170)[0m 
[36m(WorkerDict pid=168166)[0m 
[36m(WorkerDict pid=168166)[0m 
[36m(WorkerDict pid=168166)[0m 
[36m(WorkerDict pid=168169)[0m 
[36m(WorkerDict pid=168169)[0m 
[36m(WorkerDict pid=168169)[0m 
[36m(WorkerDict pid=168172)[0m 
[36m(WorkerDict pid=168172)[0m 
[36m(WorkerDict pid=168172)[0m 
[36m(WorkerDict pid=167832)[0m Actor use_remove_padding=True
[36m(WorkerDict pid=167832)[0m Actor use_fused_kernels=False
[36m(WorkerDict pid=167832)[0m Model config after override: Olmo2Config {
[36m(WorkerDict pid=167832)[0m   "architectures": [
[36m(WorkerDict pid=167832)[0m     "Olmo2ForCausalLM"
[36m(WorkerDict pid=167832)[0m   ],
[36m(WorkerDict pid=167832)[0m   "attention_bias": false,
[36m(WorkerDict pid=167832)[0m   "attention_dropout": 0.0,
[36m(WorkerDict pid=167832)[0m   "bos_token_id": 100257,
[36m(WorkerDict pid=167832)[0m   "eos_token_id": 100257,
[36m(WorkerDict pid=167832)[0m   "hidden_act": "silu",
[36m(WorkerDict pid=167832)[0m   "hidden_size": 2048,
[36m(WorkerDict pid=167832)[0m   "initializer_range": 0.02,
[36m(WorkerDict pid=167832)[0m   "intermediate_size": 8192,
[36m(WorkerDict pid=167832)[0m   "max_position_embeddings": 4096,
[36m(WorkerDict pid=167832)[0m   "model_type": "olmo2",
[36m(WorkerDict pid=167832)[0m   "num_attention_heads": 16,
[36m(WorkerDict pid=167832)[0m   "num_hidden_layers": 16,
[36m(WorkerDict pid=167832)[0m   "num_key_value_heads": 16,
[36m(WorkerDict pid=167832)[0m   "pad_token_id": 100277,
[36m(WorkerDict pid=167832)[0m   "rms_norm_eps": 1e-06,
[36m(WorkerDict pid=167832)[0m   "rope_scaling": null,
[36m(WorkerDict pid=167832)[0m   "rope_theta": 500000,
[36m(WorkerDict pid=167832)[0m   "tie_word_embeddings": false,
[36m(WorkerDict pid=167832)[0m   "torch_dtype": "float32",
[36m(WorkerDict pid=167832)[0m   "transformers_version": "4.51.1",
[36m(WorkerDict pid=167832)[0m   "use_cache": true,
[36m(WorkerDict pid=167832)[0m   "vocab_size": 100352
[36m(WorkerDict pid=167832)[0m 
[36m(WorkerDict pid=167832)[0m Flash Attention 2.0 only supports torch.float16 and torch.bfloat16 dtypes, but the current dype in Olmo2ForCausalLM is torch.float32. You should run training or inference using Automatic Mixed-Precision via the `with torch.autocast(device_type='torch_device'):` decorator, or load the model with the `torch_dtype` argument. Example: `model = AutoModel.from_pretrained("openai/whisper-tiny", attn_implementation="flash_attention_2", torch_dtype=torch.float16)`
[36m(WorkerDict pid=167832)[0m You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=167832)[0m Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=167832)[0m Loading checkpoint shards:  50%|█████     | 1/2 [00:01<00:01,  1.96s/it][32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=167832)[0m Loading checkpoint shards: 100%|██████████| 2/2 [00:02<00:00,  1.02s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:02<00:00,  1.16s/it][32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=167832)[0m Olmo2ForCausalLM contains 1.48B parameters
[36m(WorkerDict pid=167832)[0m wrap_policy: functools.partial(<function _or_policy at 0x7d18d05d2f80>, policies=[functools.partial(<function transformer_auto_wrap_policy at 0x7d18d05d2e60>, transformer_layer_cls={<class 'transformers.models.olmo2.modeling_olmo2.Olmo2DecoderLayer'>})])
[36m(WorkerDict pid=167832)[0m Loading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00, 43.04it/s]
[36m(WorkerDict pid=167832)[0m Total steps: 2219, num_warmup_steps: 0
[36m(WorkerDict pid=167832)[0m Actor use_remove_padding=True
[36m(WorkerDict pid=167832)[0m Actor use_fused_kernels=False
[36m(WorkerDict pid=168168)[0m   0%|          | 0/23 [00:00<?, ?it/s]Capturing batches (avail_mem=13.93 GB):   0%|          | 0/23 [00:00<?, ?it/s]
[36m(WorkerDict pid=168172)[0m Flash Attention 2.0 only supports torch.float16 and torch.bfloat16 dtypes, but the current dype in Olmo2ForCausalLM is torch.float32. You should run training or inference using Automatic Mixed-Precision via the `with torch.autocast(device_type='torch_device'):` decorator, or load the model with the `torch_dtype` argument. Example: `model = AutoModel.from_pretrained("openai/whisper-tiny", attn_implementation="flash_attention_2", torch_dtype=torch.float16)`[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=167832)[0m Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][32m [repeated 8x across cluster][0m
[36m(WorkerDict pid=168172)[0m Loading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00, 47.95it/s][32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=168168)[0m Capturing batches (avail_mem=13.93 GB):   4%|▍         | 1/23 [00:00<00:18,  1.20it/s]Capturing batches (avail_mem=13.68 GB):   4%|▍         | 1/23 [00:00<00:18,  1.20it/s]
[36m(WorkerDict pid=168172)[0m   0%|          | 0/23 [00:00<?, ?it/s]Capturing batches (avail_mem=14.01 GB):   0%|          | 0/23 [00:00<?, ?it/s][32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=168167)[0m Capturing batches (avail_mem=12.96 GB):  39%|███▉      | 9/23 [00:04<00:06,  2.20it/s]Capturing batches (avail_mem=12.86 GB):  39%|███▉      | 9/23 [00:04<00:06,  2.20it/s][32m [repeated 65x across cluster][0m
[36m(WorkerDict pid=168166)[0m Capturing batches (avail_mem=12.44 GB):  91%|█████████▏| 21/23 [00:09<00:00,  2.24it/s]Capturing batches (avail_mem=12.43 GB):  91%|█████████▏| 21/23 [00:09<00:00,  2.24it/s]
[36m(WorkerDict pid=168166)[0m Capturing batches (avail_mem=12.43 GB):  96%|█████████▌| 22/23 [00:10<00:00,  2.24it/s]Capturing batches (avail_mem=12.42 GB):  96%|█████████▌| 22/23 [00:10<00:00,  2.24it/s]
[36m(WorkerDict pid=168166)[0m Capturing batches (avail_mem=12.42 GB): 100%|██████████| 23/23 [00:10<00:00,  2.22it/s]Capturing batches (avail_mem=12.42 GB): 100%|██████████| 23/23 [00:10<00:00,  2.11it/s]
[36m(WorkerDict pid=168167)[0m Capturing batches (avail_mem=12.44 GB):  87%|████████▋ | 20/23 [00:09<00:01,  2.28it/s]Capturing batches (avail_mem=12.44 GB):  87%|████████▋ | 20/23 [00:09<00:01,  2.28it/s][32m [repeated 79x across cluster][0m
[36m(WorkerDict pid=168166)[0m Only support config type of {'qwen2', 'minicpmo', 'llama', 'qwen2_5_vl', 'qwen3', 'deepseek_v3', 'qwen3_moe', 'qwen2_vl', 'minicpmv'}, but got olmo2. MFU will always be zero.
[36m(WorkerDict pid=168172)[0m bolt-zju7e9bb4a-5ru8bui3ka:168172:169601 [0] /nccl-tuner-config-based/src/config_based_tuner.cc:155 NCCL WARN Cannot find communicatorTunerConfig for communicator(num_node:1, num_rank:8) with config:communicator_configs {[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=168172)[0m   node_range {[32m [repeated 14x across cluster][0m
[36m(WorkerDict pid=168172)[0m         min: 65536[32m [repeated 70x across cluster][0m
[36m(WorkerDict pid=168172)[0m         max: 65536[32m [repeated 42x across cluster][0m
[36m(WorkerDict pid=168172)[0m   rank_per_node_range {[32m [repeated 14x across cluster][0m
[36m(WorkerDict pid=168172)[0m   coll_configs {[32m [repeated 28x across cluster][0m
[36m(WorkerDict pid=168172)[0m     coll_type: COLL_ALL_REDUCE[32m [repeated 14x across cluster][0m
[36m(WorkerDict pid=168172)[0m     msg_size_tuning_rules {[32m [repeated 42x across cluster][0m
[36m(WorkerDict pid=168172)[0m       per_rank_message_size {[32m [repeated 42x across cluster][0m
[36m(WorkerDict pid=168172)[0m       coll_tuning_spec {[32m [repeated 42x across cluster][0m
[36m(WorkerDict pid=168172)[0m         num_channel: 4[32m [repeated 42x across cluster][0m
[36m(WorkerDict pid=168172)[0m         protocol: PROTO_SIMPLE[32m [repeated 42x across cluster][0m
[36m(WorkerDict pid=168172)[0m         algorithm: ALGO_TREE[32m [repeated 14x across cluster][0m
[36m(WorkerDict pid=168172)[0m     coll_type: COLL_DEFAULT[32m [repeated 14x across cluster][0m
[36m(WorkerDict pid=168172)[0m         algorithm: ALGO_RING[32m [repeated 21x across cluster][0m
[36m(WorkerDict pid=168172)[0m         algorithm: ALGO[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=168172)[0m bolt-zju7e9bb4a-5ru8bui3ka:168172:169601 [0] /nccl-tuner-config-based/src/config_based_tuner.cc:271 NCCL WARN No communicator config selected from config:communicator_configs {[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=168172)[0m communicator_config[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=168172)[0m bolt-zju7e9bb4a-5ru8bui3ka:168172:169601 [0] /nccl-tuner-config-based/src/tuner_tcpx.cc:70 NCCL WARN No communicator found for nRanks:8, nNodes:1 from config_path:/usr/local/nvidia/lib64/a3plus_tuner_config.textproto[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=168172)[0m Monkey patch _flash_attention_forward in transformers.integrations.flash_attention[32m [repeated 8x across cluster][0m
[36m(WorkerDict pid=168172)[0m Skipping monkey patch for Olmo2ForCausalLM as use_fused_kernels is False or fused_kernels_backend is torch[32m [repeated 8x across cluster][0m
[36m(WorkerDict pid=167832)[0m }[32m [repeated 145x across cluster][0m
[36m(WorkerDict pid=168166)[0m /usr/local/lib/python3.10/dist-packages/torch/distributed/fsdp/fully_sharded_data_parallel.py:690: FutureWarning: FSDP.state_dict_type() and FSDP.set_state_dict_type() are being deprecated. Please use APIs, get_state_dict() and set_state_dict(), which can support different parallelisms, FSDP1, FSDP2, DDP. API doc: https://pytorch.org/docs/stable/distributed.checkpoint.html#torch.distributed.checkpoint.state_dict.get_state_dict .Tutorial: https://pytorch.org/tutorials/recipes/distributed_checkpoint_recipe.html .
[36m(WorkerDict pid=168166)[0m   warnings.warn(
[36m(WorkerDict pid=168170)[0m Only support config type of {'llama', 'qwen3_moe', 'minicpmv', 'minicpmo', 'qwen3', 'qwen2', 'qwen2_5_vl', 'deepseek_v3', 'qwen2_vl'}, but got olmo2. MFU will always be zero.
[36m(WorkerDict pid=168167)[0m Only support config type of {'deepseek_v3', 'qwen2_vl', 'qwen2', 'qwen3_moe', 'minicpmv', 'qwen3', 'llama', 'minicpmo', 'qwen2_5_vl'}, but got olmo2. MFU will always be zero.
[36m(WorkerDict pid=168168)[0m Only support config type of {'qwen2_vl', 'minicpmv', 'minicpmo', 'deepseek_v3', 'qwen3_moe', 'qwen2_5_vl', 'qwen2', 'qwen3', 'llama'}, but got olmo2. MFU will always be zero.
[36m(WorkerDict pid=168169)[0m Only support config type of {'deepseek_v3', 'llama', 'qwen2_5_vl', 'minicpmo', 'qwen2', 'minicpmv', 'qwen3_moe', 'qwen3', 'qwen2_vl'}, but got olmo2. MFU will always be zero.
[36m(WorkerDict pid=168171)[0m Only support config type of {'llama', 'qwen3', 'qwen2_5_vl', 'qwen2', 'qwen2_vl', 'deepseek_v3', 'minicpmo', 'qwen3_moe', 'minicpmv'}, but got olmo2. MFU will always be zero.
[36m(WorkerDict pid=167832)[0m Only support config type of {'deepseek_v3', 'minicpmo', 'minicpmv', 'qwen3', 'qwen2_5_vl', 'llama', 'qwen2_vl', 'qwen2', 'qwen3_moe'}, but got olmo2. MFU will always be zero.
[36m(WorkerDict pid=168172)[0m Capturing batches (avail_mem=12.50 GB): 100%|██████████| 23/23 [00:12<00:00,  1.95it/s]Capturing batches (avail_mem=12.50 GB): 100%|██████████| 23/23 [00:12<00:00,  1.81it/s][32m [repeated 21x across cluster][0m
[36m(TaskRunner pid=155900)[0m wandb: Currently logged in as: shenaozhang (shenaoz) to https://api.wandb.ai. Use `wandb login --relogin` to force relogin
[36m(WorkerDict pid=167832)[0m Capturing batches (avail_mem=12.21 GB):  87%|████████▋ | 20/23 [00:11<00:01,  1.90it/s]Capturing batches (avail_mem=12.20 GB):  87%|████████▋ | 20/23 [00:11<00:01,  1.90it/s][32m [repeated 15x across cluster][0m
[36m(WorkerDict pid=168172)[0m /usr/local/lib/python3.10/dist-packages/torch/distributed/fsdp/fully_sharded_data_parallel.py:690: FutureWarning: FSDP.state_dict_type() and FSDP.set_state_dict_type() are being deprecated. Please use APIs, get_state_dict() and set_state_dict(), which can support different parallelisms, FSDP1, FSDP2, DDP. API doc: https://pytorch.org/docs/stable/distributed.checkpoint.html#torch.distributed.checkpoint.state_dict.get_state_dict .Tutorial: https://pytorch.org/tutorials/recipes/distributed_checkpoint_recipe.html .[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=168172)[0m   warnings.warn([32m [repeated 7x across cluster][0m
[36m(TaskRunner pid=155900)[0m wandb: Tracking run with wandb version 0.21.1
[36m(TaskRunner pid=155900)[0m wandb: Run data is saved locally in /mnt/task_runtime/verl/wandb/run-20250824_060734-mcpso4v9
[36m(TaskRunner pid=155900)[0m wandb: Run `wandb offline` to turn off syncing.
[36m(TaskRunner pid=155900)[0m wandb: Syncing run openandsyn-ours-40-100-olmo-15warmup-003penalty-log-len12-nomean
[36m(TaskRunner pid=155900)[0m wandb: ⭐️ View project at https://wandb.ai/shenaoz/em-new
[36m(TaskRunner pid=155900)[0m wandb: 🚀 View run at https://wandb.ai/shenaoz/em-new/runs/mcpso4v9
[36m(TaskRunner pid=155900)[0m Training Progress:   0%|          | 0/2219 [00:00<?, ?it/s]
[36m(TaskRunner pid=155900)[0m Checkpoint tracker file does not exist: /mnt/task_wrapper/user_output/artifacts/checkpoints/em-new/openandsyn-ours-40-100-olmo-15warmup-003penalty-log-len12-nomean/latest_checkpointed_iteration.txt
[36m(TaskRunner pid=155900)[0m Training from scratch
[36m(TaskRunner pid=155900)[0m global_steps 1
[36m(WorkerDict pid=167832)[0m /mnt/task_runtime/verl/verl/workers/rollout/sglang_rollout/utils.py:49: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at /pytorch/torch/csrc/utils/tensor_numpy.cpp:203.)
[36m(WorkerDict pid=167832)[0m   tensor_data = torch.ByteTensor(np.frombuffer(serialized_data, dtype=np.uint8)).to(device)
[36m(WorkerDict pid=168168)[0m NCCL version 2.21.5+cuda12.4
[36m(WorkerDict pid=168172)[0m Only support config type of {'qwen2', 'minicpmo', 'qwen3_moe', 'minicpmv', 'deepseek_v3', 'qwen2_5_vl', 'qwen2_vl', 'llama', 'qwen3'}, but got olmo2. MFU will always be zero.
[36m(WorkerDict pid=167832)[0m 
[36m(WorkerDict pid=167832)[0m bolt-zju7e9bb4a-5ru8bui3ka:167832:172504 [0] /nccl-tuner-config-based/src/config_based_tuner.cc:155 NCCL WARN Cannot find communicatorTunerConfig for communicator(num_node:1, num_rank:1) with config:communicator_configs {
[36m(WorkerDict pid=167832)[0m   node_range {
[36m(WorkerDict pid=167832)[0m     min: 2
[36m(WorkerDict pid=167832)[0m     max: 3
[36m(WorkerDict pid=167832)[0m   }
[36m(WorkerDict pid=167832)[0m   rank_per_node_range {
[36m(WorkerDict pid=167832)[0m     min: 1
[36m(WorkerDict pid=167832)[0m     max: 2
[36m(WorkerDict pid=167832)[0m   }
[36m(WorkerDict pid=167832)[0m   coll_configs {
[36m(WorkerDict pid=167832)[0m     coll_type: COLL_ALL_REDUCE
[36m(WorkerDict pid=167832)[0m     msg_size_tuning_rules {
[36m(WorkerDict pid=167832)[0m       per_rank_message_size {
[36m(WorkerDict pid=167832)[0m         min: 0
[36m(WorkerDict pid=167832)[0m       }
[36m(WorkerDict pid=167832)[0m       coll_tuning_spec {
[36m(WorkerDict pid=167832)[0m         num_channel: 2
[36m(WorkerDict pid=167832)[0m         protocol: PROTO_SIMPLE
[36m(WorkerDict pid=167832)[0m         algorithm: ALGO_TREE
[36m(WorkerDict pid=167832)[0m       }
[36m(WorkerDict pid=167832)[0m     }
[36m(WorkerDict pid=167832)[0m   }
[36m(WorkerDict pid=167832)[0m   coll_configs {
[36m(WorkerDict pid=167832)[0m     coll_type: COLL_DEFAULT
[36m(WorkerDict pid=167832)[0m     msg_size_tuning_rules {
[36m(WorkerDict pid=167832)[0m       per_rank_message_size {
[36m(WorkerDict pid=167832)[0m         min: 0
[36m(WorkerDict pid=167832)[0m         max: 65536
[36m(WorkerDict pid=167832)[0m       }
[36m(WorkerDict pid=167832)[0m       coll_tuning_spec {
[36m(WorkerDict pid=167832)[0m         num_channel: 2
[36m(WorkerDict pid=167832)[0m         protocol: PROTO_SIMPLE
[36m(WorkerDict pid=167832)[0m         algorithm: ALGO_RING
[36m(WorkerDict pid=167832)[0m       }
[36m(WorkerDict pid=167832)[0m     }
[36m(WorkerDict pid=167832)[0m     msg_size_tuning_rules {
[36m(WorkerDict pid=167832)[0m       per_rank_message_size {
[36m(WorkerDict pid=167832)[0m         min: 65536
[36m(WorkerDict pid=167832)[0m       }
[36m(WorkerDict pid=167832)[0m       coll_tuning_spec {
[36m(WorkerDict pid=167832)[0m         num_channel: 4
[36m(WorkerDict pid=167832)[0m         protocol: PROTO_SIMPLE
[36m(WorkerDict pid=167832)[0m         algorithm: ALGO
[36m(WorkerDict pid=167832)[0m 
[36m(WorkerDict pid=167832)[0m bolt-zju7e9bb4a-5ru8bui3ka:167832:172504 [0] /nccl-tuner-config-based/src/config_based_tuner.cc:271 NCCL WARN No communicator config selected from config:communicator_configs {
[36m(WorkerDict pid=167832)[0m   node_range {
[36m(WorkerDict pid=167832)[0m     min: 2
[36m(WorkerDict pid=167832)[0m     max: 3
[36m(WorkerDict pid=167832)[0m   }
[36m(WorkerDict pid=167832)[0m   rank_per_node_range {
[36m(WorkerDict pid=167832)[0m     min: 1
[36m(WorkerDict pid=167832)[0m     max: 2
[36m(WorkerDict pid=167832)[0m   }
[36m(WorkerDict pid=167832)[0m   coll_configs {
[36m(WorkerDict pid=167832)[0m     coll_type: COLL_ALL_REDUCE
[36m(WorkerDict pid=167832)[0m     msg_size_tuning_rules {
[36m(WorkerDict pid=167832)[0m       per_rank_message_size {
[36m(WorkerDict pid=167832)[0m         min: 0
[36m(WorkerDict pid=167832)[0m       }
[36m(WorkerDict pid=167832)[0m       coll_tuning_spec {
[36m(WorkerDict pid=167832)[0m         num_channel: 2
[36m(WorkerDict pid=167832)[0m         protocol: PROTO_SIMPLE
[36m(WorkerDict pid=167832)[0m         algorithm: ALGO_TREE
[36m(WorkerDict pid=167832)[0m       }
[36m(WorkerDict pid=167832)[0m     }
[36m(WorkerDict pid=167832)[0m   }
[36m(WorkerDict pid=167832)[0m   coll_configs {
[36m(WorkerDict pid=167832)[0m     coll_type: COLL_DEFAULT
[36m(WorkerDict pid=167832)[0m     msg_size_tuning_rules {
[36m(WorkerDict pid=167832)[0m       per_rank_message_size {
[36m(WorkerDict pid=167832)[0m         min: 0
[36m(WorkerDict pid=167832)[0m         max: 65536
[36m(WorkerDict pid=167832)[0m       }
[36m(WorkerDict pid=167832)[0m       coll_tuning_spec {
[36m(WorkerDict pid=167832)[0m         num_channel: 2
[36m(WorkerDict pid=167832)[0m         protocol: PROTO_SIMPLE
[36m(WorkerDict pid=167832)[0m         algorithm: ALGO_RING
[36m(WorkerDict pid=167832)[0m       }
[36m(WorkerDict pid=167832)[0m     }
[36m(WorkerDict pid=167832)[0m     msg_size_tuning_rules {
[36m(WorkerDict pid=167832)[0m       per_rank_message_size {
[36m(WorkerDict pid=167832)[0m         min: 65536
[36m(WorkerDict pid=167832)[0m       }
[36m(WorkerDict pid=167832)[0m       coll_tuning_spec {
[36m(WorkerDict pid=167832)[0m         num_channel: 4
[36m(WorkerDict pid=167832)[0m         protocol: PROTO_SIMPLE
[36m(WorkerDict pid=167832)[0m         algorithm: ALGO_RING
[36m(WorkerDict pid=167832)[0m       }
[36m(WorkerDict pid=167832)[0m     }
[36m(WorkerDict pid=167832)[0m   }
[36m(WorkerDict pid=167832)[0m }
[36m(WorkerDict pid=167832)[0m communicator_config
[36m(WorkerDict pid=167832)[0m 
[36m(WorkerDict pid=167832)[0m bolt-zju7e9bb4a-5ru8bui3ka:167832:172504 [0] /nccl-tuner-config-based/src/tuner_tcpx.cc:70 NCCL WARN No communicator found for nRanks:1, nNodes:1 from config_path:/usr/local/nvidia/lib64/a3plus_tuner_config.textproto
[36m(WorkerDict pid=168168)[0m 
[36m(WorkerDict pid=168168)[0m 
[36m(WorkerDict pid=168168)[0m 
[36m(WorkerDict pid=168171)[0m 
[36m(WorkerDict pid=168171)[0m 
[36m(WorkerDict pid=168171)[0m 
[36m(WorkerDict pid=168167)[0m 
[36m(WorkerDict pid=168167)[0m 
[36m(WorkerDict pid=168167)[0m 
[36m(WorkerDict pid=168170)[0m 
[36m(WorkerDict pid=168170)[0m 
[36m(WorkerDict pid=168170)[0m 
[36m(WorkerDict pid=168166)[0m 
[36m(WorkerDict pid=168166)[0m 
[36m(WorkerDict pid=168166)[0m 
[36m(WorkerDict pid=168169)[0m 
[36m(WorkerDict pid=168169)[0m 
[36m(WorkerDict pid=168169)[0m 
[36m(WorkerDict pid=168172)[0m 
[36m(WorkerDict pid=168172)[0m 
[36m(WorkerDict pid=168172)[0m 
[36m(TaskRunner pid=155900)[0m error!! index 6 is out of bounds for dimension 0 with size 6
[36m(WorkerDict pid=168172)[0m NCCL version 2.21.5+cuda12.4[32m [repeated 6x across cluster][0m
[36m(WorkerDict pid=168172)[0m bolt-zju7e9bb4a-5ru8bui3ka:168172:172514 [0] /nccl-tuner-config-based/src/config_based_tuner.cc:155 NCCL WARN Cannot find communicatorTunerConfig for communicator(num_node:1, num_rank:1) with config:communicator_configs {[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=168172)[0m   node_range {[32m [repeated 14x across cluster][0m
[36m(WorkerDict pid=168172)[0m         min: 65536[32m [repeated 70x across cluster][0m
[36m(WorkerDict pid=168172)[0m         max: 65536[32m [repeated 42x across cluster][0m
[36m(WorkerDict pid=168172)[0m }[32m [repeated 168x across cluster][0m
[36m(WorkerDict pid=168172)[0m   rank_per_node_range {[32m [repeated 14x across cluster][0m
[36m(WorkerDict pid=168172)[0m   coll_configs {[32m [repeated 28x across cluster][0m
[36m(WorkerDict pid=168172)[0m     coll_type: COLL_ALL_REDUCE[32m [repeated 14x across cluster][0m
[36m(WorkerDict pid=168172)[0m     msg_size_tuning_rules {[32m [repeated 42x across cluster][0m
[36m(WorkerDict pid=168172)[0m       per_rank_message_size {[32m [repeated 42x across cluster][0m
[36m(WorkerDict pid=168172)[0m       coll_tuning_spec {[32m [repeated 42x across cluster][0m
[36m(WorkerDict pid=168172)[0m         num_channel: 4[32m [repeated 42x across cluster][0m
[36m(WorkerDict pid=168172)[0m         protocol: PROTO_SIMPLE[32m [repeated 42x across cluster][0m
[36m(WorkerDict pid=168172)[0m         algorithm: ALGO_TREE[32m [repeated 14x across cluster][0m
[36m(WorkerDict pid=168172)[0m     coll_type: COLL_DEFAULT[32m [repeated 14x across cluster][0m
[36m(WorkerDict pid=168172)[0m         algorithm: ALGO_RING[32m [repeated 21x across cluster][0m
[36m(WorkerDict pid=168172)[0m         algorithm: ALGO[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=168172)[0m bolt-zju7e9bb4a-5ru8bui3ka:168172:172514 [0] /nccl-tuner-config-based/src/config_based_tuner.cc:271 NCCL WARN No communicator config selected from config:communicator_configs {[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=168172)[0m communicator_config[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=168172)[0m bolt-zju7e9bb4a-5ru8bui3ka:168172:172514 [0] /nccl-tuner-config-based/src/tuner_tcpx.cc:70 NCCL WARN No communicator found for nRanks:1, nNodes:1 from config_path:/usr/local/nvidia/lib64/a3plus_tuner_config.textproto[32m [repeated 7x across cluster][0m
[36m(TaskRunner pid=155900)[0m Training Progress:   0%|          | 1/2219 [01:00<37:02:47, 60.13s/it]
[36m(WorkerDict pid=168172)[0m /mnt/task_runtime/verl/verl/workers/rollout/sglang_rollout/utils.py:49: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at /pytorch/torch/csrc/utils/tensor_numpy.cpp:203.)[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=168172)[0m   tensor_data = torch.ByteTensor(np.frombuffer(serialized_data, dtype=np.uint8)).to(device)[32m [repeated 7x across cluster][0m
[36m(TaskRunner pid=155900)[0m step:1 - global_seqlen/min:153006 - global_seqlen/max:178002 - global_seqlen/minmax_diff:24996 - global_seqlen/balanced_min:168141 - global_seqlen/balanced_max:168141 - global_seqlen/mean:168141.0 - actor/entropy:2.746429443359375 - actor/pg_loss:0.0 - actor/pg_clipfrac:0.0 - actor/ppo_kl:-1.0280530113959685e-05 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:0.0 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:29.0859375 - perf/cpu_memory_used_gb:73.21086502075195 - actor/lr:2e-06 - training/global_step:1 - training/epoch:0 - critic/rewards/mean:-2.0 - critic/rewards/max:-2.0 - critic/rewards/min:-2.0 - critic/advantages/mean:0.0 - critic/advantages/max:0.0 - critic/advantages/min:0.0 - critic/format_reward/mean:0.10000000894069672 - response_length/mean:6.630387783050537 - response_length/max:16.299999237060547 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:28.486328125 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0009765625 - timing_s/start_profile:1.9878032617270947e-05 - timing_s/generate_sequences:37.038150787353516 - timing_s/reshard:0.6009702682495117 - timing_s/gen:38.740952744032256 - timing_s/reward:0.8350894750328735 - timing_s/old_log_prob:5.937596503063105 - timing_s/ref:3.4458924300270155 - timing_s/adv:0.4860203230055049 - timing_s/update_actor:9.322246817988344 - timing_s/step:58.94430329906754 - timing_s/stop_profile:3.12004704028368e-06 - timing_per_token_ms/adv:0.0027031526617629447 - timing_per_token_ms/update_actor:0.05184856498145019 - timing_per_token_ms/ref:0.019165398756938 - timing_per_token_ms/gen:1.1411990477130596 - perf/total_num_tokens:1345128 - perf/time_per_step:58.94430329906754 - perf/throughput:2852.540289549234
[36m(TaskRunner pid=155900)[0m global_steps 2
[36m(TaskRunner pid=155900)[0m first_prompt: arr = [1,5,7,-1,5] end1prompt
[36m(TaskRunner pid=155900)[0m first_res:  among other combinations, arrange these points utilizing the triangle inequality, which dictates that the endfirst
[36m(TaskRunner pid=155900)[0m second_prompt: sum = 6 end2prompt
[36m(TaskRunner pid=155900)[0m second_res:  should be possible by utilizing at least three of these points. Lastly, observe how endsecond
[36m(TaskRunner pid=155900)[0m third_prompt: arr.sort() end3prompt
[36m(TaskRunner pid=155900)[0m third_res:  emits its permutation in alphabetical order (as expected); however, the resultis reversed endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt: 
[36m(TaskRunner pid=155900)[0m def f(l=0,r=len(arr)-1): end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:  
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:     if l == r: end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:  
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:         return set() endsix
[36m(TaskRunner pid=155900)[0m six_res:  # handled directly in the recursive calls 
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:     s = arr[l] + arr[r] end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:      # order unspecified at start 
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m Training Progress:   0%|          | 2/2219 [01:50<33:32:18, 54.46s/it]
[36m(TaskRunner pid=155900)[0m step:2 - global_seqlen/min:155925 - global_seqlen/max:175149 - global_seqlen/minmax_diff:19224 - global_seqlen/balanced_min:166880 - global_seqlen/balanced_max:166881 - global_seqlen/mean:166880.875 - actor/entropy:2.781031608581543 - actor/pg_loss:0.0 - actor/pg_clipfrac:0.0 - actor/ppo_kl:0.0 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:0.0 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:29.85546875 - perf/cpu_memory_used_gb:73.78752136230469 - actor/lr:2e-06 - training/global_step:2 - training/epoch:0 - critic/rewards/mean:-2.0 - critic/rewards/max:-2.0 - critic/rewards/min:-2.0 - critic/advantages/mean:0.0 - critic/advantages/max:0.0 - critic/advantages/min:0.0 - critic/format_reward/mean:0.10000000894069672 - response_length/mean:6.582576751708984 - response_length/max:16.227272033691406 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:27.76171875 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.001953125 - timing_s/start_profile:4.876055754721165e-06 - timing_s/generate_sequences:31.323158264160156 - timing_s/reshard:0.5015254020690918 - timing_s/gen:33.78821406397037 - timing_s/reward:0.8604355960851535 - timing_s/old_log_prob:2.4565364399459213 - timing_s/ref:2.470802620984614 - timing_s/adv:0.4495310449274257 - timing_s/update_actor:10.117020674049854 - timing_s/step:50.31981702905614 - timing_s/stop_profile:2.9029324650764465e-06 - timing_per_token_ms/adv:0.002556437129654295 - timing_per_token_ms/update_actor:0.05753446304647701 - timing_per_token_ms/ref:0.014051202095178924 - timing_per_token_ms/gen:1.0025345405438528 - perf/total_num_tokens:1335047 - perf/time_per_step:50.31981702905614 - perf/throughput:3316.404646376955
[36m(TaskRunner pid=155900)[0m global_steps 3
[36m(TaskRunner pid=155900)[0m Training Progress:   0%|          | 3/2219 [02:40<32:07:55, 52.20s/it]
[36m(TaskRunner pid=155900)[0m first_prompt: #https://programmers.co.kr/learn/courses/30/lessons/49993#fnref1
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m def solution(skill, skill_trees): end1prompt
[36m(TaskRunner pid=155900)[0m first_res:  return skill_trees[skill](skill)
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt:     answer = [] #s의 모음들 end2prompt
[36m(TaskRunner pid=155900)[0m second_res: 에Suc y를 추킹하고 결합하는orange function type endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:     s = [] #skilltree내에 있는 skill의 알파벳만 넣는 리스트(answer에 넣기 위해 잠시 모아둠) end3prompt
[36m(TaskRunner pid=155900)[0m third_res:  chart
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:     result = 0 # (skill 순서대로 넣은 skilltree) 와 (skill에 포함되지 않은 알파벳으로만 이루어진 skilltree) end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res: Radio buttons :Dice (じこPERさる enter card game)  randomly endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:     bask = 0 end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:  label = "skill" until coming to the conclusion that I can get skill tree endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:     # skill_trees에 포함된 요소중 skill에 포함되지 않은 알파벳으로만 이루어진 경우,
[36m(TaskRunner pid=155900)[0m     # 어떤 스킬을 넣어도 상관없으므로, bask 랑 skill에 포함되지 않은 알파벳 숫자랑 같으면 result += 1을 추가한다.
[36m(TaskRunner pid=155900)[0m     # (이것떔에 많이 헤맴.. 역시 testcase만 믿지 말자..)
[36m(TaskRunner pid=155900)[0m     for i, e in enumerate(skill_trees): endsix
[36m(TaskRunner pid=155900)[0m six_res:  #가Purchase anyone else's 떡을 sale (추인事 endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:         for j in e: end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:      for k in bask:         value = (bask[i].value endseven
[36m(TaskRunner pid=155900)[0m step:3 - global_seqlen/min:155683 - global_seqlen/max:178633 - global_seqlen/minmax_diff:22950 - global_seqlen/balanced_min:167357 - global_seqlen/balanced_max:167357 - global_seqlen/mean:167357.0 - actor/entropy:2.749117612838745 - actor/pg_loss:0.0 - actor/pg_clipfrac:0.0 - actor/ppo_kl:0.0 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:0.0 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:29.85546875 - perf/cpu_memory_used_gb:74.12237167358398 - actor/lr:2e-06 - training/global_step:3 - training/epoch:0 - critic/rewards/mean:-2.0 - critic/rewards/max:-2.0 - critic/rewards/min:-2.0 - critic/advantages/mean:0.0 - critic/advantages/max:0.0 - critic/advantages/min:0.0 - critic/format_reward/mean:0.10000000894069672 - response_length/mean:6.6035966873168945 - response_length/max:16.33333396911621 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:28.4423828125 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0009765625 - timing_s/start_profile:5.646958015859127e-06 - timing_s/generate_sequences:31.975494384765625 - timing_s/reshard:0.3730761706829071 - timing_s/gen:33.23748021200299 - timing_s/reward:0.8758979829726741 - timing_s/old_log_prob:2.4497266279067844 - timing_s/ref:2.4118671669857576 - timing_s/adv:0.4533916909713298 - timing_s/update_actor:9.703724938910455 - timing_s/step:49.26785906800069 - timing_s/stop_profile:3.285938873887062e-06 - timing_per_token_ms/adv:0.0025267681596755857 - timing_per_token_ms/update_actor:0.05407920721564197 - timing_per_token_ms/ref:0.01344142224982226 - timing_per_token_ms/gen:0.9830545154094263 - perf/total_num_tokens:1338856 - perf/time_per_step:49.26785906800069 - perf/throughput:3396.879896262791
[36m(TaskRunner pid=155900)[0m global_steps 4
[36m(TaskRunner pid=155900)[0m first_prompt: """
[36m(TaskRunner pid=155900)[0m 1. Two Sum
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m You may assume that each input would have exactly one solution, and you may not use the same element twice.
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m You can return the answer in any order.
[36m(TaskRunner pid=155900)[0m """
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m class Solution: end1prompt
[36m(TaskRunner pid=155900)[0m first_res:  
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt:     def twoSum(self, nums: List[int], target: int) -> List[int]: end2prompt
[36m(TaskRunner pid=155900)[0m second_res:  
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:         compl = dict() end3prompt
[36m(TaskRunner pid=155900)[0m third_res:  
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:         for i, num in enumerate(nums): end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:  
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:             if compl.get(num, -1) >= 0: end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:  
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:                 return [dict[num], i] endsix
[36m(TaskRunner pid=155900)[0m six_res:  
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:             compl[target-num] = i end7prompt
[36m(TaskRunner pid=155900)[0m seven_res: , 0 # Lexicographical sort the list 
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m Training Progress:   0%|          | 4/2219 [03:30<31:46:48, 51.65s/it]
[36m(TaskRunner pid=155900)[0m step:4 - global_seqlen/min:154663 - global_seqlen/max:172970 - global_seqlen/minmax_diff:18307 - global_seqlen/balanced_min:165544 - global_seqlen/balanced_max:165545 - global_seqlen/mean:165544.875 - actor/entropy:2.7870934009552 - actor/pg_loss:0.0 - actor/pg_clipfrac:0.0 - actor/ppo_kl:0.0 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:0.0 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:29.85546875 - perf/cpu_memory_used_gb:74.27141571044922 - actor/lr:2e-06 - training/global_step:4 - training/epoch:0 - critic/rewards/mean:-2.0 - critic/rewards/max:-2.0 - critic/rewards/min:-2.0 - critic/advantages/mean:0.0 - critic/advantages/max:0.0 - critic/advantages/min:0.0 - critic/format_reward/mean:0.10000000894069672 - response_length/mean:6.674029350280762 - response_length/max:16.375 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:25.83984375 - prompt_length/max:127.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0 - timing_s/start_profile:6.109010428190231e-06 - timing_s/generate_sequences:33.030860900878906 - timing_s/reshard:0.4521945118904114 - timing_s/gen:34.10150229302235 - timing_s/reward:0.8747236039489508 - timing_s/old_log_prob:2.5319837669376284 - timing_s/ref:2.4350119980517775 - timing_s/adv:0.4825222549261525 - timing_s/update_actor:10.114772761007771 - timing_s/step:50.64314684597775 - timing_s/stop_profile:3.0150404199957848e-06 - timing_per_token_ms/adv:0.0028985358671895205 - timing_per_token_ms/update_actor:0.060759957363499366 - timing_per_token_ms/ref:0.014627241627373395 - timing_per_token_ms/gen:0.9979652660620931 - perf/total_num_tokens:1324359 - perf/time_per_step:50.64314684597775 - perf/throughput:3268.8504824448546
[36m(TaskRunner pid=155900)[0m global_steps 5
[36m(TaskRunner pid=155900)[0m Training Progress:   0%|          | 5/2219 [04:20<31:17:51, 50.89s/it]
[36m(TaskRunner pid=155900)[0m first_prompt: 
[36m(TaskRunner pid=155900)[0m Write a python function to find the number of islands in a given grid. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m ```python
[36m(TaskRunner pid=155900)[0m def count_Islands(grid): end1prompt
[36m(TaskRunner pid=155900)[0m first_res:    # This is the main function & will decide the number of islands.
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt:     if not grid: end2prompt
[36m(TaskRunner pid=155900)[0m second_res:               # If the grid is empty, then it is an invalid argument.
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:         return 0 end3prompt
[36m(TaskRunner pid=155900)[0m third_res: 
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt: 
[36m(TaskRunner pid=155900)[0m     def dfs(x, y): end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:            # This function will calculate how many islands are in x,y position.
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:         if x < 0 or x >= len(grid) or y < 0 or y >= len(grid[0]) or grid[x][y] != 1: end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:    # x and y should be divisible by 8.
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:             return endsix
[36m(TaskRunner pid=155900)[0m six_res:  0
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:         grid[x][y] = '#' end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:    # Remove an island, or by filling it in.
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m step:5 - global_seqlen/min:161218 - global_seqlen/max:188372 - global_seqlen/minmax_diff:27154 - global_seqlen/balanced_min:170650 - global_seqlen/balanced_max:170651 - global_seqlen/mean:170650.375 - actor/entropy:2.7687671184539795 - actor/pg_loss:0.0 - actor/pg_clipfrac:0.0 - actor/ppo_kl:0.0 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:0.0 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:29.85546875 - perf/cpu_memory_used_gb:74.55733871459961 - actor/lr:2e-06 - training/global_step:5 - training/epoch:0 - critic/rewards/mean:-2.0 - critic/rewards/max:-2.0 - critic/rewards/min:-2.0 - critic/advantages/mean:0.0 - critic/advantages/max:0.0 - critic/advantages/min:0.0 - critic/format_reward/mean:0.10000000894069672 - response_length/mean:6.569155693054199 - response_length/max:16.30769157409668 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:26.8154296875 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.001953125 - timing_s/start_profile:2.2332998923957348e-05 - timing_s/generate_sequences:32.06062316894531 - timing_s/reshard:0.37998127937316895 - timing_s/gen:33.24989566998556 - timing_s/reward:0.8880744860507548 - timing_s/old_log_prob:2.505111343925819 - timing_s/ref:2.467365431948565 - timing_s/adv:0.427567939972505 - timing_s/update_actor:9.6893944919575 - timing_s/step:49.374672231962904 - timing_s/stop_profile:2.5400659069418907e-06 - timing_per_token_ms/adv:0.002501434774367797 - timing_per_token_ms/update_actor:0.056686636342072064 - timing_per_token_ms/ref:0.01443502450849344 - timing_per_token_ms/gen:0.9885775833193158 - perf/total_num_tokens:1365203 - perf/time_per_step:49.374672231962904 - perf/throughput:3456.23307023249
[36m(TaskRunner pid=155900)[0m global_steps 6
[36m(TaskRunner pid=155900)[0m first_prompt: # Write a function to find the longest common prefix string amongst an array of strings.
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m # If there is no common prefix, return an empty string "".
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m '''
[36m(TaskRunner pid=155900)[0m >>> s = Solution()
[36m(TaskRunner pid=155900)[0m >>> s.longestCommonPrefix(["flower","flow","flight"])
[36m(TaskRunner pid=155900)[0m 'fl'
[36m(TaskRunner pid=155900)[0m >>> s = Solution()
[36m(TaskRunner pid=155900)[0m >>> s.longestCommonPrefix(["dog","racecar","car"])
[36m(TaskRunner pid=155900)[0m ''
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m '''
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m class Solution: end1prompt
[36m(TaskRunner pid=155900)[0m first_res:     """class Solution: "
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt:     def longestCommonPrefix(self, strs) -> str: end2prompt
[36m(TaskRunner pid=155900)[0m second_res:  
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:         pattern = min(strs, key = len) end3prompt
[36m(TaskRunner pid=155900)[0m third_res:  
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:         s = '' end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:  
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:         for i in range(len(pattern)): end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:  
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:             for j in strs: endsix
[36m(TaskRunner pid=155900)[0m six_res:  
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:                 if j[i] != pattern[i]: end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:  
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m Training Progress:   0%|          | 6/2219 [05:11<31:18:09, 50.92s/it]
[36m(TaskRunner pid=155900)[0m step:6 - global_seqlen/min:160676 - global_seqlen/max:179916 - global_seqlen/minmax_diff:19240 - global_seqlen/balanced_min:170680 - global_seqlen/balanced_max:170681 - global_seqlen/mean:170680.375 - actor/entropy:2.800934076309204 - actor/pg_loss:0.0 - actor/pg_clipfrac:0.0 - actor/ppo_kl:0.0 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:0.0 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:29.85546875 - perf/cpu_memory_used_gb:74.6305923461914 - actor/lr:2e-06 - training/global_step:6 - training/epoch:0 - critic/rewards/mean:-2.0 - critic/rewards/max:-2.0 - critic/rewards/min:-2.0 - critic/advantages/mean:0.0 - critic/advantages/max:0.0 - critic/advantages/min:0.0 - critic/format_reward/mean:0.10000000894069672 - response_length/mean:6.749407768249512 - response_length/max:16.25 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:25.5224609375 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.001953125 - timing_s/start_profile:5.67000824958086e-06 - timing_s/generate_sequences:33.575286865234375 - timing_s/reshard:0.559575080871582 - timing_s/gen:34.95127776800655 - timing_s/reward:0.8639797860523686 - timing_s/old_log_prob:2.3702807179652154 - timing_s/ref:2.3666321230120957 - timing_s/adv:0.4525758200325072 - timing_s/update_actor:9.680389935034327 - timing_s/step:50.78937013796531 - timing_s/stop_profile:3.1320378184318542e-06 - timing_per_token_ms/adv:0.0027390330300867227 - timing_per_token_ms/update_actor:0.05858666460411782 - timing_per_token_ms/ref:0.014323088570062781 - timing_per_token_ms/gen:1.011410405260344 - perf/total_num_tokens:1365443 - perf/time_per_step:50.78937013796531 - perf/throughput:3360.5530947983852
[36m(TaskRunner pid=155900)[0m global_steps 7
[36m(TaskRunner pid=155900)[0m error!! index 4 is out of bounds for dimension 0 with size 4
[36m(TaskRunner pid=155900)[0m Training Progress:   0%|          | 7/2219 [06:01<31:07:43, 50.66s/it]
[36m(TaskRunner pid=155900)[0m step:7 - global_seqlen/min:156047 - global_seqlen/max:173584 - global_seqlen/minmax_diff:17537 - global_seqlen/balanced_min:165339 - global_seqlen/balanced_max:165340 - global_seqlen/mean:165339.5 - actor/entropy:2.735912322998047 - actor/pg_loss:0.0 - actor/pg_clipfrac:0.0 - actor/ppo_kl:0.0 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:0.0 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:29.85546875 - perf/cpu_memory_used_gb:74.88551712036133 - actor/lr:2e-06 - training/global_step:7 - training/epoch:0 - critic/rewards/mean:-2.0 - critic/rewards/max:-2.0 - critic/rewards/min:-2.0 - critic/advantages/mean:0.0 - critic/advantages/max:0.0 - critic/advantages/min:0.0 - critic/format_reward/mean:0.10000000894069672 - response_length/mean:6.432848930358887 - response_length/max:16.33333396911621 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:28.962890625 - prompt_length/max:127.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0 - timing_s/start_profile:6.064889021217823e-06 - timing_s/generate_sequences:32.87321853637695 - timing_s/reshard:0.4588244557380676 - timing_s/gen:34.59478082705755 - timing_s/reward:0.8760507209226489 - timing_s/old_log_prob:2.5972128770081326 - timing_s/ref:2.44388772896491 - timing_s/adv:0.4477294120006263 - timing_s/update_actor:8.888474220992066 - timing_s/step:49.9516067749355 - timing_s/stop_profile:3.016088157892227e-06 - timing_per_token_ms/adv:0.0024705558185437538 - timing_per_token_ms/update_actor:0.04904630144024889 - timing_per_token_ms/ref:0.01348529019275931 - timing_per_token_ms/gen:1.0503577813023304 - perf/total_num_tokens:1322716 - perf/time_per_step:49.9516067749355 - perf/throughput:3309.9936253294527
[36m(TaskRunner pid=155900)[0m global_steps 8
[36m(TaskRunner pid=155900)[0m first_prompt: class Solution: end1prompt
[36m(TaskRunner pid=155900)[0m first_res:  (shiftFile) this function must be defined in the file Classpad
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt:     # @param A : list of integers
[36m(TaskRunner pid=155900)[0m     # @return an integer
[36m(TaskRunner pid=155900)[0m     def findMinXor(self, A): end2prompt
[36m(TaskRunner pid=155900)[0m second_res:    
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:         A=sorted(A) end3prompt
[36m(TaskRunner pid=155900)[0m third_res:   #order the list
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:         ans=0 end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:  #the answer
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:         for i in range(len(A)-1): end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:  #find the largest element in the list
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:             t=A[i]^A[i+1] endsix
[36m(TaskRunner pid=155900)[0m six_res:  #initialize the ans with the highest element in the middle
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:             if t<ans: end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:  #If the ans is below the lowest element
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m Training Progress:   0%|          | 8/2219 [06:53<31:24:53, 51.15s/it]
[36m(TaskRunner pid=155900)[0m step:8 - global_seqlen/min:162587 - global_seqlen/max:178037 - global_seqlen/minmax_diff:15450 - global_seqlen/balanced_min:167874 - global_seqlen/balanced_max:167875 - global_seqlen/mean:167874.5 - actor/entropy:2.7447872161865234 - actor/pg_loss:0.0 - actor/pg_clipfrac:0.0 - actor/ppo_kl:0.0 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:0.0 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:29.85546875 - perf/cpu_memory_used_gb:75.06832504272461 - actor/lr:2e-06 - training/global_step:8 - training/epoch:0 - critic/rewards/mean:-2.0 - critic/rewards/max:-2.0 - critic/rewards/min:-2.0 - critic/advantages/mean:0.0 - critic/advantages/max:0.0 - critic/advantages/min:0.0 - critic/format_reward/mean:0.10000000894069672 - response_length/mean:6.721386909484863 - response_length/max:16.30769157409668 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:28.41796875 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0009765625 - timing_s/start_profile:7.026945240795612e-06 - timing_s/generate_sequences:34.196720123291016 - timing_s/reshard:0.3648276925086975 - timing_s/gen:36.338519883924164 - timing_s/reward:0.8474159969482571 - timing_s/old_log_prob:2.4549610179383308 - timing_s/ref:2.2512580460170284 - timing_s/adv:0.4042995589552447 - timing_s/update_actor:9.62143570696935 - timing_s/step:52.017405382939614 - timing_s/stop_profile:2.79303640127182e-06 - timing_per_token_ms/adv:0.0022471885598092677 - timing_per_token_ms/update_actor:0.053478119801845615 - timing_per_token_ms/ref:0.01251300233732893 - timing_per_token_ms/gen:1.0559379279621126 - perf/total_num_tokens:1342996 - perf/time_per_step:52.017405382939614 - perf/throughput:3227.2755391036585
[36m(TaskRunner pid=155900)[0m global_steps 9
[36m(TaskRunner pid=155900)[0m first_prompt: 
[36m(TaskRunner pid=155900)[0m '''
[36m(TaskRunner pid=155900)[0m Input: s = "A man, a plan, a canal: Panama"
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m Output: true
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m Explanation: "amanaplanacanalpanama" is a palindrome.
[36m(TaskRunner pid=155900)[0m '''
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m # SOLUTION 1
[36m(TaskRunner pid=155900)[0m '''
[36m(TaskRunner pid=155900)[0m Creates extra memory by creating a new string and also a reversed one at the end of the function
[36m(TaskRunner pid=155900)[0m '''
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m def isPalindrome1(s: str) -> bool: end1prompt
[36m(TaskRunner pid=155900)[0m first_res:        #2
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt: 	new_string = '' end2prompt
[36m(TaskRunner pid=155900)[0m second_res:      # 3
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt: 	for c in s: end3prompt
[36m(TaskRunner pid=155900)[0m third_res:              # 4
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt: 		if c.isalnum(): end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:   # 5
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt: 			new_string += c.lower() end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:   # 6
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt: 	return new_string == new_string[::-1] endsix
[36m(TaskRunner pid=155900)[0m six_res:   # 7
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt: 
[36m(TaskRunner pid=155900)[0m print("Solution 1: ->  ", isPalindrome1(s = "A man, a plan, a canal: Panama")) end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:  # 8
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m Training Progress:   0%|          | 9/2219 [07:45<31:33:52, 51.42s/it]
[36m(TaskRunner pid=155900)[0m step:9 - global_seqlen/min:158938 - global_seqlen/max:187631 - global_seqlen/minmax_diff:28693 - global_seqlen/balanced_min:171867 - global_seqlen/balanced_max:171868 - global_seqlen/mean:171867.625 - actor/entropy:2.753750801086426 - actor/pg_loss:0.0 - actor/pg_clipfrac:0.0 - actor/ppo_kl:0.0 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:0.0 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:29.85546875 - perf/cpu_memory_used_gb:75.1860122680664 - actor/lr:2e-06 - training/global_step:9 - training/epoch:0 - critic/rewards/mean:-2.0 - critic/rewards/max:-2.0 - critic/rewards/min:-2.0 - critic/advantages/mean:0.0 - critic/advantages/max:0.0 - critic/advantages/min:0.0 - critic/format_reward/mean:0.10000000894069672 - response_length/mean:6.599979400634766 - response_length/max:16.399999618530273 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:28.1240234375 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.00390625 - timing_s/start_profile:6.389920599758625e-06 - timing_s/generate_sequences:35.455810546875 - timing_s/reshard:0.39340701699256897 - timing_s/gen:36.58885503397323 - timing_s/reward:0.8591254400089383 - timing_s/old_log_prob:2.366454762988724 - timing_s/ref:2.3740861110854894 - timing_s/adv:0.40272668504621834 - timing_s/update_actor:9.086324148927815 - timing_s/step:51.77665444999002 - timing_s/stop_profile:2.5320332497358322e-06 - timing_per_token_ms/adv:0.002265221438892 - timing_per_token_ms/update_actor:0.051107952433078196 - timing_per_token_ms/ref:0.013353549581621108 - timing_per_token_ms/gen:1.0827701595758907 - perf/total_num_tokens:1374941 - perf/time_per_step:51.77665444999002 - perf/throughput:3319.4038283412715
[36m(TaskRunner pid=155900)[0m global_steps 10
[36m(TaskRunner pid=155900)[0m first_prompt: 
[36m(TaskRunner pid=155900)[0m Write a python function to check whether a list contains a subarray with sum as zero.
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m ```python
[36m(TaskRunner pid=155900)[0m def containsSubArrayWithZeroSum(arr): end1prompt
[36m(TaskRunner pid=155900)[0m first_res:   
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt:     sum_set = set() end2prompt
[36m(TaskRunner pid=155900)[0m second_res:   
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:     sum_set.add(0) end3prompt
[36m(TaskRunner pid=155900)[0m third_res:   
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:     curr_sum = 0 end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:   
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:     for i in range(len(arr)): end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:   
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:         curr_sum += arr[i] endsix
[36m(TaskRunner pid=155900)[0m six_res:   
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:         if curr_sum in sum_set: end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:   
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m Training Progress:   0%|          | 10/2219 [08:35<31:15:10, 50.93s/it]
[36m(TaskRunner pid=155900)[0m step:10 - global_seqlen/min:148240 - global_seqlen/max:182877 - global_seqlen/minmax_diff:34637 - global_seqlen/balanced_min:166783 - global_seqlen/balanced_max:166784 - global_seqlen/mean:166783.25 - actor/entropy:2.776460886001587 - actor/pg_loss:0.0 - actor/pg_clipfrac:0.0 - actor/ppo_kl:0.0 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:0.0 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:29.85546875 - perf/cpu_memory_used_gb:75.26279830932617 - actor/lr:2e-06 - training/global_step:10 - training/epoch:0 - critic/rewards/mean:-2.0 - critic/rewards/max:-2.0 - critic/rewards/min:-2.0 - critic/advantages/mean:0.0 - critic/advantages/max:0.0 - critic/advantages/min:0.0 - critic/format_reward/mean:0.10000000894069672 - response_length/mean:6.4418840408325195 - response_length/max:16.41666603088379 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:27.931640625 - prompt_length/max:127.0 - prompt_length/min:1.0 - prompt_length/clip_ratio:0.0 - timing_s/start_profile:5.426001735031605e-06 - timing_s/generate_sequences:33.43733596801758 - timing_s/reshard:0.5697678327560425 - timing_s/gen:34.746066292980686 - timing_s/reward:0.8688315650215372 - timing_s/old_log_prob:2.253613837994635 - timing_s/ref:2.330882776994258 - timing_s/adv:0.4312103239353746 - timing_s/update_actor:8.928557990002446 - timing_s/step:49.665258412016556 - timing_s/stop_profile:2.622022293508053e-06 - timing_per_token_ms/adv:0.002450163830439985 - timing_per_token_ms/update_actor:0.0507326207903328 - timing_per_token_ms/ref:0.01324422064171811 - timing_per_token_ms/gen:1.0534715047283743 - perf/total_num_tokens:1334266 - perf/time_per_step:49.665258412016556 - perf/throughput:3358.147230733962
[36m(TaskRunner pid=155900)[0m global_steps 11
[36m(TaskRunner pid=155900)[0m first_prompt: # Definition for a binary tree node.
[36m(TaskRunner pid=155900)[0m # class TreeNode:
[36m(TaskRunner pid=155900)[0m #     def __init__(self, val=0, left=None, right=None):
[36m(TaskRunner pid=155900)[0m #         self.val = val
[36m(TaskRunner pid=155900)[0m #         self.left = left
[36m(TaskRunner pid=155900)[0m #         self.right = right
[36m(TaskRunner pid=155900)[0m #Submitted by thr3sh0ld
[36m(TaskRunner pid=155900)[0m class Solution: end1prompt
[36m(TaskRunner pid=155900)[0m first_res:     
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt:     def solve(self,root, curr): end2prompt
[36m(TaskRunner pid=155900)[0m second_res:            
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:         if root == None: end3prompt
[36m(TaskRunner pid=155900)[0m third_res:  return 0 
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:             return 0 end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:  if not curr.label == root.label else 1 if curr.label != root.label endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:         curr = curr*10 + root.val end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:  else      curr = int(root.val) / 10 + int(root.left) endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:         if not root.left and not root.right: endsix
[36m(TaskRunner pid=155900)[0m six_res:  
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:             return curr end7prompt
[36m(TaskRunner pid=155900)[0m seven_res: 
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m Training Progress:   0%|          | 11/2219 [09:25<30:58:27, 50.50s/it]
[36m(TaskRunner pid=155900)[0m step:11 - global_seqlen/min:153107 - global_seqlen/max:179577 - global_seqlen/minmax_diff:26470 - global_seqlen/balanced_min:166617 - global_seqlen/balanced_max:166618 - global_seqlen/mean:166617.625 - actor/entropy:2.7426509857177734 - actor/pg_loss:0.0 - actor/pg_clipfrac:0.0 - actor/ppo_kl:0.0 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:0.0 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:29.85546875 - perf/cpu_memory_used_gb:75.24542999267578 - actor/lr:2e-06 - training/global_step:11 - training/epoch:0 - critic/rewards/mean:-2.0 - critic/rewards/max:-2.0 - critic/rewards/min:-2.0 - critic/advantages/mean:0.0 - critic/advantages/max:0.0 - critic/advantages/min:0.0 - critic/format_reward/mean:0.10000000894069672 - response_length/mean:6.647765159606934 - response_length/max:16.571428298950195 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:25.6865234375 - prompt_length/max:126.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0 - timing_s/start_profile:5.720998160541058e-06 - timing_s/generate_sequences:33.30485534667969 - timing_s/reshard:0.4751797914505005 - timing_s/gen:34.5200981029775 - timing_s/reward:0.8462804100709036 - timing_s/old_log_prob:2.212558230967261 - timing_s/ref:2.1929596579866484 - timing_s/adv:0.4053872120566666 - timing_s/update_actor:9.045619530952536 - timing_s/step:49.32729571394157 - timing_s/stop_profile:2.92900949716568e-06 - timing_per_token_ms/adv:0.002448706708050111 - timing_per_token_ms/update_actor:0.05463928946238281 - timing_per_token_ms/ref:0.013246384852032667 - timing_per_token_ms/gen:1.0142064747202817 - perf/total_num_tokens:1332941 - perf/time_per_step:49.32729571394157 - perf/throughput:3377.7976795291497
[36m(TaskRunner pid=155900)[0m global_steps 12
[36m(TaskRunner pid=155900)[0m first_prompt: haystack = "mississippi" end1prompt
[36m(TaskRunner pid=155900)[0m first_res: 
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt: needle = "issip" end2prompt
[36m(TaskRunner pid=155900)[0m second_res:  (no space)
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt: 
[36m(TaskRunner pid=155900)[0m ini = -1 end3prompt
[36m(TaskRunner pid=155900)[0m third_res:  (omit the number if none)
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt: count = 0 end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res: .5 (omit this only if the space
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt: j = 0 end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:  (omit if none)
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt: 
[36m(TaskRunner pid=155900)[0m if(len(haystack)<len(needle)): endsix
[36m(TaskRunner pid=155900)[0m six_res: Hidden (omit)
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:     print(ini) end7prompt
[36m(TaskRunner pid=155900)[0m seven_res: condition (omit)
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m Training Progress:   1%|          | 12/2219 [10:18<31:23:54, 51.22s/it]
[36m(TaskRunner pid=155900)[0m step:12 - global_seqlen/min:159369 - global_seqlen/max:176237 - global_seqlen/minmax_diff:16868 - global_seqlen/balanced_min:169208 - global_seqlen/balanced_max:169209 - global_seqlen/mean:169208.125 - actor/entropy:2.7454071044921875 - actor/pg_loss:0.0 - actor/pg_clipfrac:0.0 - actor/ppo_kl:0.0 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:0.0 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:29.85546875 - perf/cpu_memory_used_gb:75.35370635986328 - actor/lr:2e-06 - training/global_step:12 - training/epoch:0 - critic/rewards/mean:-2.0 - critic/rewards/max:-2.0 - critic/rewards/min:-2.0 - critic/advantages/mean:0.0 - critic/advantages/max:0.0 - critic/advantages/min:0.0 - critic/format_reward/mean:0.10000000894069672 - response_length/mean:6.607280731201172 - response_length/max:16.117647171020508 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:27.134765625 - prompt_length/max:126.0 - prompt_length/min:1.0 - prompt_length/clip_ratio:0.0 - timing_s/start_profile:5.724024958908558e-06 - timing_s/generate_sequences:35.638763427734375 - timing_s/reshard:0.9842489957809448 - timing_s/gen:37.37567173503339 - timing_s/reward:0.8688567810459062 - timing_s/old_log_prob:2.314735168009065 - timing_s/ref:2.3002568390220404 - timing_s/adv:0.42731924005784094 - timing_s/update_actor:9.28441997396294 - timing_s/step:52.67106377298478 - timing_s/stop_profile:3.3190008252859116e-06 - timing_per_token_ms/adv:0.0024734951814343203 - timing_per_token_ms/update_actor:0.05374194727319417 - timing_per_token_ms/ref:0.013314809336954302 - timing_per_token_ms/gen:1.1048321060851332 - perf/total_num_tokens:1353665 - perf/time_per_step:52.67106377298478 - perf/throughput:3212.5442867320176
[36m(TaskRunner pid=155900)[0m global_steps 13
[36m(TaskRunner pid=155900)[0m first_prompt: 
[36m(TaskRunner pid=155900)[0m Write a python function to find the length of the smallest subarray with a given sum.
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m ```python
[36m(TaskRunner pid=155900)[0m def smallest_subarray_with_given_sum(s, arr): end1prompt
[36m(TaskRunner pid=155900)[0m first_res:  
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt:     window_sum = 0 end2prompt
[36m(TaskRunner pid=155900)[0m second_res: 
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:     min_length = float('inf') end3prompt
[36m(TaskRunner pid=155900)[0m third_res:  # `inf` indicates that no length is a valid answer
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:     window_start = 0 end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res: 
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt: 
[36m(TaskRunner pid=155900)[0m     for window_end in range(len(arr)): end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:  #don't divide in half 
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:         window_sum += arr[window_end]  endsix
[36m(TaskRunner pid=155900)[0m six_res:  #sum of window_region so far
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:         while window_sum >= s: end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:   #if sum is greater then sum 
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m Training Progress:   1%|          | 13/2219 [11:07<31:09:14, 50.84s/it]
[36m(TaskRunner pid=155900)[0m step:13 - global_seqlen/min:167245 - global_seqlen/max:179067 - global_seqlen/minmax_diff:11822 - global_seqlen/balanced_min:173740 - global_seqlen/balanced_max:173741 - global_seqlen/mean:173740.25 - actor/entropy:2.7688381671905518 - actor/pg_loss:0.0 - actor/pg_clipfrac:0.0 - actor/ppo_kl:0.0 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:0.0 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:29.85546875 - perf/cpu_memory_used_gb:75.34751892089844 - actor/lr:2e-06 - training/global_step:13 - training/epoch:0 - critic/rewards/mean:-2.0 - critic/rewards/max:-2.0 - critic/rewards/min:-2.0 - critic/advantages/mean:0.0 - critic/advantages/max:0.0 - critic/advantages/min:0.0 - critic/format_reward/mean:0.10000000894069672 - response_length/mean:6.584847927093506 - response_length/max:16.33333396911621 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:26.896484375 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0009765625 - timing_s/start_profile:5.512963980436325e-06 - timing_s/generate_sequences:32.80377197265625 - timing_s/reshard:0.5161519646644592 - timing_s/gen:33.99195358797442 - timing_s/reward:0.8729521509958431 - timing_s/old_log_prob:2.836825200007297 - timing_s/ref:2.3528044619597495 - timing_s/adv:0.410423671011813 - timing_s/update_actor:9.247620086069219 - timing_s/step:49.82077944697812 - timing_s/stop_profile:2.9619550332427025e-06 - timing_per_token_ms/adv:0.0023941960341630174 - timing_per_token_ms/update_actor:0.05394575629843709 - timing_per_token_ms/ref:0.0137250249190012 - timing_per_token_ms/gen:1.008231839596817 - perf/total_num_tokens:1389922 - perf/time_per_step:49.82077944697812 - perf/throughput:3487.3049343779026
[36m(TaskRunner pid=155900)[0m global_steps 14
[36m(TaskRunner pid=155900)[0m first_prompt: 
[36m(TaskRunner pid=155900)[0m Write a function to find the longest common prefix string amongst an array of strings.
[36m(TaskRunner pid=155900)[0m If there is no common prefix, return an empty string "".
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m ```python end1prompt
[36m(TaskRunner pid=155900)[0m first_res: 
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt: def longestCommonPrefix(strs): end2prompt
[36m(TaskRunner pid=155900)[0m second_res:  
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:     if not strs: end3prompt
[36m(TaskRunner pid=155900)[0m third_res:  
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:         return "" end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:  
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:     shortest_str = min(strs, key=len) end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:  
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:     for i, char in enumerate(shortest_str): endsix
[36m(TaskRunner pid=155900)[0m six_res:     # NOTE: only visit element occur in shortest_str when checking for common_prefix endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:         for other in strs: end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:              if char in other:            # common prefix: count all occurrences in longer endseven
[36m(TaskRunner pid=155900)[0m Training Progress:   1%|          | 14/2219 [11:59<31:10:29, 50.90s/it]
[36m(TaskRunner pid=155900)[0m step:14 - global_seqlen/min:156323 - global_seqlen/max:177475 - global_seqlen/minmax_diff:21152 - global_seqlen/balanced_min:165438 - global_seqlen/balanced_max:165439 - global_seqlen/mean:165438.875 - actor/entropy:2.7723119258880615 - actor/pg_loss:0.0 - actor/pg_clipfrac:0.0 - actor/ppo_kl:0.0 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:0.0 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:29.85546875 - perf/cpu_memory_used_gb:75.37690353393555 - actor/lr:2e-06 - training/global_step:14 - training/epoch:0 - critic/rewards/mean:-2.0 - critic/rewards/max:-2.0 - critic/rewards/min:-2.0 - critic/advantages/mean:0.0 - critic/advantages/max:0.0 - critic/advantages/min:0.0 - critic/format_reward/mean:0.10000000894069672 - response_length/mean:6.492196083068848 - response_length/max:16.16666603088379 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:26.990234375 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0009765625 - timing_s/start_profile:5.4209958761930466e-06 - timing_s/generate_sequences:33.81876754760742 - timing_s/reshard:0.45824962854385376 - timing_s/gen:35.429455520934425 - timing_s/reward:0.8405431889696047 - timing_s/old_log_prob:2.2749173160409555 - timing_s/ref:2.2626222289400175 - timing_s/adv:0.4254914530320093 - timing_s/update_actor:9.524004812934436 - timing_s/step:50.859705193084665 - timing_s/stop_profile:3.625056706368923e-06 - timing_per_token_ms/adv:0.0024820121704663646 - timing_per_token_ms/update_actor:0.055556217848411596 - timing_per_token_ms/ref:0.013198516372958451 - timing_per_token_ms/gen:1.0658667184709345 - perf/total_num_tokens:1323511 - perf/time_per_step:50.859705193084665 - perf/throughput:3252.847698820215
[36m(TaskRunner pid=155900)[0m global_steps 15
[36m(TaskRunner pid=155900)[0m Training Progress:   1%|          | 15/2219 [12:48<30:56:40, 50.54s/it]
[36m(TaskRunner pid=155900)[0m first_prompt: # Definition for a binary tree node.
[36m(TaskRunner pid=155900)[0m # class TreeNode(object):
[36m(TaskRunner pid=155900)[0m #     def __init__(self, x):
[36m(TaskRunner pid=155900)[0m #         self.val = x
[36m(TaskRunner pid=155900)[0m #         self.left = None
[36m(TaskRunner pid=155900)[0m #         self.right = None
[36m(TaskRunner pid=155900)[0m from collections import deque end1prompt
[36m(TaskRunner pid=155900)[0m first_res: 
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt: 
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m class Solution(object): end2prompt
[36m(TaskRunner pid=155900)[0m second_res:  
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:     def zigzagLevelOrder(self, root): end3prompt
[36m(TaskRunner pid=155900)[0m third_res:  
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:         """
[36m(TaskRunner pid=155900)[0m         :type root: TreeNode
[36m(TaskRunner pid=155900)[0m         :rtype: List[List[int]]
[36m(TaskRunner pid=155900)[0m         """
[36m(TaskRunner pid=155900)[0m         self.s = list() end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:  
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:         self.queue = deque() end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:    
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:         self.layer_trav(root) endsix
[36m(TaskRunner pid=155900)[0m six_res:  # in_travel returns True only when adjacency list visited already.
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:         for i, j in enumerate(self.s): end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:  # compute next level we are going to. Nodes are currently in a zig endseven
[36m(TaskRunner pid=155900)[0m step:15 - global_seqlen/min:159245 - global_seqlen/max:186941 - global_seqlen/minmax_diff:27696 - global_seqlen/balanced_min:167620 - global_seqlen/balanced_max:167621 - global_seqlen/mean:167620.75 - actor/entropy:2.755955457687378 - actor/pg_loss:0.40626179575920107 - actor/pg_clipfrac:0.034841316472738984 - actor/ppo_kl:0.010100378363858908 - actor/pg_clipfrac_lower:0.00013511523211491295 - actor/grad_norm:0.7837529629468918 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:37.9296875 - perf/cpu_memory_used_gb:75.47364807128906 - actor/lr:2e-06 - training/global_step:15 - training/epoch:0 - critic/rewards/mean:-0.5670992136001587 - critic/rewards/max:3.795909881591797 - critic/rewards/min:-2.134218454360962 - critic/advantages/mean:-0.40619322657585144 - critic/advantages/max:1.7888537645339966 - critic/advantages/min:-1.788853645324707 - critic/format_reward/mean:0.47817522287368774 - response_length/mean:6.586509704589844 - response_length/max:16.200000762939453 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:28.37890625 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0029296875 - timing_s/start_profile:5.8480072766542435e-06 - timing_s/generate_sequences:33.81109619140625 - timing_s/reshard:0.4729081690311432 - timing_s/gen:34.993015824002214 - timing_s/reward:0.8480387519812211 - timing_s/old_log_prob:2.1333985349629074 - timing_s/ref:2.2456872640177608 - timing_s/adv:0.40158970502670854 - timing_s/update_actor:8.799572865013033 - timing_s/step:49.51638291589916 - timing_s/stop_profile:3.1800009310245514e-06 - timing_per_token_ms/adv:0.00224323055000674 - timing_per_token_ms/update_actor:0.04915332846118343 - timing_per_token_ms/ref:0.012544132016707591 - timing_per_token_ms/gen:1.0376623901977589 - perf/total_num_tokens:1340966 - perf/time_per_step:49.51638291589916 - perf/throughput:3385.1573990106385
[36m(TaskRunner pid=155900)[0m global_steps 16
[36m(TaskRunner pid=155900)[0m Training Progress:   1%|          | 16/2219 [13:37<30:39:47, 50.11s/it]
[36m(TaskRunner pid=155900)[0m first_prompt: # Definition for a binary tree node.
[36m(TaskRunner pid=155900)[0m # class TreeNode:
[36m(TaskRunner pid=155900)[0m #     def __init__(self, val=0, left=None, right=None):
[36m(TaskRunner pid=155900)[0m #         self.val = val
[36m(TaskRunner pid=155900)[0m #         self.left = left
[36m(TaskRunner pid=155900)[0m #         self.right = right
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m class Solution: end1prompt
[36m(TaskRunner pid=155900)[0m first_res:  
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt:     def iterative(self, root): end2prompt
[36m(TaskRunner pid=155900)[0m second_res:  
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:         queue = deque() end3prompt
[36m(TaskRunner pid=155900)[0m third_res:  
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:         queue.extend([root, root]) end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:  
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:         while queue: end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:  
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:             node1 = queue.popleft() endsix
[36m(TaskRunner pid=155900)[0m six_res:  
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:             node2 = queue.popleft()         end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:  # node2 is child 
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m step:16 - global_seqlen/min:127311 - global_seqlen/max:142498 - global_seqlen/minmax_diff:15187 - global_seqlen/balanced_min:134242 - global_seqlen/balanced_max:134243 - global_seqlen/mean:134242.25 - actor/entropy:2.2980470657348633 - actor/pg_loss:0.565636120736599 - actor/pg_clipfrac:0.04786803852766752 - actor/ppo_kl:0.015775365682748087 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:1.7685292661190033 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:37.9296875 - perf/cpu_memory_used_gb:75.32388687133789 - actor/lr:2e-06 - training/global_step:16 - training/epoch:0 - critic/rewards/mean:0.8168230056762695 - critic/rewards/max:3.2106175422668457 - critic/rewards/min:-2.0848071575164795 - critic/advantages/mean:-0.5309911370277405 - critic/advantages/max:1.7888537645339966 - critic/advantages/min:-1.7888535261154175 - critic/format_reward/mean:0.8174628019332886 - response_length/mean:2.5449109077453613 - response_length/max:16.125 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:26.9140625 - prompt_length/max:126.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0 - timing_s/start_profile:5.372101441025734e-06 - timing_s/generate_sequences:34.66884231567383 - timing_s/reshard:0.6131728291511536 - timing_s/gen:36.00720608897973 - timing_s/reward:0.781211631023325 - timing_s/old_log_prob:2.072927605942823 - timing_s/ref:1.9447335390141234 - timing_s/adv:0.4244984040269628 - timing_s/update_actor:7.565436817938462 - timing_s/step:48.8970635170117 - timing_s/stop_profile:2.8189970180392265e-06 - timing_per_token_ms/adv:0.0028144173137792114 - timing_per_token_ms/update_actor:0.05015871947861621 - timing_per_token_ms/ref:0.012893550814247165 - timing_per_token_ms/gen:2.7634200008300622 - perf/total_num_tokens:1073938 - perf/time_per_step:48.8970635170117 - perf/throughput:2745.4051500106134
[36m(TaskRunner pid=155900)[0m global_steps 17
[36m(TaskRunner pid=155900)[0m first_prompt: """
[36m(TaskRunner pid=155900)[0m 106
[36m(TaskRunner pid=155900)[0m medium
[36m(TaskRunner pid=155900)[0m construct binary tree from inorder and post order traversal
[36m(TaskRunner pid=155900)[0m """
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m # Definition for a binary tree node.
[36m(TaskRunner pid=155900)[0m class TreeNode: end1prompt
[36m(TaskRunner pid=155900)[0m first_res:  
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt:     def __init__(self, val=0, left=None, right=None): end2prompt
[36m(TaskRunner pid=155900)[0m second_res:  
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:         self.val = val end3prompt
[36m(TaskRunner pid=155900)[0m third_res:  
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:         self.left = left end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res: 
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:         self.right = right end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res: 
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt: 
[36m(TaskRunner pid=155900)[0m from typing import List endsix
[36m(TaskRunner pid=155900)[0m six_res: 
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt: 
[36m(TaskRunner pid=155900)[0m class Solution: end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:  
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m Training Progress:   1%|          | 17/2219 [14:25<30:15:47, 49.48s/it]
[36m(TaskRunner pid=155900)[0m step:17 - global_seqlen/min:113225 - global_seqlen/max:130383 - global_seqlen/minmax_diff:17158 - global_seqlen/balanced_min:121908 - global_seqlen/balanced_max:121909 - global_seqlen/mean:121908.625 - actor/entropy:1.6233654022216797 - actor/pg_loss:0.23068531192839145 - actor/pg_clipfrac:0.049229861609637736 - actor/ppo_kl:0.03021870763041079 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:2.1398322582244873 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:37.9296875 - perf/cpu_memory_used_gb:75.31328582763672 - actor/lr:2e-06 - training/global_step:17 - training/epoch:0 - critic/rewards/mean:1.2547179460525513 - critic/rewards/max:3.6634864807128906 - critic/rewards/min:-2.0 - critic/advantages/mean:-0.26284199953079224 - critic/advantages/max:1.788853645324707 - critic/advantages/min:-1.788853645324707 - critic/format_reward/mean:0.9273552894592285 - response_length/mean:1.4594298601150513 - response_length/max:16.0 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:27.2890625 - prompt_length/max:126.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0 - timing_s/start_profile:6.128102540969849e-06 - timing_s/generate_sequences:32.77518844604492 - timing_s/reshard:0.34315600991249084 - timing_s/gen:33.910945191048086 - timing_s/reward:0.7731229329947382 - timing_s/old_log_prob:2.068333136034198 - timing_s/ref:2.0877138579962775 - timing_s/adv:0.45680488704238087 - timing_s/update_actor:8.339210371952504 - timing_s/step:47.74481675599236 - timing_s/stop_profile:2.802000381052494e-06 - timing_per_token_ms/adv:0.003103456816338599 - timing_per_token_ms/update_actor:0.056655215401223244 - timing_per_token_ms/ref:0.014183582503052312 - timing_per_token_ms/gen:4.538232204118626 - perf/total_num_tokens:975269 - perf/time_per_step:47.74481675599236 - perf/throughput:2553.3373732071027
[36m(TaskRunner pid=155900)[0m global_steps 18
[36m(TaskRunner pid=155900)[0m first_prompt: # https://leetcode.com/problems/random-pick-index
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m from random import choice end1prompt
[36m(TaskRunner pid=155900)[0m first_res: 
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt: from collections import defaultdict end2prompt
[36m(TaskRunner pid=155900)[0m second_res: 
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt: from typing import List end3prompt
[36m(TaskRunner pid=155900)[0m third_res: 
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt: 
[36m(TaskRunner pid=155900)[0m class Solution: end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:  
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt: 
[36m(TaskRunner pid=155900)[0m     def __init__(self, nums: List[int]): end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:  
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:         self.num_to_indices = defaultdict(list) endsix
[36m(TaskRunner pid=155900)[0m six_res:  
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:         for idx, num in enumerate(nums): end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:  
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m Training Progress:   1%|          | 18/2219 [15:12<29:41:19, 48.56s/it]
[36m(TaskRunner pid=155900)[0m step:18 - global_seqlen/min:114184 - global_seqlen/max:135915 - global_seqlen/minmax_diff:21731 - global_seqlen/balanced_min:120746 - global_seqlen/balanced_max:120747 - global_seqlen/mean:120746.125 - actor/entropy:1.042549729347229 - actor/pg_loss:0.14553209040313958 - actor/pg_clipfrac:0.04878429109230638 - actor/ppo_kl:0.017639557155780493 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:2.6759949922561646 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:37.9296875 - perf/cpu_memory_used_gb:75.38117599487305 - actor/lr:2e-06 - training/global_step:18 - training/epoch:0 - critic/rewards/mean:1.3868287801742554 - critic/rewards/max:3.058692216873169 - critic/rewards/min:-2.0 - critic/advantages/mean:-0.1117168515920639 - critic/advantages/max:1.788853645324707 - critic/advantages/min:-1.7888538837432861 - critic/format_reward/mean:0.9636281728744507 - response_length/mean:1.1754144430160522 - response_length/max:11.88888931274414 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:29.0966796875 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.001953125 - timing_s/start_profile:6.137997843325138e-06 - timing_s/generate_sequences:32.16460037231445 - timing_s/reshard:0.32858604192733765 - timing_s/gen:33.0170992979547 - timing_s/reward:0.7802347659599036 - timing_s/old_log_prob:1.9126662909984589 - timing_s/ref:1.8253487489419058 - timing_s/adv:0.41649185202550143 - timing_s/update_actor:8.212206379044801 - timing_s/step:46.267158875009045 - timing_s/stop_profile:2.7799978852272034e-06 - timing_per_token_ms/adv:0.0026871634461080166 - timing_per_token_ms/update_actor:0.05298432775177817 - timing_per_token_ms/ref:0.011776966129592756 - timing_per_token_ms/gen:5.486279426073562 - perf/total_num_tokens:965969 - perf/time_per_step:46.267158875009045 - perf/throughput:2609.7587994585156
[36m(TaskRunner pid=155900)[0m global_steps 19
[36m(TaskRunner pid=155900)[0m first_prompt: # -*- coding: utf-8 -*-
[36m(TaskRunner pid=155900)[0m """
[36m(TaskRunner pid=155900)[0m Created on Mon Feb 24 20:39:05 2020
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m @author: Lenovo
[36m(TaskRunner pid=155900)[0m """
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m import collections end1prompt
[36m(TaskRunner pid=155900)[0m first_res: 
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt: 
[36m(TaskRunner pid=155900)[0m class Solution: end2prompt
[36m(TaskRunner pid=155900)[0m second_res:  
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:     def fourSumCount(self, A, B, C, D): end3prompt
[36m(TaskRunner pid=155900)[0m third_res:  
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:         dic = collections.Counter(a + b for a in A for b in B) end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:  
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:         return sum(dic.get(- c - d, 0) for c in C for d in D) end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:  
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt: 
[36m(TaskRunner pid=155900)[0m if __name__ == '__main__': endsix
[36m(TaskRunner pid=155900)[0m six_res:  
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:     n=[] end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:  
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m Training Progress:   1%|          | 19/2219 [16:00<29:40:33, 48.56s/it]
[36m(TaskRunner pid=155900)[0m step:19 - global_seqlen/min:105060 - global_seqlen/max:126420 - global_seqlen/minmax_diff:21360 - global_seqlen/balanced_min:118529 - global_seqlen/balanced_max:118530 - global_seqlen/mean:118529.375 - actor/entropy:0.8232807517051697 - actor/pg_loss:0.06483876165002585 - actor/pg_clipfrac:0.04962195893749595 - actor/ppo_kl:0.032896716706454755 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:2.209393262863159 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:37.9296875 - perf/cpu_memory_used_gb:75.29621887207031 - actor/lr:2e-06 - training/global_step:19 - training/epoch:0 - critic/rewards/mean:1.412520408630371 - critic/rewards/max:3.1176204681396484 - critic/rewards/min:-2.0 - critic/advantages/mean:-0.0641765147447586 - critic/advantages/max:1.7888535261154175 - critic/advantages/min:-1.788853406906128 - critic/format_reward/mean:0.9774341583251953 - response_length/mean:1.1077378988265991 - response_length/max:10.0 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:29.1162109375 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0009765625 - timing_s/start_profile:5.671987310051918e-06 - timing_s/generate_sequences:34.49571990966797 - timing_s/reshard:0.33970382809638977 - timing_s/gen:35.331300874007866 - timing_s/reward:0.7714206960517913 - timing_s/old_log_prob:1.969237656914629 - timing_s/ref:2.0548322959803045 - timing_s/adv:0.5029468779684976 - timing_s/update_actor:7.590314544038847 - timing_s/step:48.32476663705893 - timing_s/stop_profile:2.684071660041809e-06 - timing_per_token_ms/adv:0.00325013162766034 - timing_per_token_ms/update_actor:0.049049954267766864 - timing_per_token_ms/ref:0.013278689514246893 - timing_per_token_ms/gen:6.229492157613896 - perf/total_num_tokens:948235 - perf/time_per_step:48.32476663705893 - perf/throughput:2452.7666297948163
[36m(TaskRunner pid=155900)[0m global_steps 20
[36m(TaskRunner pid=155900)[0m Training Progress:   1%|          | 20/2219 [16:48<29:28:24, 48.25s/it]
[36m(TaskRunner pid=155900)[0m first_prompt: ##ss
[36m(TaskRunner pid=155900)[0m class Solution: end1prompt
[36m(TaskRunner pid=155900)[0m first_res:   
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt:     def findOcurrences(self, text: str, first: str, second: str) -> List[str]: end2prompt
[36m(TaskRunner pid=155900)[0m second_res:   
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:         
[36m(TaskRunner pid=155900)[0m         comp = text.split(" ") end3prompt
[36m(TaskRunner pid=155900)[0m third_res:   
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:         ans = [] end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:   
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:         
[36m(TaskRunner pid=155900)[0m         for x in range(len(comp)-2): end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:   
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:             if comp[x] == first and comp[x+1] == second: endsix
[36m(TaskRunner pid=155900)[0m six_res:   
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:                 ans.append(comp[x+2]) end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:   
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m step:20 - global_seqlen/min:114811 - global_seqlen/max:121920 - global_seqlen/minmax_diff:7109 - global_seqlen/balanced_min:117316 - global_seqlen/balanced_max:117317 - global_seqlen/mean:117316.75 - actor/entropy:0.6285957098007202 - actor/pg_loss:-0.0021615889854729176 - actor/pg_clipfrac:0.031198179302737116 - actor/ppo_kl:0.014818542175999028 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:1.9429640471935272 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:37.9296875 - perf/cpu_memory_used_gb:75.34319686889648 - actor/lr:2e-06 - training/global_step:20 - training/epoch:0 - critic/rewards/mean:1.4474132061004639 - critic/rewards/max:2.806224822998047 - critic/rewards/min:-2.0 - critic/advantages/mean:-0.034759778529405594 - critic/advantages/max:1.7888535261154175 - critic/advantages/min:-1.7888532876968384 - critic/format_reward/mean:0.9849702715873718 - response_length/mean:1.0646915435791016 - response_length/max:9.0 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:26.76171875 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0009765625 - timing_s/start_profile:6.2659382820129395e-06 - timing_s/generate_sequences:34.04315185546875 - timing_s/reshard:0.34455329179763794 - timing_s/gen:34.951697768992744 - timing_s/reward:0.7483541569672525 - timing_s/old_log_prob:1.7923921800684184 - timing_s/ref:1.7507729820208624 - timing_s/adv:0.40014331694692373 - timing_s/update_actor:7.625113816000521 - timing_s/step:47.36899101303425 - timing_s/stop_profile:2.820044755935669e-06 - timing_per_token_ms/adv:0.002808590499696244 - timing_per_token_ms/update_actor:0.05352037961329316 - timing_per_token_ms/ref:0.012288607996621598 - timing_per_token_ms/gen:6.411719442758229 - perf/total_num_tokens:938534 - perf/time_per_step:47.36899101303425 - perf/throughput:2476.6571440738235
[36m(TaskRunner pid=155900)[0m global_steps 21
[36m(TaskRunner pid=155900)[0m first_prompt: 
[36m(TaskRunner pid=155900)[0m Write a function to check if a given submatrix is a magic square. A magic square is a NxN square grid (where N is the number of cells on each side) filled with distinct positive integers in the range 1, 2, ..., N^2 such that each cell contains a different integer and the sum of the integers in each row, column, and the main diagonals are equal. The function should return True if the submatrix is a magic square, and False otherwise.
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m ```python
[36m(TaskRunner pid=155900)[0m def is_magic_square(submatrix): end1prompt
[36m(TaskRunner pid=155900)[0m first_res:  
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt:     n = len(submatrix) end2prompt
[36m(TaskRunner pid=155900)[0m second_res:  
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:     if n < 1: end3prompt
[36m(TaskRunner pid=155900)[0m third_res:  
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:         return False end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:  
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:     flat_list = [item for sublist in submatrix for item in sublist] end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:  
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:     unique = set(flat_list) endsix
[36m(TaskRunner pid=155900)[0m six_res:  
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:     if len(unique) != n * n: end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:  
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m Training Progress:   1%|          | 21/2219 [17:36<29:31:39, 48.36s/it]
[36m(TaskRunner pid=155900)[0m step:21 - global_seqlen/min:112190 - global_seqlen/max:124726 - global_seqlen/minmax_diff:12536 - global_seqlen/balanced_min:119283 - global_seqlen/balanced_max:119283 - global_seqlen/mean:119283.0 - actor/entropy:0.5938208103179932 - actor/pg_loss:0.026815884094685317 - actor/pg_clipfrac:0.06834183156024665 - actor/ppo_kl:0.0701557805844459 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:2.487170785665512 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:37.9296875 - perf/cpu_memory_used_gb:75.40201950073242 - actor/lr:2e-06 - training/global_step:21 - training/epoch:0 - critic/rewards/mean:1.485986351966858 - critic/rewards/max:4.481668949127197 - critic/rewards/min:-2.0 - critic/advantages/mean:-0.023635754361748695 - critic/advantages/max:1.788853406906128 - critic/advantages/min:-1.788853406906128 - critic/format_reward/mean:0.9891506433486938 - response_length/mean:1.0357413291931152 - response_length/max:6.7272725105285645 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:27.5537109375 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.001953125 - timing_s/start_profile:5.419016815721989e-06 - timing_s/generate_sequences:33.195533752441406 - timing_s/reshard:1.2861078977584839 - timing_s/gen:35.225478725042194 - timing_s/reward:0.7776480100583285 - timing_s/old_log_prob:1.9330763890175149 - timing_s/ref:1.9844824470346794 - timing_s/adv:0.8297437030123547 - timing_s/update_actor:7.586560762021691 - timing_s/step:48.44441415206529 - timing_s/stop_profile:2.660905010998249e-06 - timing_per_token_ms/adv:0.005668500238579268 - timing_per_token_ms/update_actor:0.05182856023298527 - timing_per_token_ms/ref:0.01355724566951604 - timing_per_token_ms/gen:6.642562307371268 - perf/total_num_tokens:954264 - perf/time_per_step:48.44441415206529 - perf/throughput:2462.2653011258412
[36m(TaskRunner pid=155900)[0m global_steps 22
[36m(TaskRunner pid=155900)[0m Training Progress:   1%|          | 22/2219 [18:23<29:08:30, 47.75s/it]
[36m(TaskRunner pid=155900)[0m first_prompt: class Solution: end1prompt
[36m(TaskRunner pid=155900)[0m first_res:  
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt:     def maxNumOfSubstrings(self, s): end2prompt
[36m(TaskRunner pid=155900)[0m second_res:  
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:         fst = { c : i for i, c in reversed(list(enumerate(s))) } end3prompt
[36m(TaskRunner pid=155900)[0m third_res:  
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:         lst = { c : i for i, c in enumerate(s) } end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:  
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:         
[36m(TaskRunner pid=155900)[0m         intervals = [] end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:  
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:         for c in set(s): endsix
[36m(TaskRunner pid=155900)[0m six_res:  
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:             b, e = fst[c], lst[c] end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:  
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m step:22 - global_seqlen/min:111218 - global_seqlen/max:127165 - global_seqlen/minmax_diff:15947 - global_seqlen/balanced_min:118287 - global_seqlen/balanced_max:118288 - global_seqlen/mean:118287.625 - actor/entropy:0.5877286195755005 - actor/pg_loss:0.0466126581421122 - actor/pg_clipfrac:0.07546897465363145 - actor/ppo_kl:0.06834601773771283 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:3.5949442386627197 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:37.9296875 - perf/cpu_memory_used_gb:75.40015029907227 - actor/lr:2e-06 - training/global_step:22 - training/epoch:0 - critic/rewards/mean:1.4819062948226929 - critic/rewards/max:2.870407819747925 - critic/rewards/min:-2.0 - critic/advantages/mean:-0.030174706131219864 - critic/advantages/max:1.788853645324707 - critic/advantages/min:-1.7888532876968384 - critic/format_reward/mean:0.9904365539550781 - response_length/mean:1.0378549098968506 - response_length/max:8.125 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:26.2685546875 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0009765625 - timing_s/start_profile:5.137990228831768e-06 - timing_s/generate_sequences:33.25737380981445 - timing_s/reshard:0.3369830250740051 - timing_s/gen:34.297498555039056 - timing_s/reward:0.7692623879993334 - timing_s/old_log_prob:1.8344716270221397 - timing_s/ref:1.8373284609988332 - timing_s/adv:0.40625691902823746 - timing_s/update_actor:6.9273300799541175 - timing_s/step:46.17766292497981 - timing_s/stop_profile:2.6690540835261345e-06 - timing_per_token_ms/adv:0.002905803272163154 - timing_per_token_ms/update_actor:0.04954859221064933 - timing_per_token_ms/ref:0.013141720925712561 - timing_per_token_ms/gen:6.454399179387316 - perf/total_num_tokens:946301 - perf/time_per_step:46.17766292497981 - perf/throughput:2561.576691141125
[36m(TaskRunner pid=155900)[0m global_steps 23
[36m(TaskRunner pid=155900)[0m first_prompt: # 프로그래머스 옹알이(2) https://school.programmers.co.kr/learn/courses/30/lessons/133499
[36m(TaskRunner pid=155900)[0m def solution(babbling): end1prompt
[36m(TaskRunner pid=155900)[0m first_res:   
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt:     answer = 0 end2prompt
[36m(TaskRunner pid=155900)[0m second_res:   
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:     can = ["aya","ye","woo","ma"]    end3prompt
[36m(TaskRunner pid=155900)[0m third_res:   
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:     
[36m(TaskRunner pid=155900)[0m     for i in babbling:                   end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:   
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:         for j in can:             end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:             
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:             if j+j not in i: # 연속한 발음은 못하기 때문      endsix
[36m(TaskRunner pid=155900)[0m six_res:   
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:                 i = i.replace(j,' ')  # j를 ''로 변경 end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:   
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m Training Progress:   1%|          | 23/2219 [19:10<29:05:59, 47.70s/it]
[36m(TaskRunner pid=155900)[0m step:23 - global_seqlen/min:108223 - global_seqlen/max:131813 - global_seqlen/minmax_diff:23590 - global_seqlen/balanced_min:116880 - global_seqlen/balanced_max:116880 - global_seqlen/mean:116880.0 - actor/entropy:0.5569255948066711 - actor/pg_loss:-0.037698154943063854 - actor/pg_clipfrac:0.14934244751930237 - actor/ppo_kl:0.14917169511405462 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:6.156338751316071 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:37.9296875 - perf/cpu_memory_used_gb:75.49743270874023 - actor/lr:2e-06 - training/global_step:23 - training/epoch:0 - critic/rewards/mean:1.5035383701324463 - critic/rewards/max:3.8451356887817383 - critic/rewards/min:-2.0 - critic/advantages/mean:-0.010232633911073208 - critic/advantages/max:1.7888513803482056 - critic/advantages/min:-1.7888531684875488 - critic/format_reward/mean:0.9951988458633423 - response_length/mean:1.0169647932052612 - response_length/max:5.3125 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:27.9501953125 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0009765625 - timing_s/start_profile:5.910987965762615e-06 - timing_s/generate_sequences:33.395748138427734 - timing_s/reshard:0.34181326627731323 - timing_s/gen:34.48220142698847 - timing_s/reward:0.7640954800881445 - timing_s/old_log_prob:1.9277221240336075 - timing_s/ref:1.9670007950626314 - timing_s/adv:0.4653547389898449 - timing_s/update_actor:7.674980490002781 - timing_s/step:47.386304063024 - timing_s/stop_profile:2.7799978852272034e-06 - timing_per_token_ms/adv:0.0031376771852151555 - timing_per_token_ms/update_actor:0.051748932938187345 - timing_per_token_ms/ref:0.013262599477047065 - timing_per_token_ms/gen:6.622456208233446 - perf/total_num_tokens:935040 - perf/time_per_step:47.386304063024 - perf/throughput:2466.535474987648
[36m(TaskRunner pid=155900)[0m global_steps 24
[36m(TaskRunner pid=155900)[0m error!! index 6 is out of bounds for dimension 0 with size 6
[36m(TaskRunner pid=155900)[0m Training Progress:   1%|          | 24/2219 [19:59<29:18:58, 48.08s/it]
[36m(TaskRunner pid=155900)[0m step:24 - global_seqlen/min:104018 - global_seqlen/max:140849 - global_seqlen/minmax_diff:36831 - global_seqlen/balanced_min:117786 - global_seqlen/balanced_max:117787 - global_seqlen/mean:117786.25 - actor/entropy:0.4838846027851105 - actor/pg_loss:0.029465650487691165 - actor/pg_clipfrac:0.13080969811417162 - actor/ppo_kl:0.10519911935552954 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:8.05008840560913 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:37.9296875 - perf/cpu_memory_used_gb:75.4918441772461 - actor/lr:2e-06 - training/global_step:24 - training/epoch:0 - critic/rewards/mean:1.520080327987671 - critic/rewards/max:2.8799288272857666 - critic/rewards/min:-1.5475589036941528 - critic/advantages/mean:-0.009537048637866974 - critic/advantages/max:1.788853406906128 - critic/advantages/min:-1.7888535261154175 - critic/format_reward/mean:0.9947891235351562 - response_length/mean:1.0191853046417236 - response_length/max:4.870967864990234 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:28.345703125 - prompt_length/max:127.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0 - timing_s/start_profile:1.7023994587361813e-05 - timing_s/generate_sequences:34.811405181884766 - timing_s/reshard:0.33278489112854004 - timing_s/gen:35.88433578296099 - timing_s/reward:0.7541138270171359 - timing_s/old_log_prob:2.0037540110060945 - timing_s/ref:2.0065875629661605 - timing_s/adv:0.44444873405154794 - timing_s/update_actor:7.580321667948738 - timing_s/step:48.78468729101587 - timing_s/stop_profile:2.6569468900561333e-06 - timing_per_token_ms/adv:0.0029561288379620545 - timing_per_token_ms/update_actor:0.05041843021888981 - timing_per_token_ms/ref:0.013346266748714137 - timing_per_token_ms/gen:6.876727547579053 - perf/total_num_tokens:942290 - perf/time_per_step:48.78468729101587 - perf/throughput:2414.4102697095973
[36m(TaskRunner pid=155900)[0m global_steps 25
[36m(TaskRunner pid=155900)[0m first_prompt: class Solution(object): end1prompt
[36m(TaskRunner pid=155900)[0m first_res:  
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt:     def setZeroes(self, matrix): end2prompt
[36m(TaskRunner pid=155900)[0m second_res:  
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:         """
[36m(TaskRunner pid=155900)[0m         :type matrix: List[List[int]]
[36m(TaskRunner pid=155900)[0m         :rtype: None Do not return anything, modify matrix in-place instead.
[36m(TaskRunner pid=155900)[0m         """
[36m(TaskRunner pid=155900)[0m         if matrix is None: end3prompt
[36m(TaskRunner pid=155900)[0m third_res:  
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:             return None end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:  
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:         zeromark = [] end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:  
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:         m = len(matrix) endsix
[36m(TaskRunner pid=155900)[0m six_res:  
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:         n = len(matrix[0]) end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:  
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m Training Progress:   1%|          | 25/2219 [20:47<29:14:07, 47.97s/it]
[36m(TaskRunner pid=155900)[0m step:25 - global_seqlen/min:109827 - global_seqlen/max:121690 - global_seqlen/minmax_diff:11863 - global_seqlen/balanced_min:115945 - global_seqlen/balanced_max:115946 - global_seqlen/mean:115945.75 - actor/entropy:0.3383646607398987 - actor/pg_loss:0.007822204963304102 - actor/pg_clipfrac:0.10473544796695933 - actor/ppo_kl:0.06467111753299833 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:7.540100455284119 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:37.9296875 - perf/cpu_memory_used_gb:75.44586563110352 - actor/lr:2e-06 - training/global_step:25 - training/epoch:0 - critic/rewards/mean:1.5047698020935059 - critic/rewards/max:2.7280869483947754 - critic/rewards/min:-2.0 - critic/advantages/mean:-0.009590040892362595 - critic/advantages/max:1.7888529300689697 - critic/advantages/min:-1.788853406906128 - critic/format_reward/mean:0.9965713620185852 - response_length/mean:1.0086915493011475 - response_length/max:2.2333333492279053 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:28.271484375 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0009765625 - timing_s/start_profile:1.8712948076426983e-05 - timing_s/generate_sequences:33.49184036254883 - timing_s/reshard:0.332813560962677 - timing_s/gen:34.586342238937505 - timing_s/reward:0.7476016629952937 - timing_s/old_log_prob:1.8484724059235305 - timing_s/ref:1.857133085024543 - timing_s/adv:0.4058849959401414 - timing_s/update_actor:7.939590306952596 - timing_s/step:47.491760621080175 - timing_s/stop_profile:3.0159717425704002e-06 - timing_per_token_ms/adv:0.002707443197930513 - timing_per_token_ms/update_actor:0.052960789351484176 - timing_per_token_ms/ref:0.01238794828336777 - timing_per_token_ms/gen:6.69693788342707 - perf/total_num_tokens:927566 - perf/time_per_step:47.491760621080175 - perf/throughput:2441.3866423081217
[36m(TaskRunner pid=155900)[0m global_steps 26
[36m(TaskRunner pid=155900)[0m error!! index 3 is out of bounds for dimension 0 with size 3
[36m(TaskRunner pid=155900)[0m Training Progress:   1%|          | 26/2219 [21:35<29:10:30, 47.89s/it]
[36m(TaskRunner pid=155900)[0m step:26 - global_seqlen/min:107944 - global_seqlen/max:124771 - global_seqlen/minmax_diff:16827 - global_seqlen/balanced_min:117346 - global_seqlen/balanced_max:117347 - global_seqlen/mean:117346.375 - actor/entropy:0.28921860456466675 - actor/pg_loss:-0.01795885725878179 - actor/pg_clipfrac:0.049778696440625936 - actor/ppo_kl:0.035421423707157375 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:5.761944204568863 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:37.9296875 - perf/cpu_memory_used_gb:75.43764877319336 - actor/lr:2e-06 - training/global_step:26 - training/epoch:0 - critic/rewards/mean:1.5312750339508057 - critic/rewards/max:3.184781551361084 - critic/rewards/min:-2.0 - critic/advantages/mean:-0.0035256370902061462 - critic/advantages/max:1.7888531684875488 - critic/advantages/min:-1.7888535261154175 - critic/format_reward/mean:0.9972135424613953 - response_length/mean:1.0093281269073486 - response_length/max:2.6666667461395264 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:28.2373046875 - prompt_length/max:126.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0 - timing_s/start_profile:5.723093636333942e-06 - timing_s/generate_sequences:33.91581344604492 - timing_s/reshard:0.34012770652770996 - timing_s/gen:35.02909065398853 - timing_s/reward:0.7466207899851725 - timing_s/old_log_prob:1.80277226108592 - timing_s/ref:1.9015547260642052 - timing_s/adv:0.3971383209573105 - timing_s/update_actor:7.576881680055521 - timing_s/step:47.55996373202652 - timing_s/stop_profile:2.756016328930855e-06 - timing_per_token_ms/adv:0.0026521370487555132 - timing_per_token_ms/update_actor:0.05059931907168491 - timing_per_token_ms/ref:0.01269880913802102 - timing_per_token_ms/gen:6.778389910265505 - perf/total_num_tokens:938771 - perf/time_per_step:47.55996373202652 - perf/throughput:2467.335249900114
[36m(TaskRunner pid=155900)[0m global_steps 27
[36m(TaskRunner pid=155900)[0m first_prompt: # 1647. Minimum Deletions to Make Character Frequencies Unique
[36m(TaskRunner pid=155900)[0m class Solution: end1prompt
[36m(TaskRunner pid=155900)[0m first_res:   
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt:     def minDeletions(self, s: str) -> int: end2prompt
[36m(TaskRunner pid=155900)[0m second_res:   
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:         '''
[36m(TaskRunner pid=155900)[0m         Greedy.
[36m(TaskRunner pid=155900)[0m         Start deletion from the most frequent chars.
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m         Each available frequency 'a' can be used once.
[36m(TaskRunner pid=155900)[0m         If 'a' < 'f', we need to delete ('f' - 'a') current chars.
[36m(TaskRunner pid=155900)[0m         Each round, 'a' will be used, the next 'a' is the
[36m(TaskRunner pid=155900)[0m         min of ('a'-1) and ('f'-1) where 'f' is the current freq.
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m         Note that min 'a' is 0, meaning deleting all of current chars.
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m         Time: O(n) where n is len(s), as we need to build Counter(s).
[36m(TaskRunner pid=155900)[0m         Space: O(1) as we only have at most 26 letters.
[36m(TaskRunner pid=155900)[0m         '''
[36m(TaskRunner pid=155900)[0m         freqs = sorted(Counter(s).values(), reverse=True) end3prompt
[36m(TaskRunner pid=155900)[0m third_res:   
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:         ans = 0 end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:   
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:         available_freq = freqs[0] end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:   
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:         for f in freqs: endsix
[36m(TaskRunner pid=155900)[0m six_res:   
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:             if available_freq < f: end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:   
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m Training Progress:   1%|          | 27/2219 [22:25<29:34:21, 48.57s/it]
[36m(TaskRunner pid=155900)[0m step:27 - global_seqlen/min:114868 - global_seqlen/max:126961 - global_seqlen/minmax_diff:12093 - global_seqlen/balanced_min:119218 - global_seqlen/balanced_max:119219 - global_seqlen/mean:119218.375 - actor/entropy:0.25363361835479736 - actor/pg_loss:0.0037500462611205878 - actor/pg_clipfrac:0.06348976064473391 - actor/ppo_kl:0.04176856013372117 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:6.019250124692917 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:37.9296875 - perf/cpu_memory_used_gb:75.48357772827148 - actor/lr:2e-06 - training/global_step:27 - training/epoch:0 - critic/rewards/mean:1.5286073684692383 - critic/rewards/max:3.0994982719421387 - critic/rewards/min:-2.0 - critic/advantages/mean:-0.005816337652504444 - critic/advantages/max:1.7888532876968384 - critic/advantages/min:-1.7888535261154175 - critic/format_reward/mean:0.9974006414413452 - response_length/mean:1.0078151226043701 - response_length/max:3.25 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:29.1318359375 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0029296875 - timing_s/start_profile:6.043934263288975e-06 - timing_s/generate_sequences:34.906982421875 - timing_s/reshard:0.777786135673523 - timing_s/gen:36.5199366529705 - timing_s/reward:0.7801867579109967 - timing_s/old_log_prob:1.8743921199347824 - timing_s/ref:2.00135801511351 - timing_s/adv:0.4594672149978578 - timing_s/update_actor:8.188084135996178 - timing_s/step:49.925750499009155 - timing_s/stop_profile:2.718064934015274e-06 - timing_per_token_ms/adv:0.0029774628149587426 - timing_per_token_ms/update_actor:0.05306083926095983 - timing_per_token_ms/ref:0.012969301997853963 - timing_per_token_ms/gen:7.07748835085939 - perf/total_num_tokens:953747 - perf/time_per_step:49.925750499009155 - perf/throughput:2387.913527756905
[36m(TaskRunner pid=155900)[0m global_steps 28
[36m(TaskRunner pid=155900)[0m first_prompt: # Definition for a binary tree node.
[36m(TaskRunner pid=155900)[0m # class TreeNode:
[36m(TaskRunner pid=155900)[0m #     def __init__(self, val=0, left=None, right=None):
[36m(TaskRunner pid=155900)[0m #         self.val = val
[36m(TaskRunner pid=155900)[0m #         self.left = left
[36m(TaskRunner pid=155900)[0m #         self.right = right
[36m(TaskRunner pid=155900)[0m class Solution: end1prompt
[36m(TaskRunner pid=155900)[0m first_res:   
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt:     def countNodes(self, root: Optional[TreeNode]) -> int: end2prompt
[36m(TaskRunner pid=155900)[0m second_res:   
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:         def helper(node): end3prompt
[36m(TaskRunner pid=155900)[0m third_res:   
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:             if not node: end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:   
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:                 return 0 end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:   
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:             l = node.left endsix
[36m(TaskRunner pid=155900)[0m six_res:   
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:             r = node.right end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:   
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m step:28 - global_seqlen/min:108554 - global_seqlen/max:128591 - global_seqlen/minmax_diff:20037 - global_seqlen/balanced_min:119968 - global_seqlen/balanced_max:119969 - global_seqlen/mean:119968.375 - actor/entropy:0.22132247686386108 - actor/pg_loss:0.01883699035970494 - actor/pg_clipfrac:0.06217487411340698 - actor/ppo_kl:0.050766252394609704 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:5.564436465501785 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:37.9296875 - perf/cpu_memory_used_gb:75.39678573608398 - actor/lr:2e-06 - training/global_step:28 - training/epoch:0 - critic/rewards/mean:1.514374017715454 - critic/rewards/max:3.5795493125915527 - critic/rewards/min:-0.9144269824028015 - critic/advantages/mean:-0.00457929540425539 - critic/advantages/max:1.7888509035110474 - critic/advantages/min:-1.7888520956039429 - critic/format_reward/mean:0.998005747795105 - response_length/mean:1.005621314048767 - response_length/max:3.5625 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:28.0771484375 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0009765625 - timing_s/start_profile:5.260924808681011e-06 - timing_s/generate_sequences:31.720014572143555 - timing_s/reshard:0.3332150876522064 - timing_s/gen:32.80471912689973 - timing_s/reward:0.7443500470835716 - timing_s/old_log_prob:1.761211259989068 - timing_s/ref:1.7487198639428243 - timing_s/adv:0.39790004398673773 - timing_s/update_actor:8.127227997989394 - timing_s/step:46.06756510201376 - timing_s/stop_profile:2.8100330382585526e-06 - timing_per_token_ms/adv:0.0026721957001124693 - timing_per_token_ms/update_actor:0.05458040037508714 - timing_per_token_ms/ref:0.011743958744787243 - timing_per_token_ms/gen:6.37135615868313 - perf/total_num_tokens:959747 - perf/time_per_step:46.06756510201376 - perf/throughput:2604.1831109227824
[36m(TaskRunner pid=155900)[0m Training Progress:   1%|▏         | 28/2219 [23:11<29:07:54, 47.87s/it]
[36m(TaskRunner pid=155900)[0m global_steps 29
[36m(TaskRunner pid=155900)[0m first_prompt: class Solution: end1prompt
[36m(TaskRunner pid=155900)[0m first_res:   
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt:     def findKthNumber(self, n, k): end2prompt
[36m(TaskRunner pid=155900)[0m second_res:   
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:         if k == 1: return 1 end3prompt
[36m(TaskRunner pid=155900)[0m third_res:   
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:         return self.denary(n, k) end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:   
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt: 
[36m(TaskRunner pid=155900)[0m     def denary(self, n, k): end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:   
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:         cur = 1  # cur starting from 1 endsix
[36m(TaskRunner pid=155900)[0m six_res:   
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:         k -= 1  # k-th shift to 0-indexed end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:   
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m Training Progress:   1%|▏         | 29/2219 [23:59<29:09:09, 47.92s/it]
[36m(TaskRunner pid=155900)[0m step:29 - global_seqlen/min:106421 - global_seqlen/max:121280 - global_seqlen/minmax_diff:14859 - global_seqlen/balanced_min:115402 - global_seqlen/balanced_max:115403 - global_seqlen/mean:115402.875 - actor/entropy:0.17960964143276215 - actor/pg_loss:-0.021215485967695714 - actor/pg_clipfrac:0.07323725894093513 - actor/ppo_kl:0.04793346736503281 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:3.9601986408233643 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:37.9296875 - perf/cpu_memory_used_gb:75.50764846801758 - actor/lr:2e-06 - training/global_step:29 - training/epoch:0 - critic/rewards/mean:1.5253784656524658 - critic/rewards/max:3.0887889862060547 - critic/rewards/min:-1.8619722127914429 - critic/advantages/mean:-0.003524276427924633 - critic/advantages/max:1.788853645324707 - critic/advantages/min:-1.7888532876968384 - critic/format_reward/mean:0.9978246688842773 - response_length/mean:1.00740647315979 - response_length/max:5.0 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:28.845703125 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0009765625 - timing_s/start_profile:1.7696991562843323e-05 - timing_s/generate_sequences:33.260982513427734 - timing_s/reshard:0.33739516139030457 - timing_s/gen:34.400087973917834 - timing_s/reward:0.7287659751018509 - timing_s/old_log_prob:1.793290800997056 - timing_s/ref:1.8179918080568314 - timing_s/adv:0.4706852979725227 - timing_s/update_actor:8.5834898899775 - timing_s/step:47.894614854012616 - timing_s/stop_profile:2.997112460434437e-06 - timing_per_token_ms/adv:0.003079435397000119 - timing_per_token_ms/update_actor:0.05615706016492662 - timing_per_token_ms/ref:0.01189412193094094 - timing_per_token_ms/gen:6.6693709832461225 - perf/total_num_tokens:923223 - perf/time_per_step:47.894614854012616 - perf/throughput:2409.516713972104
[36m(TaskRunner pid=155900)[0m global_steps 30
[36m(TaskRunner pid=155900)[0m Training Progress:   1%|▏         | 30/2219 [24:46<28:56:44, 47.60s/it]
[36m(TaskRunner pid=155900)[0m first_prompt: '''
[36m(TaskRunner pid=155900)[0m Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m You must do this in-place without making a copy of the array.
[36m(TaskRunner pid=155900)[0m Minimize the total number of operations.
[36m(TaskRunner pid=155900)[0m '''
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m class Solution(object): end1prompt
[36m(TaskRunner pid=155900)[0m first_res:   
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt:     def moveZeroes(self, nums): end2prompt
[36m(TaskRunner pid=155900)[0m second_res:   
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:         """
[36m(TaskRunner pid=155900)[0m         :type nums: List[int]
[36m(TaskRunner pid=155900)[0m         :rtype: None Do not return anything, modify nums in-place instead.
[36m(TaskRunner pid=155900)[0m         """
[36m(TaskRunner pid=155900)[0m         
[36m(TaskRunner pid=155900)[0m         non_zero_len = len(nums) end3prompt
[36m(TaskRunner pid=155900)[0m third_res:   
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:         idx = 0 end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:   
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:         while idx < non_zero_len: end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:   
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:             if nums[idx] == 0: endsix
[36m(TaskRunner pid=155900)[0m six_res:   
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:                 # Move the zero to the end of list.
[36m(TaskRunner pid=155900)[0m                 nums.pop(idx) end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:   
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m step:30 - global_seqlen/min:109986 - global_seqlen/max:123166 - global_seqlen/minmax_diff:13180 - global_seqlen/balanced_min:115582 - global_seqlen/balanced_max:115583 - global_seqlen/mean:115582.875 - actor/entropy:0.1767588108778 - actor/pg_loss:0.009804521524347364 - actor/pg_clipfrac:0.019217997754458337 - actor/ppo_kl:0.00922069742809981 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:5.109482705593109 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:37.9296875 - perf/cpu_memory_used_gb:75.46147155761719 - actor/lr:2e-06 - training/global_step:30 - training/epoch:0 - critic/rewards/mean:1.538339376449585 - critic/rewards/max:3.7914791107177734 - critic/rewards/min:-0.0208143200725317 - critic/advantages/mean:-0.005360493436455727 - critic/advantages/max:1.7888511419296265 - critic/advantages/min:-1.7888531684875488 - critic/format_reward/mean:0.9983342885971069 - response_length/mean:1.005408763885498 - response_length/max:2.3636362552642822 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:28.470703125 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0009765625 - timing_s/start_profile:5.671987310051918e-06 - timing_s/generate_sequences:32.091949462890625 - timing_s/reshard:0.32770034670829773 - timing_s/gen:32.95508925698232 - timing_s/reward:0.7379546969896182 - timing_s/old_log_prob:1.9034857349470258 - timing_s/ref:2.007322237943299 - timing_s/adv:0.4559437440475449 - timing_s/update_actor:8.524889877997339 - timing_s/step:46.68963325105142 - timing_s/stop_profile:3.1050294637680054e-06 - timing_per_token_ms/adv:0.003021141758620634 - timing_per_token_ms/update_actor:0.056487014317657694 - timing_per_token_ms/ref:0.013300774745197384 - timing_per_token_ms/gen:6.401914426953803 - perf/total_num_tokens:924663 - perf/time_per_step:46.68963325105142 - perf/throughput:2475.557569246855
[36m(TaskRunner pid=155900)[0m global_steps 31
[36m(TaskRunner pid=155900)[0m first_prompt: from collections import defaultdict end1prompt
[36m(TaskRunner pid=155900)[0m first_res: 
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt: def solution(n, s, a, b, fares): end2prompt
[36m(TaskRunner pid=155900)[0m second_res:   
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:     graph_fare = {} end3prompt
[36m(TaskRunner pid=155900)[0m third_res:   
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:     graph_node = {} end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:   
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:     for i in range(n): end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:   
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:         graph_fare[i+1] = defaultdict(int) endsix
[36m(TaskRunner pid=155900)[0m six_res:   
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:         graph_node[i+1] = list() end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:   
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m Training Progress:   1%|▏         | 31/2219 [25:35<29:12:34, 48.06s/it]
[36m(TaskRunner pid=155900)[0m step:31 - global_seqlen/min:114278 - global_seqlen/max:126088 - global_seqlen/minmax_diff:11810 - global_seqlen/balanced_min:118727 - global_seqlen/balanced_max:118728 - global_seqlen/mean:118727.875 - actor/entropy:0.14015929400920868 - actor/pg_loss:-0.002775584626942873 - actor/pg_clipfrac:0.06948982737958431 - actor/ppo_kl:0.0667978074401617 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:3.3255467414855957 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:37.9296875 - perf/cpu_memory_used_gb:75.58375549316406 - actor/lr:2e-06 - training/global_step:31 - training/epoch:0 - critic/rewards/mean:1.5388720035552979 - critic/rewards/max:2.895368814468384 - critic/rewards/min:0.40835049748420715 - critic/advantages/mean:-0.003798436839133501 - critic/advantages/max:1.7888505458831787 - critic/advantages/min:-1.788853645324707 - critic/format_reward/mean:0.9981669187545776 - response_length/mean:1.0052435398101807 - response_length/max:2.25 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:29.4580078125 - prompt_length/max:127.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0 - timing_s/start_profile:6.144051440060139e-06 - timing_s/generate_sequences:34.92341613769531 - timing_s/reshard:0.3382102847099304 - timing_s/gen:36.11856137402356 - timing_s/reward:0.7662520939484239 - timing_s/old_log_prob:1.8990973819745705 - timing_s/ref:1.893074685940519 - timing_s/adv:0.4458993769949302 - timing_s/update_actor:7.7153059439733624 - timing_s/step:48.94264247699175 - timing_s/stop_profile:3.1830277293920517e-06 - timing_per_token_ms/adv:0.0028588452755236916 - timing_per_token_ms/update_actor:0.04946601651654446 - timing_per_token_ms/ref:0.012137284556412562 - timing_per_token_ms/gen:7.017609736961615 - perf/total_num_tokens:949823 - perf/time_per_step:48.94264247699175 - perf/throughput:2425.857472975938
[36m(TaskRunner pid=155900)[0m global_steps 32
[36m(TaskRunner pid=155900)[0m error!! index 3 is out of bounds for dimension 0 with size 3
[36m(TaskRunner pid=155900)[0m Training Progress:   1%|▏         | 32/2219 [26:19<28:30:27, 46.93s/it]
[36m(TaskRunner pid=155900)[0m step:32 - global_seqlen/min:109086 - global_seqlen/max:122203 - global_seqlen/minmax_diff:13117 - global_seqlen/balanced_min:114975 - global_seqlen/balanced_max:114976 - global_seqlen/mean:114975.875 - actor/entropy:0.1369713693857193 - actor/pg_loss:0.0028749812161549928 - actor/pg_clipfrac:0.04576054365606978 - actor/ppo_kl:0.04912356172392549 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:3.56505811214447 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:37.9296875 - perf/cpu_memory_used_gb:75.5178451538086 - actor/lr:2e-06 - training/global_step:32 - training/epoch:0 - critic/rewards/mean:1.5223557949066162 - critic/rewards/max:3.3034586906433105 - critic/rewards/min:-1.4895524978637695 - critic/advantages/mean:-0.003520720638334751 - critic/advantages/max:1.7888513803482056 - critic/advantages/min:-1.7888517379760742 - critic/format_reward/mean:0.9984318017959595 - response_length/mean:1.0053455829620361 - response_length/max:2.846153736114502 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:27.720703125 - prompt_length/max:125.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0 - timing_s/start_profile:5.328911356627941e-06 - timing_s/generate_sequences:30.405834197998047 - timing_s/reshard:0.46625590324401855 - timing_s/gen:31.602729884907603 - timing_s/reward:0.7765316729201004 - timing_s/old_log_prob:1.8754344739718363 - timing_s/ref:1.7939418730093166 - timing_s/adv:0.4068888350157067 - timing_s/update_actor:7.552864272031002 - timing_s/step:44.10998394701164 - timing_s/stop_profile:2.972083166241646e-06 - timing_per_token_ms/adv:0.0027664951949655037 - timing_per_token_ms/update_actor:0.05135300091484153 - timing_per_token_ms/ref:0.012197266537274515 - timing_per_token_ms/gen:6.139588792163129 - perf/total_num_tokens:919807 - perf/time_per_step:44.10998394701164 - perf/throughput:2606.5725876962006
[36m(TaskRunner pid=155900)[0m global_steps
[36m(TaskRunner pid=155900)[0m  33
[36m(TaskRunner pid=155900)[0m first_prompt: # @Time : 2022-07-28 8:01
[36m(TaskRunner pid=155900)[0m # @Author : Phalange
[36m(TaskRunner pid=155900)[0m # @File : 1331. 数组序号转换.py
[36m(TaskRunner pid=155900)[0m # @Software: PyCharm
[36m(TaskRunner pid=155900)[0m # C'est la vie,enjoy it! :D
[36m(TaskRunner pid=155900)[0m from typing import List end1prompt
[36m(TaskRunner pid=155900)[0m first_res:   
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt: 
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m class Solution: end2prompt
[36m(TaskRunner pid=155900)[0m second_res:   
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:     def arrayRankTransform(self, arr: List[int]) -> List[int]: end3prompt
[36m(TaskRunner pid=155900)[0m third_res:   
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:         arr = list(enumerate(arr)) end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:   
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:         arr.sort(key=lambda x:x[1]) end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:   
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:         res = [0] * len(arr) endsix
[36m(TaskRunner pid=155900)[0m six_res:   
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:         prev = None end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:   
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m Training Progress:   1%|▏         | 33/2219 [27:05<28:11:54, 46.44s/it]
[36m(TaskRunner pid=155900)[0m step:33 - global_seqlen/min:102132 - global_seqlen/max:119300 - global_seqlen/minmax_diff:17168 - global_seqlen/balanced_min:114438 - global_seqlen/balanced_max:114439 - global_seqlen/mean:114438.125 - actor/entropy:0.1054210215806961 - actor/pg_loss:0.007533343555405736 - actor/pg_clipfrac:0.04552077791886404 - actor/ppo_kl:0.03520913116612974 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:3.943304121494293 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:37.9296875 - perf/cpu_memory_used_gb:75.4245834350586 - actor/lr:2e-06 - training/global_step:33 - training/epoch:0 - critic/rewards/mean:1.527710199356079 - critic/rewards/max:2.821314811706543 - critic/rewards/min:0.608519434928894 - critic/advantages/mean:-8.646872447570786e-05 - critic/advantages/max:1.7888482809066772 - critic/advantages/min:-1.7888532876968384 - critic/format_reward/mean:0.9991756677627563 - response_length/mean:1.0019220113754272 - response_length/max:1.8461538553237915 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:29.5009765625 - prompt_length/max:127.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0 - timing_s/start_profile:5.854060873389244e-06 - timing_s/generate_sequences:31.51279067993164 - timing_s/reshard:0.47649085521698 - timing_s/gen:32.44930028903764 - timing_s/reward:0.7686436179792508 - timing_s/old_log_prob:1.8396447310224175 - timing_s/ref:2.061918529914692 - timing_s/adv:0.4301693569868803 - timing_s/update_actor:7.442648063064553 - timing_s/step:45.09726087900344 - timing_s/stop_profile:3.0420487746596336e-06 - timing_per_token_ms/adv:0.0027544088069973646 - timing_per_token_ms/update_actor:0.047655870971097816 - timing_per_token_ms/ref:0.013202629303698407 - timing_per_token_ms/gen:6.325595944526967 - perf/total_num_tokens:915505 - perf/time_per_step:45.09726087900344 - perf/throughput:2537.584828201407
[36m(TaskRunner pid=155900)[0m global_steps 34
[36m(TaskRunner pid=155900)[0m first_prompt: class Solution: end1prompt
[36m(TaskRunner pid=155900)[0m first_res:   
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt:     def maxPathSum(self, root: Optional[TreeNode]) -> int: end2prompt
[36m(TaskRunner pid=155900)[0m second_res:   
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:         maxSum = -inf end3prompt
[36m(TaskRunner pid=155900)[0m third_res:   
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:         def dfs(root): end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:   
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:             nonlocal maxSum end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:   
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:             if not root: return 0 endsix
[36m(TaskRunner pid=155900)[0m six_res:   
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt: 
[36m(TaskRunner pid=155900)[0m             left = dfs(root.left) end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:   
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m Training Progress:   2%|▏         | 34/2219 [27:53<28:26:35, 46.86s/it]
[36m(TaskRunner pid=155900)[0m step:34 - global_seqlen/min:108918 - global_seqlen/max:126711 - global_seqlen/minmax_diff:17793 - global_seqlen/balanced_min:118421 - global_seqlen/balanced_max:118424 - global_seqlen/mean:118422.875 - actor/entropy:0.11692007631063461 - actor/pg_loss:-0.02221753050107509 - actor/pg_clipfrac:0.04132308503612876 - actor/ppo_kl:0.03512686598696746 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:3.780960202217102 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:37.9296875 - perf/cpu_memory_used_gb:75.50516891479492 - actor/lr:2e-06 - training/global_step:34 - training/epoch:0 - critic/rewards/mean:1.5394036769866943 - critic/rewards/max:3.1231720447540283 - critic/rewards/min:-0.23000386357307434 - critic/advantages/mean:-0.0006630722200497985 - critic/advantages/max:1.7888444662094116 - critic/advantages/min:-1.7888535261154175 - critic/format_reward/mean:0.9987123608589172 - response_length/mean:1.0038769245147705 - response_length/max:3.230769157409668 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:29.068359375 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.001953125 - timing_s/start_profile:4.709931090474129e-06 - timing_s/generate_sequences:34.99814224243164 - timing_s/reshard:0.3402553200721741 - timing_s/gen:36.14689343702048 - timing_s/reward:0.7803930010413751 - timing_s/old_log_prob:1.7427167689893395 - timing_s/ref:1.6643443380016834 - timing_s/adv:0.38519182393793017 - timing_s/update_actor:6.887341346940957 - timing_s/step:47.701586578041315 - timing_s/stop_profile:3.72203066945076e-06 - timing_per_token_ms/adv:0.0025017353962065955 - timing_per_token_ms/update_actor:0.04473175327879206 - timing_per_token_ms/ref:0.01080954704408729 - timing_per_token_ms/gen:7.032674640356401 - perf/total_num_tokens:947383 - perf/time_per_step:47.701586578041315 - perf/throughput:2482.5772787715646
[36m(TaskRunner pid=155900)[0m global_steps 35
[36m(TaskRunner pid=155900)[0m first_prompt: from typing import List end1prompt
[36m(TaskRunner pid=155900)[0m first_res: 
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt: 
[36m(TaskRunner pid=155900)[0m class Solution: end2prompt
[36m(TaskRunner pid=155900)[0m second_res:   
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:     def maxArea(self, height: List[int]) -> int: end3prompt
[36m(TaskRunner pid=155900)[0m third_res:   
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:         """
[36m(TaskRunner pid=155900)[0m         left and right pointers
[36m(TaskRunner pid=155900)[0m         store current maxArea, store difference between left and right for area calculation (and differences between leftSize and rightSize)
[36m(TaskRunner pid=155900)[0m         at end of each iteration, compare currentArea to maxArea, if larger replace, else continue
[36m(TaskRunner pid=155900)[0m         while left < right:
[36m(TaskRunner pid=155900)[0m             if leftSize > rightSize:
[36m(TaskRunner pid=155900)[0m                 right -= 1
[36m(TaskRunner pid=155900)[0m             elif right > left:
[36m(TaskRunner pid=155900)[0m                 left += 1
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m         # VARIABLES
[36m(TaskRunner pid=155900)[0m         left = 0
[36m(TaskRunner pid=155900)[0m         right = len(height) - 1
[36m(TaskRunner pid=155900)[0m         maxArea = 0
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m         while:
[36m(TaskRunner pid=155900)[0m             h = min(height[left], height[right])
[36m(TaskRunner pid=155900)[0m             w = right - left
[36m(TaskRunner pid=155900)[0m             currentArea = h * w
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m         """
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m         left = 0 end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res: 
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:         right = len(height) - 1 end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res: 
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:         maxArea = 0 endsix
[36m(TaskRunner pid=155900)[0m six_res: 
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt: 
[36m(TaskRunner pid=155900)[0m         while left < right: end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:   
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m Training Progress:   2%|▏         | 35/2219 [28:40<28:32:37, 47.05s/it]
[36m(TaskRunner pid=155900)[0m step:35 - global_seqlen/min:109943 - global_seqlen/max:127308 - global_seqlen/minmax_diff:17365 - global_seqlen/balanced_min:118067 - global_seqlen/balanced_max:118068 - global_seqlen/mean:118067.375 - actor/entropy:0.09803501516580582 - actor/pg_loss:0.0031901349779218436 - actor/pg_clipfrac:0.03331801297608763 - actor/ppo_kl:0.029517674743900102 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:3.7156771421432495 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:37.9296875 - perf/cpu_memory_used_gb:75.5256233215332 - actor/lr:2e-06 - training/global_step:35 - training/epoch:0 - critic/rewards/mean:1.5374337434768677 - critic/rewards/max:2.94618558883667 - critic/rewards/min:-0.28150641918182373 - critic/advantages/mean:0.0005516309756785631 - critic/advantages/max:1.788849949836731 - critic/advantages/min:-1.788853406906128 - critic/format_reward/mean:0.999153733253479 - response_length/mean:1.0016844272613525 - response_length/max:2.3333332538604736 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:28.72265625 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0009765625 - timing_s/start_profile:5.435897037386894e-06 - timing_s/generate_sequences:33.2755012512207 - timing_s/reshard:0.3391404449939728 - timing_s/gen:34.3842178870691 - timing_s/reward:0.7988456320017576 - timing_s/old_log_prob:1.8969780509360135 - timing_s/ref:1.9814907619729638 - timing_s/adv:0.9886370999738574 - timing_s/update_actor:7.1051458939909935 - timing_s/step:47.274718519998714 - timing_s/stop_profile:2.839951775968075e-06 - timing_per_token_ms/adv:0.006496130069811696 - timing_per_token_ms/update_actor:0.0466864453029069 - timing_per_token_ms/ref:0.01301996629728647 - timing_per_token_ms/gen:6.704374205696325 - perf/total_num_tokens:944539 - perf/time_per_step:47.274718519998714 - perf/throughput:2497.4738865986847
[36m(TaskRunner pid=155900)[0m global_steps 36
[36m(TaskRunner pid=155900)[0m first_prompt: # Time:  O(n)
[36m(TaskRunner pid=155900)[0m # Space: O(n)
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m # Given a string, find the first non-repeating character in it and
[36m(TaskRunner pid=155900)[0m # return it's index. If it doesn't exist, return -1.
[36m(TaskRunner pid=155900)[0m #
[36m(TaskRunner pid=155900)[0m # Examples:
[36m(TaskRunner pid=155900)[0m #
[36m(TaskRunner pid=155900)[0m # s = "leetcode"
[36m(TaskRunner pid=155900)[0m # return 0.
[36m(TaskRunner pid=155900)[0m #
[36m(TaskRunner pid=155900)[0m # s = "loveleetcode",
[36m(TaskRunner pid=155900)[0m # return 2.
[36m(TaskRunner pid=155900)[0m # Note: You may assume the string contain only lowercase letters.
[36m(TaskRunner pid=155900)[0m import collections end1prompt
[36m(TaskRunner pid=155900)[0m first_res: 
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt: import string end2prompt
[36m(TaskRunner pid=155900)[0m second_res: 
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt: 
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m class Solution(object): end3prompt
[36m(TaskRunner pid=155900)[0m third_res:   
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:     def firstUniqChar(self, s): end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:   
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:         """
[36m(TaskRunner pid=155900)[0m         :type s: str
[36m(TaskRunner pid=155900)[0m         :rtype: int
[36m(TaskRunner pid=155900)[0m         """
[36m(TaskRunner pid=155900)[0m         lookup = collections.defaultdict(int) end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:   
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:         candidtates = set() endsix
[36m(TaskRunner pid=155900)[0m six_res:   
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:         for i, c in enumerate(s): end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:   
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m Training Progress:   2%|▏         | 36/2219 [29:26<28:15:31, 46.60s/it]
[36m(TaskRunner pid=155900)[0m step:36 - global_seqlen/min:108938 - global_seqlen/max:124544 - global_seqlen/minmax_diff:15606 - global_seqlen/balanced_min:118853 - global_seqlen/balanced_max:118854 - global_seqlen/mean:118853.5 - actor/entropy:0.10607482492923737 - actor/pg_loss:0.0015831956290639937 - actor/pg_clipfrac:0.04684014543890953 - actor/ppo_kl:0.045048380526714026 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:3.574179768562317 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:37.9296875 - perf/cpu_memory_used_gb:75.41279602050781 - actor/lr:2e-06 - training/global_step:36 - training/epoch:0 - critic/rewards/mean:1.5376673936843872 - critic/rewards/max:2.7970950603485107 - critic/rewards/min:0.0475805290043354 - critic/advantages/mean:-0.004617433995008469 - critic/advantages/max:1.788851022720337 - critic/advantages/min:-1.788852572441101 - critic/format_reward/mean:0.998785674571991 - response_length/mean:1.0036653280258179 - response_length/max:2.6666667461395264 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:28.7548828125 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0009765625 - timing_s/start_profile:5.217967554926872e-06 - timing_s/generate_sequences:32.751380920410156 - timing_s/reshard:0.3327804505825043 - timing_s/gen:33.85482758900616 - timing_s/reward:0.7720785749843344 - timing_s/old_log_prob:1.779920483008027 - timing_s/ref:1.7217688100645319 - timing_s/adv:0.39826392102986574 - timing_s/update_actor:6.766906189965084 - timing_s/step:45.39434974093456 - timing_s/stop_profile:2.900022082030773e-06 - timing_per_token_ms/adv:0.002613901781985623 - timing_per_token_ms/update_actor:0.04441283082519758 - timing_per_token_ms/ref:0.011300382292116917 - timing_per_token_ms/gen:6.588123223715243 - perf/total_num_tokens:950828 - perf/time_per_step:45.39434974093456 - perf/throughput:2618.2443559230746
[36m(TaskRunner pid=155900)[0m global_steps 37
[36m(TaskRunner pid=155900)[0m first_prompt: """Naive Solution"""
[36m(TaskRunner pid=155900)[0m def Longest_Susbtring(arr): end1prompt
[36m(TaskRunner pid=155900)[0m first_res:   
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt:     STR = [] end2prompt
[36m(TaskRunner pid=155900)[0m second_res:   
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:     max_length = 0 end3prompt
[36m(TaskRunner pid=155900)[0m third_res:   
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:     for i in range(len(arr)): end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:   
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:         for j in range(i,len(arr)): end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:   
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:             if arr[j] in STR: endsix
[36m(TaskRunner pid=155900)[0m six_res:   
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:                 if len(STR) > max_length: end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:   
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m Training Progress:   2%|▏         | 37/2219 [30:14<28:33:27, 47.12s/it]
[36m(TaskRunner pid=155900)[0m step:37 - global_seqlen/min:113453 - global_seqlen/max:126812 - global_seqlen/minmax_diff:13359 - global_seqlen/balanced_min:123153 - global_seqlen/balanced_max:123154 - global_seqlen/mean:123153.125 - actor/entropy:0.09507474303245544 - actor/pg_loss:-0.004871527920477093 - actor/pg_clipfrac:0.029257933155167847 - actor/ppo_kl:0.021414327798999145 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:3.782158449292183 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:37.9296875 - perf/cpu_memory_used_gb:75.48202514648438 - actor/lr:2e-06 - training/global_step:37 - training/epoch:0 - critic/rewards/mean:1.5524170398712158 - critic/rewards/max:5.19107723236084 - critic/rewards/min:-1.1533111333847046 - critic/advantages/mean:-0.0001683539740042761 - critic/advantages/max:1.7888445854187012 - critic/advantages/min:-1.788852334022522 - critic/format_reward/mean:0.998887836933136 - response_length/mean:1.003448247909546 - response_length/max:3.6666667461395264 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:28.125 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0029296875 - timing_s/start_profile:5.1800161600112915e-06 - timing_s/generate_sequences:34.235015869140625 - timing_s/reshard:0.3254900574684143 - timing_s/gen:35.29942080297042 - timing_s/reward:0.7954110950231552 - timing_s/old_log_prob:1.8590410150354728 - timing_s/ref:1.9299991620937362 - timing_s/adv:0.4305237390799448 - timing_s/update_actor:7.71820173796732 - timing_s/step:48.13656449399423 - timing_s/stop_profile:3.3159740269184113e-06 - timing_per_token_ms/adv:0.002886754117866114 - timing_per_token_ms/update_actor:0.051752199999966185 - timing_per_token_ms/ref:0.012941058814918619 - timing_per_token_ms/gen:6.870726484963093 - perf/total_num_tokens:985225 - perf/time_per_step:48.13656449399423 - perf/throughput:2558.4111848149287
[36m(TaskRunner pid=155900)[0m global_steps 38
[36m(TaskRunner pid=155900)[0m first_prompt: 
[36m(TaskRunner pid=155900)[0m Write a function that takes two strings and returns their longest common subsequence. A subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.
[36m(TaskRunner pid=155900)[0m 
[36m(TaskRunner pid=155900)[0m ```python
[36m(TaskRunner pid=155900)[0m def LCS(string1,string2): end1prompt
[36m(TaskRunner pid=155900)[0m first_res:   
[36m(TaskRunner pid=155900)[0m  endfirst
[36m(TaskRunner pid=155900)[0m second_prompt:     len1 = len(string1) end2prompt
[36m(TaskRunner pid=155900)[0m second_res:   
[36m(TaskRunner pid=155900)[0m  endsecond
[36m(TaskRunner pid=155900)[0m third_prompt:     len2 = len(string2) end3prompt
[36m(TaskRunner pid=155900)[0m third_res:   
[36m(TaskRunner pid=155900)[0m  endthird
[36m(TaskRunner pid=155900)[0m fourth_prompt:     res = [[0 for i in range(len1+1)] for j in range(len2+1)] end4prompt
[36m(TaskRunner pid=155900)[0m fourth_res:   
[36m(TaskRunner pid=155900)[0m  endfourth
[36m(TaskRunner pid=155900)[0m fifth_prompt:     for i in range(1, len2+1): end5prompt
[36m(TaskRunner pid=155900)[0m fifth_res:   
[36m(TaskRunner pid=155900)[0m  endfifth
[36m(TaskRunner pid=155900)[0m six_prompt:         for j in range(1, len1+1): endsix
[36m(TaskRunner pid=155900)[0m six_res:   
[36m(TaskRunner pid=155900)[0m  endsix
[36m(TaskRunner pid=155900)[0m seven_prompt:             if string2[i-1] == string1[j-1]: end7prompt
[36m(TaskRunner pid=155900)[0m seven_res:   
[36m(TaskRunner pid=155900)[0m  endseven
[36m(TaskRunner pid=155900)[0m Training Progress:   2%|▏         | 38/2219 [30:58<27:59:41, 46.21s/it]
[36m(TaskRunner pid=155900)[0m step:38 - global_seqlen/min:108827 - global_seqlen/max:124409 - global_seqlen/minmax_diff:15582 - global_seqlen/balanced_min:117834 - global_seqlen/balanced_max:117835 - global_seqlen/mean:117834.125 - actor/entropy:0.08290085196495056 - actor/pg_loss:0.005377187894191593 - actor/pg_clipfrac:0.034813644841779026 - actor/ppo_kl:0.03100205380906118 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:3.409502327442169 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:37.9296875 - perf/cpu_memory_used_gb:75.61576843261719 - actor/lr:2e-06 - training/global_step:38 - training/epoch:0 - critic/rewards/mean:1.532059907913208 - critic/rewards/max:6.001598358154297 - critic/rewards/min:0.09407823532819748 - critic/advantages/mean:-0.0003959675377700478 - critic/advantages/max:1.7888468503952026 - critic/advantages/min:-1.7888519763946533 - critic/format_reward/mean:0.9993026852607727 - response_length/mean:1.0022141933441162 - response_length/max:2.0625 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:28.1083984375 - prompt_length/max:127.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0 - timing_s/start_profile:5.3229741752147675e-06 - timing_s/generate_sequences:31.101150512695312 - timing_s/reshard:0.3539852499961853 - timing_s/gen:32.267569832038134 - timing_s/reward:0.7424524610396475 - timing_s/old_log_prob:1.7014029319398105 - timing_s/ref:1.7785124590154737 - timing_s/adv:0.4101334949955344 - timing_s/update_actor:6.94654536107555 - timing_s/step:43.9458313039504 - timing_s/stop_profile:2.9739458113908768e-06 - timing_per_token_ms/adv:0.002751718046126891 - timing_per_token_ms/update_actor:0.04660661580083519 - timing_per_token_ms/ref:0.011932614352279807 - timing_per_token_ms/gen:6.288335841602684 - perf/total_num_tokens:942673 - perf/time_per_step:43.9458313039504 - perf/throughput:2681.3493226468468
[36m(TaskRunner pid=155900)[0m global_steps 39
[36m(TaskRunner pid=155900)[0m error!! index 4 is out of bounds for dimension 0 with size 4
[36m(TaskRunner pid=155900)[0m Training Progress:   2%|▏         | 39/2219 [31:45<28:08:40, 46.48s/it]
[36m(TaskRunner pid=155900)[0m step:39 - global_seqlen/min:108252 - global_seqlen/max:126572 - global_seqlen/minmax_diff:18320 - global_seqlen/balanced_min:114417 - global_seqlen/balanced_max:114418 - global_seqlen/mean:114417.25 - actor/entropy:0.07394642382860184 - actor/pg_loss:0.0021444740355946123 - actor/pg_clipfrac:0.024472574051469565 - actor/ppo_kl:0.02001672035881452 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:2.5034525096416473 - perf/mfu/actor:0.0 - perf/max_memory_allocated_gb:13.336477279663086 - perf/max_memory_reserved_gb:37.9296875 - perf/cpu_memory_used_gb:75.54519271850586 - actor/lr:2e-06 - training/global_step:39 - training/epoch:0 - critic/rewards/mean:1.4997105598449707 - critic/rewards/max:2.587540626525879 - critic/rewards/min:-0.4288460314273834 - critic/advantages/mean:-0.0003606456739362329 - critic/advantages/max:1.7888388633728027 - critic/advantages/min:-1.7888529300689697 - critic/format_reward/mean:0.9994131922721863 - response_length/mean:1.0012764930725098 - response_length/max:2.142857074737549 - response_length/min:1.0 - response_length/clip_ratio:0.0 - prompt_length/mean:27.0859375 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.001953125 - timing_s/start_profile:6.33997842669487e-06 - timing_s/generate_sequences:32.97908401489258 - timing_s/reshard:0.4255475103855133 - timing_s/gen:34.20344115002081 - timing_s/reward:0.758443915983662 - timing_s/old_log_prob:1.9208116449881345 - timing_s/ref:1.875203098054044 - timing_s/adv:0.4462358159944415 - timing_s/update_actor:7.597039150074124 - timing_s/step:46.92655425192788 - timing_s/stop_profile:2.974993549287319e-06 - timing_per_token_ms/adv:0.0031030287600938475 - timing_per_token_ms/update_actor:0.05282819112514396 - timing_per_token_ms/ref:0.013039762689849313 - timing_per_token_ms/gen:6.671843038194312 - perf/total_num_tokens:915338 - perf/time_per_step:46.92655425192788 - perf/throughput:2438.219720666991
[36m(TaskRunner pid=155900)[0m global_steps 40
*** SIGTERM received at time=1756017564 on cpu 47 ***
PC: @     0x7bdb7000d117  (unknown)  (unknown)
    @     0x7bdb6ffbe520  (unknown)  (unknown)
    @ ... and at least 1 more frames
[2025-08-24 06:39:24,929 E 142889 142889] logging.cc:501: *** SIGTERM received at time=1756017564 on cpu 47 ***
[2025-08-24 06:39:24,929 E 142889 142889] logging.cc:501: PC: @     0x7bdb7000d117  (unknown)  (unknown)
[2025-08-24 06:39:24,929 E 142889 142889] logging.cc:501:     @     0x7bdb6ffbe520  (unknown)  (unknown)
[2025-08-24 06:39:24,929 E 142889 142889] logging.cc:501:     @ ... and at least 1 more frames
