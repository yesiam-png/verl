+ export HYDRA_FULL_ERROR=1
+ HYDRA_FULL_ERROR=1
+ ulimit -n 65535
++ pwd
+ PROJECT_DIR=/mnt/task_runtime/verl
+ CONFIG_PATH=/mnt/task_runtime/verl/examples/sglang_multiturn/config
+ python3 -m verl.trainer.main_ppo --config-path=/mnt/task_runtime/verl/examples/sglang_multiturn/config --config-name=gsm8k_multiturn_grpo algorithm.adv_estimator=grpo data.train_batch_size=1024 data.max_prompt_length=128 data.filter_overlong_prompts=True data.truncation=error data.return_raw_chat=True data.filter_overlong_prompts_workers=40 actor_rollout_ref.model.path=/root/.cache/huggingface/hub/models--Qwen--Qwen2.5-1.5B/snapshots/8faed761d45a263340a0528343f099c05c9a4323 +actor_rollout_ref.actor.ntp_coeff=1.0 actor_rollout_ref.actor.optim.lr=2e-6 actor_rollout_ref.model.use_remove_padding=True actor_rollout_ref.actor.ppo_mini_batch_size=256 +actor_rollout_ref.actor.ntp_mini_batch_size=512 actor_rollout_ref.actor.ppo_micro_batch_size_per_gpu=32 +actor_rollout_ref.actor.ntp_micro_batch_size_per_gpu=64 actor_rollout_ref.actor.use_kl_loss=False actor_rollout_ref.actor.kl_loss_coef=0.0 actor_rollout_ref.actor.entropy_coeff=0.0 actor_rollout_ref.model.enable_gradient_checkpointing=True actor_rollout_ref.actor.fsdp_config.param_offload=False actor_rollout_ref.actor.fsdp_config.optimizer_offload=False actor_rollout_ref.rollout.log_prob_micro_batch_size_per_gpu=80 actor_rollout_ref.ref.log_prob_micro_batch_size_per_gpu=80 +actor_rollout_ref.ref.logr=True actor_rollout_ref.rollout.tensor_model_parallel_size=1 actor_rollout_ref.rollout.name=sglang actor_rollout_ref.rollout.gpu_memory_utilization=0.8 actor_rollout_ref.rollout.n=3 actor_rollout_ref.rollout.temperature=1.0 +actor_rollout_ref.rollout.per_turn_response_length=16 +actor_rollout_ref.rollout.max_code_lines=32 actor_rollout_ref.rollout.response_length=1024 algorithm.use_kl_in_reward=False trainer.critic_warmup=0 'trainer.logger=["console","wandb"]' trainer.project_name=em-aug24 trainer.experiment_name=80-400-qwen-nowarmup-005penalty-log-nolenpenalty trainer.n_gpus_per_node=8 trainer.nnodes=1 trainer.val_before_train=False trainer.save_freq=200 trainer.test_freq=-1 trainer.total_epochs=1 +trainer.q_steps=80 +trainer.ref_update_freq=400 data.train_files=/mnt/task_runtime/opencoder_post.parquet data.val_files=/root/data/real_code/test.parquet actor_rollout_ref.rollout.multi_turn.interaction_config_path=/mnt/task_runtime/verl/examples/sglang_multiturn/config/interaction_config/gsm8k_interaction_config.yaml actor_rollout_ref.rollout.multi_turn.max_user_turns=1
2025-08-26 02:03:21,570	INFO worker.py:1918 -- Started a local Ray instance. View the dashboard at [1m[32m127.0.0.1:8265 [39m[22m
[36m(TaskRunner pid=1092302)[0m TaskRunner hostname: bolt-8xfg93i4zr-6csgcu35ry, PID: 1092302
[36m(TaskRunner pid=1092302)[0m {'actor_rollout_ref': {'actor': {'checkpoint': {'load_contents': ['hf_model',
[36m(TaskRunner pid=1092302)[0m                                                                   'model',
[36m(TaskRunner pid=1092302)[0m                                                                   'optimizer',
[36m(TaskRunner pid=1092302)[0m                                                                   'extra'],
[36m(TaskRunner pid=1092302)[0m                                                 'save_contents': ['hf_model',
[36m(TaskRunner pid=1092302)[0m                                                                   'model',
[36m(TaskRunner pid=1092302)[0m                                                                   'optimizer',
[36m(TaskRunner pid=1092302)[0m                                                                   'extra']},
[36m(TaskRunner pid=1092302)[0m                                  'clip_ratio': 0.2,
[36m(TaskRunner pid=1092302)[0m                                  'clip_ratio_c': 3.0,
[36m(TaskRunner pid=1092302)[0m                                  'clip_ratio_high': 0.2,
[36m(TaskRunner pid=1092302)[0m                                  'clip_ratio_low': 0.2,
[36m(TaskRunner pid=1092302)[0m                                  'entropy_checkpointing': False,
[36m(TaskRunner pid=1092302)[0m                                  'entropy_coeff': 0.0,
[36m(TaskRunner pid=1092302)[0m                                  'entropy_from_logits_with_chunking': False,
[36m(TaskRunner pid=1092302)[0m                                  'fsdp_config': {'forward_prefetch': False,
[36m(TaskRunner pid=1092302)[0m                                                  'fsdp_size': -1,
[36m(TaskRunner pid=1092302)[0m                                                  'offload_policy': False,
[36m(TaskRunner pid=1092302)[0m                                                  'optimizer_offload': False,
[36m(TaskRunner pid=1092302)[0m                                                  'param_offload': False,
[36m(TaskRunner pid=1092302)[0m                                                  'reshard_after_forward': True,
[36m(TaskRunner pid=1092302)[0m                                                  'wrap_policy': {'min_num_params': 0}},
[36m(TaskRunner pid=1092302)[0m                                  'grad_clip': 1.0,
[36m(TaskRunner pid=1092302)[0m                                  'kl_loss_coef': 0.0,
[36m(TaskRunner pid=1092302)[0m                                  'kl_loss_type': 'low_var_kl',
[36m(TaskRunner pid=1092302)[0m                                  'loss_agg_mode': 'token-mean',
[36m(TaskRunner pid=1092302)[0m                                  'ntp_coeff': 1.0,
[36m(TaskRunner pid=1092302)[0m                                  'ntp_micro_batch_size_per_gpu': 64,
[36m(TaskRunner pid=1092302)[0m                                  'ntp_mini_batch_size': 512,
[36m(TaskRunner pid=1092302)[0m                                  'optim': {'lr': 2e-06,
[36m(TaskRunner pid=1092302)[0m                                            'lr_warmup_steps': -1,
[36m(TaskRunner pid=1092302)[0m                                            'lr_warmup_steps_ratio': 0.0,
[36m(TaskRunner pid=1092302)[0m                                            'min_lr_ratio': 0.0,
[36m(TaskRunner pid=1092302)[0m                                            'num_cycles': 0.5,
[36m(TaskRunner pid=1092302)[0m                                            'total_training_steps': -1,
[36m(TaskRunner pid=1092302)[0m                                            'warmup_style': 'constant',
[36m(TaskRunner pid=1092302)[0m                                            'weight_decay': 0.01},
[36m(TaskRunner pid=1092302)[0m                                  'policy_loss': {'clip_cov_lb': 1.0,
[36m(TaskRunner pid=1092302)[0m                                                  'clip_cov_ratio': 0.0002,
[36m(TaskRunner pid=1092302)[0m                                                  'clip_cov_ub': 5.0,
[36m(TaskRunner pid=1092302)[0m                                                  'kl_cov_ratio': 0.0002,
[36m(TaskRunner pid=1092302)[0m                                                  'loss_mode': 'vanilla',
[36m(TaskRunner pid=1092302)[0m                                                  'ppo_kl_coef': 0.1},
[36m(TaskRunner pid=1092302)[0m                                  'ppo_epochs': 1,
[36m(TaskRunner pid=1092302)[0m                                  'ppo_max_token_len_per_gpu': 16384,
[36m(TaskRunner pid=1092302)[0m                                  'ppo_micro_batch_size': None,
[36m(TaskRunner pid=1092302)[0m                                  'ppo_micro_batch_size_per_gpu': 32,
[36m(TaskRunner pid=1092302)[0m                                  'ppo_mini_batch_size': 256,
[36m(TaskRunner pid=1092302)[0m                                  'shuffle': False,
[36m(TaskRunner pid=1092302)[0m                                  'strategy': 'fsdp',
[36m(TaskRunner pid=1092302)[0m                                  'ulysses_sequence_parallel_size': 1,
[36m(TaskRunner pid=1092302)[0m                                  'use_dynamic_bsz': False,
[36m(TaskRunner pid=1092302)[0m                                  'use_kl_loss': False,
[36m(TaskRunner pid=1092302)[0m                                  'use_torch_compile': True},
[36m(TaskRunner pid=1092302)[0m                        'hybrid_engine': True,
[36m(TaskRunner pid=1092302)[0m                        'model': {'custom_chat_template': None,
[36m(TaskRunner pid=1092302)[0m                                  'enable_activation_offload': False,
[36m(TaskRunner pid=1092302)[0m                                  'enable_gradient_checkpointing': True,
[36m(TaskRunner pid=1092302)[0m                                  'exclude_modules': None,
[36m(TaskRunner pid=1092302)[0m                                  'external_lib': None,
[36m(TaskRunner pid=1092302)[0m                                  'fused_kernel_options': {'impl_backend': 'torch'},
[36m(TaskRunner pid=1092302)[0m                                  'lora_alpha': 16,
[36m(TaskRunner pid=1092302)[0m                                  'lora_rank': 0,
[36m(TaskRunner pid=1092302)[0m                                  'override_config': {},
[36m(TaskRunner pid=1092302)[0m                                  'path': '/root/.cache/huggingface/hub/models--Qwen--Qwen2.5-1.5B/snapshots/8faed761d45a263340a0528343f099c05c9a4323',
[36m(TaskRunner pid=1092302)[0m                                  'target_modules': 'all-linear',
[36m(TaskRunner pid=1092302)[0m                                  'trust_remote_code': False,
[36m(TaskRunner pid=1092302)[0m                                  'use_fused_kernels': False,
[36m(TaskRunner pid=1092302)[0m                                  'use_liger': False,
[36m(TaskRunner pid=1092302)[0m                                  'use_remove_padding': True,
[36m(TaskRunner pid=1092302)[0m                                  'use_shm': False},
[36m(TaskRunner pid=1092302)[0m                        'profiler': {'_target_': 'verl.utils.profiler.ProfilerConfig',
[36m(TaskRunner pid=1092302)[0m                                     'all_ranks': False,
[36m(TaskRunner pid=1092302)[0m                                     'discrete': False,
[36m(TaskRunner pid=1092302)[0m                                     'ranks': []},
[36m(TaskRunner pid=1092302)[0m                        'ref': {'entropy_checkpointing': False,
[36m(TaskRunner pid=1092302)[0m                                'entropy_from_logits_with_chunking': False,
[36m(TaskRunner pid=1092302)[0m                                'fsdp_config': {'forward_prefetch': False,
[36m(TaskRunner pid=1092302)[0m                                                'param_offload': False,
[36m(TaskRunner pid=1092302)[0m                                                'reshard_after_forward': True,
[36m(TaskRunner pid=1092302)[0m                                                'wrap_policy': {'min_num_params': 0}},
[36m(TaskRunner pid=1092302)[0m                                'log_prob_max_token_len_per_gpu': 16384,
[36m(TaskRunner pid=1092302)[0m                                'log_prob_micro_batch_size': None,
[36m(TaskRunner pid=1092302)[0m                                'log_prob_micro_batch_size_per_gpu': 80,
[36m(TaskRunner pid=1092302)[0m                                'log_prob_use_dynamic_bsz': False,
[36m(TaskRunner pid=1092302)[0m                                'logr': True,
[36m(TaskRunner pid=1092302)[0m                                'strategy': 'fsdp',
[36m(TaskRunner pid=1092302)[0m                                'ulysses_sequence_parallel_size': 1,
[36m(TaskRunner pid=1092302)[0m                                'use_torch_compile': True},
[36m(TaskRunner pid=1092302)[0m                        'rollout': {'agent': {'agent_loop_config_path': None,
[36m(TaskRunner pid=1092302)[0m                                              'custom_async_server': {'name': None,
[36m(TaskRunner pid=1092302)[0m                                                                      'path': None},
[36m(TaskRunner pid=1092302)[0m                                              'num_workers': 8},
[36m(TaskRunner pid=1092302)[0m                                    'calculate_log_probs': False,
[36m(TaskRunner pid=1092302)[0m                                    'disable_log_stats': True,
[36m(TaskRunner pid=1092302)[0m                                    'do_sample': True,
[36m(TaskRunner pid=1092302)[0m                                    'dtype': 'bfloat16',
[36m(TaskRunner pid=1092302)[0m                                    'enable_chunked_prefill': True,
[36m(TaskRunner pid=1092302)[0m                                    'enforce_eager': True,
[36m(TaskRunner pid=1092302)[0m                                    'engine_kwargs': {'sglang': {'attention_backend': None},
[36m(TaskRunner pid=1092302)[0m                                                      'vllm': {'disable_mm_preprocessor_cache': False,
[36m(TaskRunner pid=1092302)[0m                                                               'swap_space': None}},
[36m(TaskRunner pid=1092302)[0m                                    'free_cache_engine': True,
[36m(TaskRunner pid=1092302)[0m                                    'gpu_memory_utilization': 0.8,
[36m(TaskRunner pid=1092302)[0m                                    'ignore_eos': False,
[36m(TaskRunner pid=1092302)[0m                                    'layered_summon': False,
[36m(TaskRunner pid=1092302)[0m                                    'load_format': 'dummy_dtensor',
[36m(TaskRunner pid=1092302)[0m                                    'log_prob_max_token_len_per_gpu': 16384,
[36m(TaskRunner pid=1092302)[0m                                    'log_prob_micro_batch_size': None,
[36m(TaskRunner pid=1092302)[0m                                    'log_prob_micro_batch_size_per_gpu': 80,
[36m(TaskRunner pid=1092302)[0m                                    'log_prob_use_dynamic_bsz': False,
[36m(TaskRunner pid=1092302)[0m                                    'max_code_lines': 32,
[36m(TaskRunner pid=1092302)[0m                                    'max_model_len': None,
[36m(TaskRunner pid=1092302)[0m                                    'max_num_batched_tokens': 8192,
[36m(TaskRunner pid=1092302)[0m                                    'max_num_seqs': 1024,
[36m(TaskRunner pid=1092302)[0m                                    'mode': 'sync',
[36m(TaskRunner pid=1092302)[0m                                    'multi_stage_wake_up': False,
[36m(TaskRunner pid=1092302)[0m                                    'multi_turn': {'completion_callback': None,
[36m(TaskRunner pid=1092302)[0m                                                   'enable': True,
[36m(TaskRunner pid=1092302)[0m                                                   'format': 'hermes',
[36m(TaskRunner pid=1092302)[0m                                                   'interaction_config_path': '/mnt/task_runtime/verl/examples/sglang_multiturn/config/interaction_config/gsm8k_interaction_config.yaml',
[36m(TaskRunner pid=1092302)[0m                                                   'max_assistant_turns': 100000,
[36m(TaskRunner pid=1092302)[0m                                                   'max_parallel_calls': 1,
[36m(TaskRunner pid=1092302)[0m                                                   'max_tool_response_length': 256,
[36m(TaskRunner pid=1092302)[0m                                                   'max_user_turns': 1,
[36m(TaskRunner pid=1092302)[0m                                                   'tokenization_sanity_check_mode': 'strict',
[36m(TaskRunner pid=1092302)[0m                                                   'tool_config_path': None,
[36m(TaskRunner pid=1092302)[0m                                                   'tool_response_truncate_side': 'middle',
[36m(TaskRunner pid=1092302)[0m                                                   'use_inference_chat_template': False},
[36m(TaskRunner pid=1092302)[0m                                    'n': 3,
[36m(TaskRunner pid=1092302)[0m                                    'name': 'sglang',
[36m(TaskRunner pid=1092302)[0m                                    'per_turn_response_length': 16,
[36m(TaskRunner pid=1092302)[0m                                    'prompt_length': 128,
[36m(TaskRunner pid=1092302)[0m                                    'response_length': 1024,
[36m(TaskRunner pid=1092302)[0m                                    'temperature': 1.0,
[36m(TaskRunner pid=1092302)[0m                                    'tensor_model_parallel_size': 1,
[36m(TaskRunner pid=1092302)[0m                                    'top_k': -1,
[36m(TaskRunner pid=1092302)[0m                                    'top_p': 1,
[36m(TaskRunner pid=1092302)[0m                                    'trace': {'backend': None,
[36m(TaskRunner pid=1092302)[0m                                              'token2text': False},
[36m(TaskRunner pid=1092302)[0m                                    'update_weights_bucket_megabytes': 512,
[36m(TaskRunner pid=1092302)[0m                                    'val_kwargs': {'do_sample': False,
[36m(TaskRunner pid=1092302)[0m                                                   'n': 1,
[36m(TaskRunner pid=1092302)[0m                                                   'temperature': 0,
[36m(TaskRunner pid=1092302)[0m                                                   'top_k': -1,
[36m(TaskRunner pid=1092302)[0m                                                   'top_p': 1.0}}},
[36m(TaskRunner pid=1092302)[0m  'algorithm': {'_target_': 'verl.trainer.config.AlgoConfig',
[36m(TaskRunner pid=1092302)[0m                'adv_estimator': 'grpo',
[36m(TaskRunner pid=1092302)[0m                'gamma': 1.0,
[36m(TaskRunner pid=1092302)[0m                'kl_ctrl': {'_target_': 'verl.trainer.config.KLControlConfig',
[36m(TaskRunner pid=1092302)[0m                            'horizon': 10000,
[36m(TaskRunner pid=1092302)[0m                            'kl_coef': 0.001,
[36m(TaskRunner pid=1092302)[0m                            'target_kl': 0.1,
[36m(TaskRunner pid=1092302)[0m                            'type': 'fixed'},
[36m(TaskRunner pid=1092302)[0m                'kl_penalty': 'kl',
[36m(TaskRunner pid=1092302)[0m                'lam': 1.0,
[36m(TaskRunner pid=1092302)[0m                'norm_adv_by_std_in_grpo': True,
[36m(TaskRunner pid=1092302)[0m                'pf_ppo': {'_target_': 'verl.trainer.config.PFPPOConfig',
[36m(TaskRunner pid=1092302)[0m                           'reweight_method': 'pow',
[36m(TaskRunner pid=1092302)[0m                           'weight_pow': 2.0},
[36m(TaskRunner pid=1092302)[0m                'use_kl_in_reward': False,
[36m(TaskRunner pid=1092302)[0m                'use_pf_ppo': False},
[36m(TaskRunner pid=1092302)[0m  'critic': {'_target_': 'verl.trainer.config.FSDPCriticConfig',
[36m(TaskRunner pid=1092302)[0m             'checkpoint': {'load_contents': ['model', 'optimizer', 'extra'],
[36m(TaskRunner pid=1092302)[0m                            'save_contents': ['model', 'optimizer', 'extra']},
[36m(TaskRunner pid=1092302)[0m             'cliprange_value': 0.5,
[36m(TaskRunner pid=1092302)[0m             'forward_max_token_len_per_gpu': 32768,
[36m(TaskRunner pid=1092302)[0m             'forward_micro_batch_size': None,
[36m(TaskRunner pid=1092302)[0m             'forward_micro_batch_size_per_gpu': None,
[36m(TaskRunner pid=1092302)[0m             'grad_clip': 1.0,
[36m(TaskRunner pid=1092302)[0m             'loss_agg_mode': 'token-mean',
[36m(TaskRunner pid=1092302)[0m             'model': {'enable_activation_offload': False,
[36m(TaskRunner pid=1092302)[0m                       'enable_gradient_checkpointing': True,
[36m(TaskRunner pid=1092302)[0m                       'external_lib': None,
[36m(TaskRunner pid=1092302)[0m                       'fsdp_config': {'forward_prefetch': False,
[36m(TaskRunner pid=1092302)[0m                                       'fsdp_size': -1,
[36m(TaskRunner pid=1092302)[0m                                       'offload_policy': False,
[36m(TaskRunner pid=1092302)[0m                                       'optimizer_offload': False,
[36m(TaskRunner pid=1092302)[0m                                       'param_offload': False,
[36m(TaskRunner pid=1092302)[0m                                       'reshard_after_forward': True,
[36m(TaskRunner pid=1092302)[0m                                       'wrap_policy': {'min_num_params': 0}},
[36m(TaskRunner pid=1092302)[0m                       'lora_alpha': 16,
[36m(TaskRunner pid=1092302)[0m                       'lora_rank': 0,
[36m(TaskRunner pid=1092302)[0m                       'override_config': {},
[36m(TaskRunner pid=1092302)[0m                       'path': '~/models/deepseek-llm-7b-chat',
[36m(TaskRunner pid=1092302)[0m                       'target_modules': 'all-linear',
[36m(TaskRunner pid=1092302)[0m                       'tokenizer_path': '/root/.cache/huggingface/hub/models--Qwen--Qwen2.5-1.5B/snapshots/8faed761d45a263340a0528343f099c05c9a4323',
[36m(TaskRunner pid=1092302)[0m                       'trust_remote_code': False,
[36m(TaskRunner pid=1092302)[0m                       'use_remove_padding': False,
[36m(TaskRunner pid=1092302)[0m                       'use_shm': False},
[36m(TaskRunner pid=1092302)[0m             'optim': {'lr': 1e-05,
[36m(TaskRunner pid=1092302)[0m                       'lr_warmup_steps_ratio': 0.0,
[36m(TaskRunner pid=1092302)[0m                       'min_lr_ratio': None,
[36m(TaskRunner pid=1092302)[0m                       'total_training_steps': -1,
[36m(TaskRunner pid=1092302)[0m                       'warmup_style': 'constant',
[36m(TaskRunner pid=1092302)[0m                       'weight_decay': 0.01},
[36m(TaskRunner pid=1092302)[0m             'ppo_epochs': 1,
[36m(TaskRunner pid=1092302)[0m             'ppo_max_token_len_per_gpu': 32768,
[36m(TaskRunner pid=1092302)[0m             'ppo_micro_batch_size': None,
[36m(TaskRunner pid=1092302)[0m             'ppo_micro_batch_size_per_gpu': None,
[36m(TaskRunner pid=1092302)[0m             'ppo_mini_batch_size': 256,
[36m(TaskRunner pid=1092302)[0m             'profiler': {'_target_': 'verl.utils.profiler.ProfilerConfig',
[36m(TaskRunner pid=1092302)[0m                          'all_ranks': False,
[36m(TaskRunner pid=1092302)[0m                          'discrete': False,
[36m(TaskRunner pid=1092302)[0m                          'ranks': []},
[36m(TaskRunner pid=1092302)[0m             'rollout_n': 3,
[36m(TaskRunner pid=1092302)[0m             'shuffle': False,
[36m(TaskRunner pid=1092302)[0m             'strategy': 'fsdp',
[36m(TaskRunner pid=1092302)[0m             'ulysses_sequence_parallel_size': 1,
[36m(TaskRunner pid=1092302)[0m             'use_dynamic_bsz': False},
[36m(TaskRunner pid=1092302)[0m  'custom_reward_function': {'name': 'compute_score', 'path': None},
[36m(TaskRunner pid=1092302)[0m  'data': {'custom_cls': {'name': None, 'path': None},
[36m(TaskRunner pid=1092302)[0m           'datagen': {'name': None, 'path': None},
[36m(TaskRunner pid=1092302)[0m           'dataloader_num_workers': 8,
[36m(TaskRunner pid=1092302)[0m           'filter_overlong_prompts': True,
[36m(TaskRunner pid=1092302)[0m           'filter_overlong_prompts_workers': 40,
[36m(TaskRunner pid=1092302)[0m           'image_key': 'images',
[36m(TaskRunner pid=1092302)[0m           'max_prompt_length': 128,
[36m(TaskRunner pid=1092302)[0m           'max_response_length': 1024,
[36m(TaskRunner pid=1092302)[0m           'prompt_key': 'prompt',
[36m(TaskRunner pid=1092302)[0m           'return_full_prompt': False,
[36m(TaskRunner pid=1092302)[0m           'return_multi_modal_inputs': True,
[36m(TaskRunner pid=1092302)[0m           'return_raw_chat': True,
[36m(TaskRunner pid=1092302)[0m           'return_raw_input_ids': False,
[36m(TaskRunner pid=1092302)[0m           'reward_fn_key': 'data_source',
[36m(TaskRunner pid=1092302)[0m           'sampler': {'class_name': None, 'class_path': None},
[36m(TaskRunner pid=1092302)[0m           'shuffle': True,
[36m(TaskRunner pid=1092302)[0m           'tokenizer': None,
[36m(TaskRunner pid=1092302)[0m           'train_batch_size': 1024,
[36m(TaskRunner pid=1092302)[0m           'train_files': '/mnt/task_runtime/opencoder_post.parquet',
[36m(TaskRunner pid=1092302)[0m           'truncation': 'error',
[36m(TaskRunner pid=1092302)[0m           'trust_remote_code': False,
[36m(TaskRunner pid=1092302)[0m           'use_shm': False,
[36m(TaskRunner pid=1092302)[0m           'val_batch_size': None,
[36m(TaskRunner pid=1092302)[0m           'val_files': '/root/data/real_code/test.parquet',
[36m(TaskRunner pid=1092302)[0m           'validation_shuffle': False,
[36m(TaskRunner pid=1092302)[0m           'video_key': 'videos'},
[36m(TaskRunner pid=1092302)[0m  'ray_init': {'num_cpus': None, 'timeline_json_file': None},
[36m(TaskRunner pid=1092302)[0m  'reward_model': {'enable': False,
[36m(TaskRunner pid=1092302)[0m                   'forward_max_token_len_per_gpu': 32768,
[36m(TaskRunner pid=1092302)[0m                   'launch_reward_fn_async': False,
[36m(TaskRunner pid=1092302)[0m                   'max_length': None,
[36m(TaskRunner pid=1092302)[0m                   'micro_batch_size': None,
[36m(TaskRunner pid=1092302)[0m                   'micro_batch_size_per_gpu': None,
[36m(TaskRunner pid=1092302)[0m                   'model': {'external_lib': None,
[36m(TaskRunner pid=1092302)[0m                             'fsdp_config': {'forward_prefetch': False,
[36m(TaskRunner pid=1092302)[0m                                             'fsdp_size': -1,
[36m(TaskRunner pid=1092302)[0m                                             'param_offload': False,
[36m(TaskRunner pid=1092302)[0m                                             'reshard_after_forward': True,
[36m(TaskRunner pid=1092302)[0m                                             'wrap_policy': {'min_num_params': 0}},
[36m(TaskRunner pid=1092302)[0m                             'input_tokenizer': '/root/.cache/huggingface/hub/models--Qwen--Qwen2.5-1.5B/snapshots/8faed761d45a263340a0528343f099c05c9a4323',
[36m(TaskRunner pid=1092302)[0m                             'path': '~/models/FsfairX-LLaMA3-RM-v0.1',
[36m(TaskRunner pid=1092302)[0m                             'trust_remote_code': False,
[36m(TaskRunner pid=1092302)[0m                             'use_fused_kernels': False,
[36m(TaskRunner pid=1092302)[0m                             'use_remove_padding': False,
[36m(TaskRunner pid=1092302)[0m                             'use_shm': False},
[36m(TaskRunner pid=1092302)[0m                   'profiler': {'_target_': 'verl.utils.profiler.ProfilerConfig',
[36m(TaskRunner pid=1092302)[0m                                'all_ranks': False,
[36m(TaskRunner pid=1092302)[0m                                'discrete': False,
[36m(TaskRunner pid=1092302)[0m                                'ranks': []},
[36m(TaskRunner pid=1092302)[0m                   'reward_manager': 'naive',
[36m(TaskRunner pid=1092302)[0m                   'sandbox_fusion': {'max_concurrent': 64,
[36m(TaskRunner pid=1092302)[0m                                      'memory_limit_mb': 1024,
[36m(TaskRunner pid=1092302)[0m                                      'url': None},
[36m(TaskRunner pid=1092302)[0m                   'strategy': 'fsdp',
[36m(TaskRunner pid=1092302)[0m                   'ulysses_sequence_parallel_size': 1,
[36m(TaskRunner pid=1092302)[0m                   'use_dynamic_bsz': False},
[36m(TaskRunner pid=1092302)[0m  'trainer': {'balance_batch': True,
[36m(TaskRunner pid=1092302)[0m              'controller_nsight_options': {'cuda-graph-trace': 'graph',
[36m(TaskRunner pid=1092302)[0m                                            'cuda-memory-usage': 'true',
[36m(TaskRunner pid=1092302)[0m                                            'trace': 'cuda,nvtx,cublas,ucx'},
[36m(TaskRunner pid=1092302)[0m              'critic_warmup': 0,
[36m(TaskRunner pid=1092302)[0m              'default_hdfs_dir': None,
[36m(TaskRunner pid=1092302)[0m              'default_local_dir': '/mnt/task_wrapper/user_output/artifacts/checkpoints/em-aug24/80-400-qwen-nowarmup-005penalty-log-nolenpenalty',
[36m(TaskRunner pid=1092302)[0m              'del_local_ckpt_after_load': False,
[36m(TaskRunner pid=1092302)[0m              'device': 'cuda',
[36m(TaskRunner pid=1092302)[0m              'esi_redundant_time': 0,
[36m(TaskRunner pid=1092302)[0m              'experiment_name': '80-400-qwen-nowarmup-005penalty-log-nolenpenalty',
[36m(TaskRunner pid=1092302)[0m              'log_val_generations': 0,
[36m(TaskRunner pid=1092302)[0m              'logger': ['console', 'wandb'],
[36m(TaskRunner pid=1092302)[0m              'max_actor_ckpt_to_keep': None,
[36m(TaskRunner pid=1092302)[0m              'max_critic_ckpt_to_keep': None,
[36m(TaskRunner pid=1092302)[0m              'n_gpus_per_node': 8,
[36m(TaskRunner pid=1092302)[0m              'nnodes': 1,
[36m(TaskRunner pid=1092302)[0m              'npu_profile': {'options': {'analysis': True,
[36m(TaskRunner pid=1092302)[0m                                          'level': 'level1',
[36m(TaskRunner pid=1092302)[0m                                          'record_shapes': False,
[36m(TaskRunner pid=1092302)[0m                                          'save_path': './profiler_data',
[36m(TaskRunner pid=1092302)[0m                                          'with_cpu': True,
[36m(TaskRunner pid=1092302)[0m                                          'with_memory': False,
[36m(TaskRunner pid=1092302)[0m                                          'with_module': False,
[36m(TaskRunner pid=1092302)[0m                                          'with_npu': True,
[36m(TaskRunner pid=1092302)[0m                                          'with_stack': False}},
[36m(TaskRunner pid=1092302)[0m              'profile_steps': None,
[36m(TaskRunner pid=1092302)[0m              'project_name': 'em-aug24',
[36m(TaskRunner pid=1092302)[0m              'q_steps': 80,
[36m(TaskRunner pid=1092302)[0m              'ray_wait_register_center_timeout': 300,
[36m(TaskRunner pid=1092302)[0m              'ref_update_freq': 400,
[36m(TaskRunner pid=1092302)[0m              'resume_from_path': None,
[36m(TaskRunner pid=1092302)[0m              'resume_mode': 'auto',
[36m(TaskRunner pid=1092302)[0m              'rollout_data_dir': None,
[36m(TaskRunner pid=1092302)[0m              'save_freq': 200,
[36m(TaskRunner pid=1092302)[0m              'test_freq': -1,
[36m(TaskRunner pid=1092302)[0m              'total_epochs': 1,
[36m(TaskRunner pid=1092302)[0m              'total_training_steps': None,
[36m(TaskRunner pid=1092302)[0m              'use_legacy_worker_impl': 'auto',
[36m(TaskRunner pid=1092302)[0m              'val_before_train': False,
[36m(TaskRunner pid=1092302)[0m              'val_only': False,
[36m(TaskRunner pid=1092302)[0m              'validation_data_dir': None,
[36m(TaskRunner pid=1092302)[0m              'worker_nsight_options': {'capture-range': 'cudaProfilerApi',
[36m(TaskRunner pid=1092302)[0m                                        'capture-range-end': None,
[36m(TaskRunner pid=1092302)[0m                                        'cuda-graph-trace': 'graph',
[36m(TaskRunner pid=1092302)[0m                                        'cuda-memory-usage': 'true',
[36m(TaskRunner pid=1092302)[0m                                        'kill': 'none',
[36m(TaskRunner pid=1092302)[0m                                        'trace': 'cuda,nvtx,cublas,ucx'}}}
[36m(TaskRunner pid=1092302)[0m 2025-08-26 02:03:29.350983: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
[36m(TaskRunner pid=1092302)[0m 2025-08-26 02:03:29.366132: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:485] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
[36m(TaskRunner pid=1092302)[0m 2025-08-26 02:03:29.381146: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:8454] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
[36m(TaskRunner pid=1092302)[0m 2025-08-26 02:03:29.384999: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1452] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
[36m(TaskRunner pid=1092302)[0m 2025-08-26 02:03:29.395467: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[36m(TaskRunner pid=1092302)[0m To enable the following instructions: AVX2 AVX512F AVX512_VNNI AVX512_BF16 AVX512_FP16 AVX_VNNI AMX_TILE AMX_INT8 AMX_BF16 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[36m(TaskRunner pid=1092302)[0m 2025-08-26 02:03:30.251791: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[36m(TaskRunner pid=1092302)[0m Using dataset class: RLHFDataset
[36m(TaskRunner pid=1092302)[0m Setting TOKENIZERS_PARALLELISM=false for forked processes.
[36m(TaskRunner pid=1092302)[0m WARNING:2025-08-26 02:03:34,101:Setting TOKENIZERS_PARALLELISM=false for forked processes.
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   0%|          | 0/1914690 [00:00<?, ? examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   0%|          | 1000/1914690 [00:01<38:36, 826.16 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   0%|          | 2000/1914690 [00:01<18:06, 1759.89 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   0%|          | 3000/1914690 [00:01<11:34, 2751.25 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   0%|          | 6000/1914690 [00:01<04:45, 6692.71 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   1%|          | 11000/1914690 [00:01<02:18, 13718.91 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   1%|          | 14000/1914690 [00:01<01:56, 16323.07 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   1%|          | 18000/1914690 [00:01<01:34, 20124.93 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   1%|▏         | 24000/1914690 [00:02<01:08, 27657.82 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   1%|▏         | 28000/1914690 [00:02<01:04, 29193.84 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   2%|▏         | 34000/1914690 [00:02<00:54, 34610.81 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   2%|▏         | 44000/1914690 [00:02<00:39, 47948.69 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   3%|▎         | 50000/1914690 [00:02<00:38, 48276.84 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   3%|▎         | 58000/1914690 [00:02<00:34, 53293.25 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   4%|▎         | 70000/1914690 [00:02<00:27, 65979.99 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   4%|▍         | 81000/1914690 [00:02<00:25, 72783.62 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   5%|▍         | 89000/1914690 [00:03<00:25, 70488.13 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   5%|▌         | 102000/1914690 [00:03<00:22, 80828.14 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   6%|▌         | 115000/1914690 [00:03<00:20, 88593.47 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   7%|▋         | 131000/1914690 [00:03<00:17, 100593.04 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   7%|▋         | 142000/1914690 [00:03<00:18, 97269.45 examples/s] 
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   8%|▊         | 156000/1914690 [00:03<00:17, 102560.55 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   9%|▉         | 173000/1914690 [00:03<00:15, 112851.45 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  10%|▉         | 190000/1914690 [00:03<00:14, 119252.37 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  11%|█         | 203000/1914690 [00:04<00:14, 115476.81 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  12%|█▏        | 221000/1914690 [00:04<00:13, 125520.04 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  13%|█▎        | 240000/1914690 [00:04<00:12, 133443.71 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  13%|█▎        | 255000/1914690 [00:04<00:12, 129794.97 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  14%|█▍        | 277000/1914690 [00:04<00:11, 144375.63 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  15%|█▌        | 296000/1914690 [00:04<00:10, 147726.39 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  17%|█▋        | 319000/1914690 [00:04<00:10, 157933.28 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  18%|█▊        | 338000/1914690 [00:04<00:10, 156260.67 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  19%|█▉        | 360000/1914690 [00:05<00:09, 162041.06 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  20%|█▉        | 381000/1914690 [00:05<00:09, 165635.66 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  21%|██▏       | 407000/1914690 [00:05<00:09, 155276.91 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  23%|██▎       | 437000/1914690 [00:05<00:08, 176246.44 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  25%|██▍       | 477000/1914690 [00:05<00:06, 225487.45 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  26%|██▌       | 501000/1914690 [00:05<00:06, 215594.81 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  28%|██▊       | 527000/1914690 [00:05<00:06, 219993.46 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  29%|██▊       | 550000/1914690 [00:05<00:06, 213012.45 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  30%|██▉       | 573000/1914690 [00:06<00:06, 215951.07 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  31%|███       | 597000/1914690 [00:06<00:06, 218389.35 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  33%|███▎      | 623000/1914690 [00:06<00:06, 215051.37 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  34%|███▎      | 645000/1914690 [00:06<00:06, 211573.60 examples/s]Filter (num_proc=40):  35%|███▌      | 672000/1914690 [00:06<00:05, 227396.45 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  36%|███▋      | 697000/1914690 [00:06<00:05, 232785.91 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  38%|███▊      | 721000/1914690 [00:06<00:05, 218389.97 examples/s]Filter (num_proc=40):  39%|███▉      | 744000/1914690 [00:06<00:05, 220971.88 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  40%|████      | 768000/1914690 [00:06<00:05, 223589.62 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  41%|████▏     | 791000/1914690 [00:07<00:05, 221313.32 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  43%|████▎     | 814000/1914690 [00:07<00:05, 219248.58 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  44%|████▎     | 837000/1914690 [00:07<00:04, 222138.06 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  45%|████▍     | 860000/1914690 [00:07<00:04, 224185.26 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  46%|████▌     | 884000/1914690 [00:07<00:04, 228389.89 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  47%|████▋     | 907000/1914690 [00:07<00:04, 207226.63 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  49%|████▉     | 935000/1914690 [00:07<00:04, 221004.17 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  50%|█████     | 958000/1914690 [00:07<00:04, 219178.18 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  51%|█████▏    | 982000/1914690 [00:07<00:04, 222725.49 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  52%|█████▏    | 1005000/1914690 [00:07<00:04, 222827.11 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  54%|█████▎    | 1028000/1914690 [00:08<00:03, 223002.68 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  55%|█████▍    | 1052000/1914690 [00:08<00:03, 227546.73 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  56%|█████▌    | 1075000/1914690 [00:08<00:03, 217753.02 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  57%|█████▋    | 1097000/1914690 [00:08<00:03, 215939.72 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  59%|█████▊    | 1121000/1914690 [00:08<00:03, 222617.31 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  60%|█████▉    | 1144000/1914690 [00:08<00:03, 223351.25 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  61%|██████    | 1167000/1914690 [00:08<00:03, 224923.93 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  62%|██████▏   | 1190000/1914690 [00:08<00:03, 219709.90 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  63%|██████▎   | 1213000/1914690 [00:08<00:03, 210834.01 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  65%|██████▍   | 1238000/1914690 [00:09<00:03, 219365.13 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  66%|██████▌   | 1263000/1914690 [00:09<00:02, 227733.00 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  67%|██████▋   | 1286000/1914690 [00:09<00:02, 226733.31 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  68%|██████▊   | 1309000/1914690 [00:09<00:02, 220502.95 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  70%|██████▉   | 1334868/1914690 [00:09<00:02, 230809.54 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  71%|███████   | 1358736/1914690 [00:09<00:02, 213479.10 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  72%|███████▏  | 1381736/1914690 [00:09<00:02, 211642.95 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  73%|███████▎  | 1405604/1914690 [00:09<00:02, 218984.62 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  75%|███████▍  | 1428340/1914690 [00:09<00:02, 220090.32 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  76%|███████▌  | 1451208/1914690 [00:09<00:02, 218312.72 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  77%|███████▋  | 1473208/1914690 [00:10<00:02, 208269.57 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  78%|███████▊  | 1494208/1914690 [00:10<00:02, 206610.65 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  79%|███████▉  | 1515208/1914690 [00:10<00:02, 193382.97 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  80%|████████  | 1536076/1914690 [00:10<00:01, 191309.73 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  81%|████████▏ | 1556811/1914690 [00:10<00:01, 189737.76 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  82%|████████▏ | 1576413/1914690 [00:10<00:01, 182608.24 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  83%|████████▎ | 1595280/1914690 [00:10<00:01, 174401.12 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  84%|████████▍ | 1613280/1914690 [00:10<00:01, 168655.07 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  85%|████████▌ | 1631147/1914690 [00:11<00:01, 165916.92 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  86%|████████▌ | 1648147/1914690 [00:11<00:01, 156083.98 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  87%|████████▋ | 1664147/1914690 [00:11<00:01, 155420.19 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  88%|████████▊ | 1679881/1914690 [00:11<00:01, 149669.74 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  89%|████████▊ | 1695615/1914690 [00:11<00:01, 150328.47 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  89%|████████▉ | 1711615/1914690 [00:11<00:01, 142520.55 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  90%|█████████ | 1726482/1914690 [00:11<00:01, 130604.13 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  91%|█████████ | 1742350/1914690 [00:11<00:01, 137500.15 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  92%|█████████▏| 1757217/1914690 [00:11<00:01, 124542.21 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  92%|█████████▏| 1770084/1914690 [00:12<00:01, 118041.80 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  93%|█████████▎| 1783951/1914690 [00:12<00:01, 120653.66 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  94%|█████████▍| 1796818/1914690 [00:12<00:01, 114962.36 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  94%|█████████▍| 1808818/1914690 [00:12<00:01, 104218.33 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  95%|█████████▌| 1819552/1914690 [00:12<00:00, 95827.85 examples/s] 
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  96%|█████████▌| 1829419/1914690 [00:12<00:00, 89716.44 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  96%|█████████▌| 1840419/1914690 [00:12<00:00, 91500.44 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  97%|█████████▋| 1850286/1914690 [00:13<00:00, 85467.71 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  97%|█████████▋| 1859887/1914690 [00:13<00:00, 78994.38 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  98%|█████████▊| 1868887/1914690 [00:13<00:00, 69641.63 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  98%|█████████▊| 1876887/1914690 [00:13<00:00, 69604.97 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  98%|█████████▊| 1884887/1914690 [00:13<00:00, 61695.93 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  99%|█████████▉| 1891754/1914690 [00:13<00:00, 59423.41 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  99%|█████████▉| 1898488/1914690 [00:13<00:00, 55360.40 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  99%|█████████▉| 1905089/1914690 [00:14<00:00, 47506.35 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40): 100%|█████████▉| 1910956/1914690 [00:14<00:00, 29394.63 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40): 100%|██████████| 1914690/1914690 [00:15<00:00, 126461.58 examples/s]
[36m(TaskRunner pid=1092302)[0m Setting TOKENIZERS_PARALLELISM=false for forked processes.
[36m(TaskRunner pid=1092302)[0m WARNING:2025-08-26 02:03:49,869:Setting TOKENIZERS_PARALLELISM=false for forked processes.
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   0%|          | 0/629183 [00:00<?, ? examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   0%|          | 1000/629183 [00:01<12:42, 823.71 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   0%|          | 2000/629183 [00:01<05:55, 1766.67 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   1%|          | 4000/629183 [00:01<02:33, 4061.11 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   1%|          | 7000/629183 [00:01<01:18, 7931.06 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   2%|▏         | 10000/629183 [00:01<00:53, 11617.83 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   2%|▏         | 15000/629183 [00:01<00:32, 18923.45 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   3%|▎         | 20000/629183 [00:01<00:24, 24740.20 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   4%|▍         | 26000/629183 [00:01<00:18, 32095.74 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   5%|▌         | 33000/629183 [00:02<00:14, 39869.40 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   7%|▋         | 41000/629183 [00:02<00:12, 48259.94 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):   8%|▊         | 48000/629183 [00:02<00:11, 51865.95 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  10%|▉         | 60000/629183 [00:02<00:08, 66399.33 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  11%|█         | 69000/629183 [00:02<00:08, 69853.53 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  13%|█▎        | 80000/629183 [00:02<00:07, 77150.05 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  15%|█▍        | 92000/629183 [00:02<00:06, 85000.97 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  17%|█▋        | 105000/629183 [00:02<00:05, 93267.99 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  19%|█▉        | 119000/629183 [00:03<00:04, 102342.09 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  21%|██        | 133000/629183 [00:03<00:04, 107863.21 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  23%|██▎       | 146730/629183 [00:03<00:04, 110238.07 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  26%|██▌       | 160730/629183 [00:03<00:04, 113811.99 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  28%|██▊       | 178190/629183 [00:03<00:03, 124584.54 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  31%|███       | 194190/629183 [00:03<00:03, 129487.39 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  33%|███▎      | 209920/629183 [00:03<00:03, 131411.11 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  36%|███▌      | 223380/629183 [00:03<00:03, 125165.72 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  38%|███▊      | 237380/629183 [00:03<00:03, 124699.97 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  40%|████      | 254110/629183 [00:04<00:02, 131569.85 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  43%|████▎     | 270840/629183 [00:04<00:02, 135850.82 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  46%|████▌     | 286300/629183 [00:04<00:02, 134943.04 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  48%|████▊     | 300030/629183 [00:04<00:02, 129493.07 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  50%|████▉     | 313760/629183 [00:04<00:02, 125999.74 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  52%|█████▏    | 329760/629183 [00:04<00:02, 130695.00 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  55%|█████▌    | 346220/629183 [00:04<00:02, 134220.82 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  57%|█████▋    | 360220/629183 [00:04<00:02, 131703.46 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  59%|█████▉    | 373950/629183 [00:04<00:01, 127799.40 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  62%|██████▏   | 387950/629183 [00:05<00:01, 127294.96 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  65%|██████▌   | 411680/629183 [00:05<00:01, 156947.61 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  68%|██████▊   | 428140/629183 [00:05<00:01, 156588.69 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  71%|███████   | 444870/629183 [00:05<00:01, 153841.98 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  73%|███████▎  | 460600/629183 [00:05<00:01, 142768.61 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  76%|███████▌  | 475600/629183 [00:05<00:01, 143141.99 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  78%|███████▊  | 490330/629183 [00:05<00:01, 135216.56 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  80%|████████  | 505790/629183 [00:05<00:00, 132783.22 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  83%|████████▎ | 520519/629183 [00:06<00:00, 136069.29 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  85%|████████▌ | 534977/629183 [00:06<00:00, 129353.18 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  87%|████████▋ | 548706/629183 [00:06<00:00, 116557.11 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  89%|████████▉ | 560706/629183 [00:06<00:00, 107823.64 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  91%|█████████ | 572706/629183 [00:06<00:00, 100331.74 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  93%|█████████▎| 583893/629183 [00:06<00:00, 93808.49 examples/s] 
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  94%|█████████▍| 593622/629183 [00:06<00:00, 90561.81 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  96%|█████████▌| 603351/629183 [00:06<00:00, 78572.12 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  97%|█████████▋| 611809/629183 [00:07<00:00, 70218.01 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40):  98%|█████████▊| 619538/629183 [00:07<00:00, 63304.82 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40): 100%|█████████▉| 626725/629183 [00:07<00:00, 50973.57 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=40): 100%|██████████| 629183/629183 [00:07<00:00, 79804.19 examples/s]
[36m(TaskRunner pid=1092302)[0m dataset len: 2279640
[36m(TaskRunner pid=1092302)[0m Using dataset class: RLHFDataset
[36m(TaskRunner pid=1092302)[0m num_proc must be <= 10. Reducing num_proc to 10 for dataset of size 10.
[36m(TaskRunner pid=1092302)[0m WARNING:2025-08-26 02:03:58,379:num_proc must be <= 10. Reducing num_proc to 10 for dataset of size 10.
[36m(TaskRunner pid=1092302)[0m Setting TOKENIZERS_PARALLELISM=false for forked processes.
[36m(TaskRunner pid=1092302)[0m WARNING:2025-08-26 02:03:58,380:Setting TOKENIZERS_PARALLELISM=false for forked processes.
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=10):   0%|          | 0/10 [00:00<?, ? examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=10):  10%|█         | 1/10 [00:00<00:06,  1.40 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=10):  20%|██        | 2/10 [00:00<00:02,  2.82 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=10):  40%|████      | 4/10 [00:00<00:01,  5.58 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=10):  50%|█████     | 5/10 [00:01<00:00,  5.47 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=10):  60%|██████    | 6/10 [00:01<00:00,  6.13 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=10):  80%|████████  | 8/10 [00:01<00:00,  8.20 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=10):  90%|█████████ | 9/10 [00:01<00:00,  8.38 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=10): 100%|██████████| 10/10 [00:01<00:00,  8.38 examples/s]
[36m(TaskRunner pid=1092302)[0m Filter (num_proc=10): 100%|██████████| 10/10 [00:01<00:00,  5.61 examples/s]
[36m(TaskRunner pid=1092302)[0m DeprecationWarning: `ray.state.available_resources_per_node` is a private attribute and access will be removed in a future Ray version.
[36m(TaskRunner pid=1092302)[0m dataset len: 9
[36m(TaskRunner pid=1092302)[0m [validate_config] All configuration checks passed successfully!
[36m(TaskRunner pid=1092302)[0m Size of train dataloader: 2226, Size of val dataloader: 1
[36m(TaskRunner pid=1092302)[0m Total training steps: 2226
[36m(TaskRunner pid=1092302)[0m colocated worker base class <class 'verl.single_controller.base.worker.Worker'>
[36m(TaskRunner pid=1092302)[0m WARNING:2025-08-26 02:04:01,010:Waiting for register center actor xWBywJ_register_center to be ready. Elapsed time: 0 seconds out of 300 seconds.
[36m(pid=1104252)[0m 2025-08-26 02:04:07.293605: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
[36m(pid=1104252)[0m 2025-08-26 02:04:07.307331: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:485] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
[36m(pid=1104252)[0m 2025-08-26 02:04:07.323742: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:8454] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
[36m(pid=1104252)[0m 2025-08-26 02:04:07.328553: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1452] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
[36m(pid=1104252)[0m 2025-08-26 02:04:07.340409: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[36m(pid=1104252)[0m To enable the following instructions: AVX2 AVX512F AVX512_VNNI AVX512_BF16 AVX512_FP16 AVX_VNNI AMX_TILE AMX_INT8 AMX_BF16 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[36m(pid=1104252)[0m 2025-08-26 02:04:08.266119: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[36m(pid=1104591)[0m 2025-08-26 02:04:19.123596: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
[36m(pid=1104591)[0m 2025-08-26 02:04:19.137235: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:485] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
[36m(pid=1104591)[0m 2025-08-26 02:04:19.153360: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:8454] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
[36m(pid=1104591)[0m 2025-08-26 02:04:19.158093: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1452] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
[36m(pid=1104591)[0m 2025-08-26 02:04:19.170033: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[36m(pid=1104591)[0m To enable the following instructions: AVX2 AVX512F AVX512_VNNI AVX512_BF16 AVX512_FP16 AVX_VNNI AMX_TILE AMX_INT8 AMX_BF16 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[36m(pid=1104587)[0m 2025-08-26 02:04:19.515097: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
[36m(pid=1104587)[0m 2025-08-26 02:04:19.529009: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:485] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
[36m(pid=1104587)[0m 2025-08-26 02:04:19.545990: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:8454] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
[36m(pid=1104587)[0m 2025-08-26 02:04:19.550837: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1452] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
[36m(pid=1104591)[0m 2025-08-26 02:04:20.138356: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[36m(WorkerDict pid=1104591)[0m You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.
[36m(pid=1104589)[0m 2025-08-26 02:04:20.849207: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 6x across cluster] (Ray deduplicates logs by default. Set RAY_DEDUP_LOGS=0 to disable log deduplication, or see https://docs.ray.io/en/master/ray-observability/user-guides/configure-logging.html#log-deduplication for more options.)[0m
[36m(pid=1104589)[0m To enable the following instructions: AVX2 AVX512F AVX512_VNNI AVX512_BF16 AVX512_FP16 AVX_VNNI AMX_TILE AMX_INT8 AMX_BF16 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 6x across cluster][0m
[36m(WorkerDict pid=1104589)[0m Monkey patch _flash_attention_forward in transformers.integrations.flash_attention
[36m(WorkerDict pid=1104589)[0m Skipping monkey patch for Qwen2ForCausalLM as use_fused_kernels is False or fused_kernels_backend is torch
[36m(pid=1104589)[0m 2025-08-26 02:04:20.801781: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.[32m [repeated 5x across cluster][0m
[36m(pid=1104589)[0m 2025-08-26 02:04:20.815583: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:485] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered[32m [repeated 5x across cluster][0m
[36m(pid=1104589)[0m 2025-08-26 02:04:20.832334: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:8454] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered[32m [repeated 5x across cluster][0m
[36m(pid=1104589)[0m 2025-08-26 02:04:20.837196: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1452] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered[32m [repeated 5x across cluster][0m
[36m(pid=1104589)[0m 2025-08-26 02:04:21.882878: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 6x across cluster][0m
[36m(WorkerDict pid=1104252)[0m Model config after override: Qwen2Config {
[36m(WorkerDict pid=1104252)[0m   "architectures": [
[36m(WorkerDict pid=1104252)[0m     "Qwen2ForCausalLM"
[36m(WorkerDict pid=1104252)[0m   ],
[36m(WorkerDict pid=1104252)[0m   "attention_dropout": 0.0,
[36m(WorkerDict pid=1104252)[0m   "eos_token_id": 151643,
[36m(WorkerDict pid=1104252)[0m   "hidden_act": "silu",
[36m(WorkerDict pid=1104252)[0m   "hidden_size": 1536,
[36m(WorkerDict pid=1104252)[0m   "initializer_range": 0.02,
[36m(WorkerDict pid=1104252)[0m   "intermediate_size": 8960,
[36m(WorkerDict pid=1104252)[0m   "max_position_embeddings": 131072,
[36m(WorkerDict pid=1104252)[0m   "max_window_layers": 28,
[36m(WorkerDict pid=1104252)[0m   "model_type": "qwen2",
[36m(WorkerDict pid=1104252)[0m   "num_attention_heads": 12,
[36m(WorkerDict pid=1104252)[0m   "num_hidden_layers": 28,
[36m(WorkerDict pid=1104252)[0m   "num_key_value_heads": 2,
[36m(WorkerDict pid=1104252)[0m   "pad_token_id": 151643,
[36m(WorkerDict pid=1104252)[0m   "rms_norm_eps": 1e-06,
[36m(WorkerDict pid=1104252)[0m   "rope_scaling": null,
[36m(WorkerDict pid=1104252)[0m   "rope_theta": 1000000.0,
[36m(WorkerDict pid=1104252)[0m   "sliding_window": 131072,
[36m(WorkerDict pid=1104252)[0m   "tie_word_embeddings": true,
[36m(WorkerDict pid=1104252)[0m   "torch_dtype": "bfloat16",
[36m(WorkerDict pid=1104252)[0m   "transformers_version": "4.51.1",
[36m(WorkerDict pid=1104252)[0m   "use_cache": true,
[36m(WorkerDict pid=1104252)[0m   "use_mrope": false,
[36m(WorkerDict pid=1104252)[0m   "use_sliding_window": false,
[36m(WorkerDict pid=1104252)[0m   "vocab_size": 151936
[36m(WorkerDict pid=1104252)[0m }
[36m(WorkerDict pid=1104252)[0m 
[36m(WorkerDict pid=1104252)[0m Qwen2ForCausalLM contains 1.54B parameters
[36m(WorkerDict pid=1104252)[0m wrap_policy: functools.partial(<function _or_policy at 0x7fa3858cee60>, policies=[functools.partial(<function transformer_auto_wrap_policy at 0x7fa3858ced40>, transformer_layer_cls={<class 'transformers.models.qwen2.modeling_qwen2.Qwen2DecoderLayer'>})])
[36m(WorkerDict pid=1104252)[0m NCCL version 2.21.5+cuda12.4
[36m(WorkerDict pid=1104252)[0m 
[36m(WorkerDict pid=1104252)[0m bolt-8xfg93i4zr-6csgcu35ry:1104252:1105998 [0] /nccl-shim-net/src/guest_config_checker.cc:101 NCCL WARN NCCL/NET (shim) mismatch recommended: NCCL_FASTRAK_LLCM_DEVICE_DIRECTORY=/dev/aperture_devices (expected unset)
[36m(WorkerDict pid=1104252)[0m 
[36m(WorkerDict pid=1104252)[0m bolt-8xfg93i4zr-6csgcu35ry:1104252:1105998 [0] /nccl-shim-net/src/guest_config_checker.cc:101 NCCL WARN NCCL/NET (shim) mismatch recommended: NCCL_LIB_DIR=/usr/local/nvidia/lib64 (expected unset)
[36m(WorkerDict pid=1104252)[0m 
[36m(WorkerDict pid=1104252)[0m bolt-8xfg93i4zr-6csgcu35ry:1104252:1105998 [0] /nccl-shim-net/src/guest_config_checker.cc:101 NCCL WARN NCCL/NET (shim) mismatch recommended: NCCL_DYNAMIC_CHUNK_SIZE=524288 (expected unset)
[36m(WorkerDict pid=1104252)[0m 
[36m(WorkerDict pid=1104252)[0m bolt-8xfg93i4zr-6csgcu35ry:1104252:1105998 [0] /nccl-shim-net/src/guest_config_checker.cc:101 NCCL WARN NCCL/NET (shim) mismatch recommended: NCCL_TESTS_VERSION=2.13.6 (expected unset)
[36m(WorkerDict pid=1104252)[0m 
[36m(WorkerDict pid=1104252)[0m bolt-8xfg93i4zr-6csgcu35ry:1104252:1105998 [0] /nccl-shim-net/src/guest_config_checker.cc:101 NCCL WARN NCCL/NET (shim) mismatch recommended: cpu affinity settings not subset, curr=0xffff,ffffffff,ffffffff,ffffffff,ffffffff,ffffffff,ffffffff (expected 0xffffffff,00000000)
[36m(WorkerDict pid=1104588)[0m 
[36m(WorkerDict pid=1104588)[0m 
[36m(WorkerDict pid=1104588)[0m 
[36m(WorkerDict pid=1104588)[0m 
[36m(WorkerDict pid=1104588)[0m 
[36m(WorkerDict pid=1104592)[0m 
[36m(WorkerDict pid=1104592)[0m 
[36m(WorkerDict pid=1104592)[0m 
[36m(WorkerDict pid=1104592)[0m 
[36m(WorkerDict pid=1104592)[0m 
[36m(WorkerDict pid=1104590)[0m 
[36m(WorkerDict pid=1104590)[0m 
[36m(WorkerDict pid=1104590)[0m 
[36m(WorkerDict pid=1104590)[0m 
[36m(WorkerDict pid=1104590)[0m 
[36m(WorkerDict pid=1104587)[0m 
[36m(WorkerDict pid=1104587)[0m 
[36m(WorkerDict pid=1104587)[0m 
[36m(WorkerDict pid=1104587)[0m 
[36m(WorkerDict pid=1104587)[0m 
[36m(WorkerDict pid=1104586)[0m 
[36m(WorkerDict pid=1104586)[0m 
[36m(WorkerDict pid=1104586)[0m 
[36m(WorkerDict pid=1104586)[0m 
[36m(WorkerDict pid=1104586)[0m 
[36m(WorkerDict pid=1104589)[0m 
[36m(WorkerDict pid=1104589)[0m 
[36m(WorkerDict pid=1104589)[0m 
[36m(WorkerDict pid=1104589)[0m 
[36m(WorkerDict pid=1104589)[0m 
[36m(WorkerDict pid=1104591)[0m 
[36m(WorkerDict pid=1104591)[0m 
[36m(WorkerDict pid=1104591)[0m 
[36m(WorkerDict pid=1104591)[0m 
[36m(WorkerDict pid=1104591)[0m 
[36m(WorkerDict pid=1104252)[0m 
[36m(WorkerDict pid=1104252)[0m bolt-8xfg93i4zr-6csgcu35ry:1104252:1105998 [0] /nccl-tuner-config-based/src/config_based_tuner.cc:155 NCCL WARN Cannot find communicatorTunerConfig for communicator(num_node:1, num_rank:8) with config:communicator_configs {
[36m(WorkerDict pid=1104252)[0m   node_range {
[36m(WorkerDict pid=1104252)[0m     min: 2
[36m(WorkerDict pid=1104252)[0m     max: 3
[36m(WorkerDict pid=1104252)[0m   }
[36m(WorkerDict pid=1104252)[0m   rank_per_node_range {
[36m(WorkerDict pid=1104252)[0m     min: 1
[36m(WorkerDict pid=1104252)[0m     max: 2
[36m(WorkerDict pid=1104252)[0m   }
[36m(WorkerDict pid=1104252)[0m   coll_configs {
[36m(WorkerDict pid=1104252)[0m     coll_type: COLL_ALL_REDUCE
[36m(WorkerDict pid=1104252)[0m     msg_size_tuning_rules {
[36m(WorkerDict pid=1104252)[0m       per_rank_message_size {
[36m(WorkerDict pid=1104252)[0m         min: 0
[36m(WorkerDict pid=1104252)[0m       }
[36m(WorkerDict pid=1104252)[0m       coll_tuning_spec {
[36m(WorkerDict pid=1104252)[0m         num_channel: 2
[36m(WorkerDict pid=1104252)[0m         protocol: PROTO_SIMPLE
[36m(WorkerDict pid=1104252)[0m         algorithm: ALGO_TREE
[36m(WorkerDict pid=1104252)[0m       }
[36m(WorkerDict pid=1104252)[0m     }
[36m(WorkerDict pid=1104252)[0m   }
[36m(WorkerDict pid=1104252)[0m   coll_configs {
[36m(WorkerDict pid=1104252)[0m     coll_type: COLL_DEFAULT
[36m(WorkerDict pid=1104252)[0m     msg_size_tuning_rules {
[36m(WorkerDict pid=1104252)[0m       per_rank_message_size {
[36m(WorkerDict pid=1104252)[0m         min: 0
[36m(WorkerDict pid=1104252)[0m         max: 65536
[36m(WorkerDict pid=1104252)[0m       }
[36m(WorkerDict pid=1104252)[0m       coll_tuning_spec {
[36m(WorkerDict pid=1104252)[0m         num_channel: 2
[36m(WorkerDict pid=1104252)[0m         protocol: PROTO_SIMPLE
[36m(WorkerDict pid=1104252)[0m         algorithm: ALGO_RING
[36m(WorkerDict pid=1104252)[0m       }
[36m(WorkerDict pid=1104252)[0m     }
[36m(WorkerDict pid=1104252)[0m     msg_size_tuning_rules {
[36m(WorkerDict pid=1104252)[0m       per_rank_message_size {
[36m(WorkerDict pid=1104252)[0m         min: 65536
[36m(WorkerDict pid=1104252)[0m       }
[36m(WorkerDict pid=1104252)[0m       coll_tuning_spec {
[36m(WorkerDict pid=1104252)[0m         num_channel: 4
[36m(WorkerDict pid=1104252)[0m         protocol: PROTO_SIMPLE
[36m(WorkerDict pid=1104252)[0m         algorithm: AL
[36m(WorkerDict pid=1104252)[0m 
[36m(WorkerDict pid=1104252)[0m bolt-8xfg93i4zr-6csgcu35ry:1104252:1105998 [0] /nccl-tuner-config-based/src/config_based_tuner.cc:271 NCCL WARN No communicator config selected from config:communicator_configs {
[36m(WorkerDict pid=1104252)[0m   node_range {
[36m(WorkerDict pid=1104252)[0m     min: 2
[36m(WorkerDict pid=1104252)[0m     max: 3
[36m(WorkerDict pid=1104252)[0m   }
[36m(WorkerDict pid=1104252)[0m   rank_per_node_range {
[36m(WorkerDict pid=1104252)[0m     min: 1
[36m(WorkerDict pid=1104252)[0m     max: 2
[36m(WorkerDict pid=1104252)[0m   }
[36m(WorkerDict pid=1104252)[0m   coll_configs {
[36m(WorkerDict pid=1104252)[0m     coll_type: COLL_ALL_REDUCE
[36m(WorkerDict pid=1104252)[0m     msg_size_tuning_rules {
[36m(WorkerDict pid=1104252)[0m       per_rank_message_size {
[36m(WorkerDict pid=1104252)[0m         min: 0
[36m(WorkerDict pid=1104252)[0m       }
[36m(WorkerDict pid=1104252)[0m       coll_tuning_spec {
[36m(WorkerDict pid=1104252)[0m         num_channel: 2
[36m(WorkerDict pid=1104252)[0m         protocol: PROTO_SIMPLE
[36m(WorkerDict pid=1104252)[0m         algorithm: ALGO_TREE
[36m(WorkerDict pid=1104252)[0m       }
[36m(WorkerDict pid=1104252)[0m     }
[36m(WorkerDict pid=1104252)[0m   }
[36m(WorkerDict pid=1104252)[0m   coll_configs {
[36m(WorkerDict pid=1104252)[0m     coll_type: COLL_DEFAULT
[36m(WorkerDict pid=1104252)[0m     msg_size_tuning_rules {
[36m(WorkerDict pid=1104252)[0m       per_rank_message_size {
[36m(WorkerDict pid=1104252)[0m         min: 0
[36m(WorkerDict pid=1104252)[0m         max: 65536
[36m(WorkerDict pid=1104252)[0m       }
[36m(WorkerDict pid=1104252)[0m       coll_tuning_spec {
[36m(WorkerDict pid=1104252)[0m         num_channel: 2
[36m(WorkerDict pid=1104252)[0m         protocol: PROTO_SIMPLE
[36m(WorkerDict pid=1104252)[0m         algorithm: ALGO_RING
[36m(WorkerDict pid=1104252)[0m       }
[36m(WorkerDict pid=1104252)[0m     }
[36m(WorkerDict pid=1104252)[0m     msg_size_tuning_rules {
[36m(WorkerDict pid=1104252)[0m       per_rank_message_size {
[36m(WorkerDict pid=1104252)[0m         min: 65536
[36m(WorkerDict pid=1104252)[0m       }
[36m(WorkerDict pid=1104252)[0m       coll_tuning_spec {
[36m(WorkerDict pid=1104252)[0m         num_channel: 4
[36m(WorkerDict pid=1104252)[0m         protocol: PROTO_SIMPLE
[36m(WorkerDict pid=1104252)[0m         algorithm: ALGO_RING
[36m(WorkerDict pid=1104252)[0m       }
[36m(WorkerDict pid=1104252)[0m     }
[36m(WorkerDict pid=1104252)[0m   }
[36m(WorkerDict pid=1104252)[0m }
[36m(WorkerDict pid=1104252)[0m communicator_conf
[36m(WorkerDict pid=1104252)[0m 
[36m(WorkerDict pid=1104252)[0m bolt-8xfg93i4zr-6csgcu35ry:1104252:1105998 [0] /nccl-tuner-config-based/src/tuner_tcpx.cc:70 NCCL WARN No communicator found for nRanks:8, nNodes:1 from config_path:/usr/local/nvidia/lib64/a3plus_tuner_config.textproto
[36m(WorkerDict pid=1104252)[0m Monkey patch _flash_attention_forward in transformers.integrations.flash_attention[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=1104252)[0m Skipping monkey patch for Qwen2ForCausalLM as use_fused_kernels is False or fused_kernels_backend is torch[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=1104591)[0m bolt-8xfg93i4zr-6csgcu35ry:1104591:1106007 [0] /nccl-shim-net/src/guest_config_checker.cc:101 NCCL WARN NCCL/NET (shim) mismatch recommended: NCCL_FASTRAK_LLCM_DEVICE_DIRECTORY=/dev/aperture_devices (expected unset)[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=1104591)[0m bolt-8xfg93i4zr-6csgcu35ry:1104591:1106007 [0] /nccl-shim-net/src/guest_config_checker.cc:101 NCCL WARN NCCL/NET (shim) mismatch recommended: NCCL_TESTS_VERSION=2.13.6 (expected unset)[32m [repeated 21x across cluster][0m
[36m(WorkerDict pid=1104591)[0m bolt-8xfg93i4zr-6csgcu35ry:1104591:1106007 [0] /nccl-shim-net/src/guest_config_checker.cc:101 NCCL WARN NCCL/NET (shim) mismatch recommended: cpu affinity settings not subset, curr=0xffff,ffffffff,ffffffff,ffffffff,ffffffff,ffffffff,ffffffff (expected 0xffffffff,00000000)[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=1104589)[0m 
[36m(WorkerDict pid=1104589)[0m   }
[36m(WorkerDict pid=1104589)[0m   }
[36m(WorkerDict pid=1104589)[0m       }
[36m(WorkerDict pid=1104589)[0m       }
[36m(WorkerDict pid=1104589)[0m     }
[36m(WorkerDict pid=1104589)[0m   }
[36m(WorkerDict pid=1104589)[0m       }
[36m(WorkerDict pid=1104589)[0m       }
[36m(WorkerDict pid=1104589)[0m     }
[36m(WorkerDict pid=1104589)[0m       }
[36m(WorkerDict pid=1104589)[0m 
[36m(WorkerDict pid=1104589)[0m   }
[36m(WorkerDict pid=1104589)[0m   }
[36m(WorkerDict pid=1104589)[0m       }
[36m(WorkerDict pid=1104589)[0m       }
[36m(WorkerDict pid=1104589)[0m     }
[36m(WorkerDict pid=1104589)[0m   }
[36m(WorkerDict pid=1104589)[0m       }
[36m(WorkerDict pid=1104589)[0m       }
[36m(WorkerDict pid=1104589)[0m     }
[36m(WorkerDict pid=1104589)[0m       }
[36m(WorkerDict pid=1104589)[0m       }
[36m(WorkerDict pid=1104589)[0m     }
[36m(WorkerDict pid=1104589)[0m   }
[36m(WorkerDict pid=1104589)[0m }
[36m(WorkerDict pid=1104589)[0m 
[36m(WorkerDict pid=1104588)[0m 
[36m(WorkerDict pid=1104588)[0m 
[36m(WorkerDict pid=1104588)[0m 
[36m(WorkerDict pid=1104592)[0m 
[36m(WorkerDict pid=1104592)[0m 
[36m(WorkerDict pid=1104592)[0m 
[36m(WorkerDict pid=1104590)[0m 
[36m(WorkerDict pid=1104590)[0m 
[36m(WorkerDict pid=1104590)[0m 
[36m(WorkerDict pid=1104587)[0m 
[36m(WorkerDict pid=1104587)[0m 
[36m(WorkerDict pid=1104587)[0m 
[36m(WorkerDict pid=1104586)[0m 
[36m(WorkerDict pid=1104586)[0m 
[36m(WorkerDict pid=1104586)[0m 
[36m(WorkerDict pid=1104591)[0m 
[36m(WorkerDict pid=1104591)[0m 
[36m(WorkerDict pid=1104591)[0m 
[36m(WorkerDict pid=1104252)[0m Actor use_remove_padding=True
[36m(WorkerDict pid=1104252)[0m Actor use_fused_kernels=False
[36m(WorkerDict pid=1104252)[0m Flash Attention 2.0 only supports torch.float16 and torch.bfloat16 dtypes, but the current dype in Qwen2ForCausalLM is torch.float32. You should run training or inference using Automatic Mixed-Precision via the `with torch.autocast(device_type='torch_device'):` decorator, or load the model with the `torch_dtype` argument. Example: `model = AutoModel.from_pretrained("openai/whisper-tiny", attn_implementation="flash_attention_2", torch_dtype=torch.float16)`
[36m(WorkerDict pid=1104252)[0m You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=1104252)[0m Model config after override: Qwen2Config {
[36m(WorkerDict pid=1104252)[0m   "architectures": [
[36m(WorkerDict pid=1104252)[0m     "Qwen2ForCausalLM"
[36m(WorkerDict pid=1104252)[0m   ],
[36m(WorkerDict pid=1104252)[0m   "attention_dropout": 0.0,
[36m(WorkerDict pid=1104252)[0m   "eos_token_id": 151643,
[36m(WorkerDict pid=1104252)[0m   "hidden_act": "silu",
[36m(WorkerDict pid=1104252)[0m   "hidden_size": 1536,
[36m(WorkerDict pid=1104252)[0m   "initializer_range": 0.02,
[36m(WorkerDict pid=1104252)[0m   "intermediate_size": 8960,
[36m(WorkerDict pid=1104252)[0m   "max_position_embeddings": 131072,
[36m(WorkerDict pid=1104252)[0m   "max_window_layers": 28,
[36m(WorkerDict pid=1104252)[0m   "model_type": "qwen2",
[36m(WorkerDict pid=1104252)[0m   "num_attention_heads": 12,
[36m(WorkerDict pid=1104252)[0m   "num_hidden_layers": 28,
[36m(WorkerDict pid=1104252)[0m   "num_key_value_heads": 2,
[36m(WorkerDict pid=1104252)[0m   "pad_token_id": 151643,
[36m(WorkerDict pid=1104252)[0m   "rms_norm_eps": 1e-06,
[36m(WorkerDict pid=1104252)[0m   "rope_scaling": null,
[36m(WorkerDict pid=1104252)[0m   "rope_theta": 1000000.0,
[36m(WorkerDict pid=1104252)[0m   "sliding_window": 131072,
[36m(WorkerDict pid=1104252)[0m   "tie_word_embeddings": true,
[36m(WorkerDict pid=1104252)[0m   "torch_dtype": "bfloat16",
[36m(WorkerDict pid=1104252)[0m   "transformers_version": "4.51.1",
[36m(WorkerDict pid=1104252)[0m   "use_cache": true,
[36m(WorkerDict pid=1104252)[0m   "use_mrope": false,
[36m(WorkerDict pid=1104252)[0m   "use_sliding_window": false,
[36m(WorkerDict pid=1104252)[0m   "vocab_size": 151936
[36m(WorkerDict pid=1104252)[0m 
[36m(WorkerDict pid=1104252)[0m Qwen2ForCausalLM contains 1.54B parameters
[36m(WorkerDict pid=1104252)[0m wrap_policy: functools.partial(<function _or_policy at 0x7fa3858cee60>, policies=[functools.partial(<function transformer_auto_wrap_policy at 0x7fa3858ced40>, transformer_layer_cls={<class 'transformers.models.qwen2.modeling_qwen2.Qwen2DecoderLayer'>})])
[36m(WorkerDict pid=1104252)[0m Total steps: 2226, num_warmup_steps: 0
[36m(WorkerDict pid=1104252)[0m Actor use_remove_padding=True
[36m(WorkerDict pid=1104252)[0m Actor use_fused_kernels=False
[36m(WorkerDict pid=1104591)[0m bolt-8xfg93i4zr-6csgcu35ry:1104591:1106007 [0] /nccl-tuner-config-based/src/config_based_tuner.cc:155 NCCL WARN Cannot find communicatorTunerConfig for communicator(num_node:1, num_rank:8) with config:communicator_configs {[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=1104591)[0m   node_range {[32m [repeated 14x across cluster][0m
[36m(WorkerDict pid=1104591)[0m         min: 65536[32m [repeated 70x across cluster][0m
[36m(WorkerDict pid=1104591)[0m         max: 65536[32m [repeated 42x across cluster][0m
[36m(WorkerDict pid=1104591)[0m   rank_per_node_range {[32m [repeated 14x across cluster][0m
[36m(WorkerDict pid=1104591)[0m   coll_configs {[32m [repeated 28x across cluster][0m
[36m(WorkerDict pid=1104591)[0m     coll_type: COLL_ALL_REDUCE[32m [repeated 14x across cluster][0m
[36m(WorkerDict pid=1104591)[0m     msg_size_tuning_rules {[32m [repeated 42x across cluster][0m
[36m(WorkerDict pid=1104591)[0m       per_rank_message_size {[32m [repeated 42x across cluster][0m
[36m(WorkerDict pid=1104591)[0m       coll_tuning_spec {[32m [repeated 42x across cluster][0m
[36m(WorkerDict pid=1104591)[0m         num_channel: 4[32m [repeated 42x across cluster][0m
[36m(WorkerDict pid=1104591)[0m         protocol: PROTO_SIMPLE[32m [repeated 42x across cluster][0m
[36m(WorkerDict pid=1104591)[0m         algorithm: ALGO_TREE[32m [repeated 14x across cluster][0m
[36m(WorkerDict pid=1104591)[0m     coll_type: COLL_DEFAULT[32m [repeated 14x across cluster][0m
[36m(WorkerDict pid=1104591)[0m         algorithm: ALGO_RING[32m [repeated 21x across cluster][0m
[36m(WorkerDict pid=1104591)[0m         algorithm: AL[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=1104591)[0m bolt-8xfg93i4zr-6csgcu35ry:1104591:1106007 [0] /nccl-tuner-config-based/src/config_based_tuner.cc:271 NCCL WARN No communicator config selected from config:communicator_configs {[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=1104591)[0m communicator_conf[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=1104591)[0m bolt-8xfg93i4zr-6csgcu35ry:1104591:1106007 [0] /nccl-tuner-config-based/src/tuner_tcpx.cc:70 NCCL WARN No communicator found for nRanks:8, nNodes:1 from config_path:/usr/local/nvidia/lib64/a3plus_tuner_config.textproto[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=1104586)[0m Monkey patch _flash_attention_forward in transformers.integrations.flash_attention[32m [repeated 8x across cluster][0m
[36m(WorkerDict pid=1104586)[0m Skipping monkey patch for Qwen2ForCausalLM as use_fused_kernels is False or fused_kernels_backend is torch[32m [repeated 8x across cluster][0m
[36m(WorkerDict pid=1104252)[0m }[32m [repeated 145x across cluster][0m
[36m(WorkerDict pid=1104252)[0m   0%|          | 0/23 [00:00<?, ?it/s]Capturing batches (avail_mem=11.99 GB):   0%|          | 0/23 [00:00<?, ?it/s]
[36m(WorkerDict pid=1104589)[0m Flash Attention 2.0 only supports torch.float16 and torch.bfloat16 dtypes, but the current dype in Qwen2ForCausalLM is torch.float32. You should run training or inference using Automatic Mixed-Precision via the `with torch.autocast(device_type='torch_device'):` decorator, or load the model with the `torch_dtype` argument. Example: `model = AutoModel.from_pretrained("openai/whisper-tiny", attn_implementation="flash_attention_2", torch_dtype=torch.float16)`[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=1104252)[0m Capturing batches (avail_mem=11.99 GB):   4%|▍         | 1/23 [00:00<00:18,  1.19it/s]Capturing batches (avail_mem=11.72 GB):   4%|▍         | 1/23 [00:00<00:18,  1.19it/s]
[36m(WorkerDict pid=1104590)[0m   0%|          | 0/23 [00:00<?, ?it/s]Capturing batches (avail_mem=11.96 GB):   0%|          | 0/23 [00:00<?, ?it/s][32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=1104588)[0m Capturing batches (avail_mem=10.95 GB):  30%|███       | 7/23 [00:03<00:08,  1.91it/s]Capturing batches (avail_mem=10.83 GB):  30%|███       | 7/23 [00:03<00:08,  1.91it/s][32m [repeated 61x across cluster][0m
[36m(WorkerDict pid=1104591)[0m Capturing batches (avail_mem=10.02 GB):  91%|█████████▏| 21/23 [00:09<00:00,  2.39it/s]Capturing batches (avail_mem=10.02 GB):  91%|█████████▏| 21/23 [00:09<00:00,  2.39it/s]
[36m(WorkerDict pid=1104588)[0m Capturing batches (avail_mem=10.12 GB):  74%|███████▍  | 17/23 [00:08<00:03,  1.97it/s]Capturing batches (avail_mem=10.08 GB):  74%|███████▍  | 17/23 [00:08<00:03,  1.97it/s][32m [repeated 75x across cluster][0m
[36m(WorkerDict pid=1104591)[0m Capturing batches (avail_mem=10.02 GB):  96%|█████████▌| 22/23 [00:09<00:00,  2.38it/s]Capturing batches (avail_mem=10.01 GB):  96%|█████████▌| 22/23 [00:09<00:00,  2.38it/s]
[36m(WorkerDict pid=1104591)[0m Capturing batches (avail_mem=10.01 GB): 100%|██████████| 23/23 [00:10<00:00,  2.35it/s]Capturing batches (avail_mem=10.01 GB): 100%|██████████| 23/23 [00:10<00:00,  2.28it/s]
[36m(WorkerDict pid=1104591)[0m /usr/local/lib/python3.10/dist-packages/torch/distributed/fsdp/fully_sharded_data_parallel.py:690: FutureWarning: FSDP.state_dict_type() and FSDP.set_state_dict_type() are being deprecated. Please use APIs, get_state_dict() and set_state_dict(), which can support different parallelisms, FSDP1, FSDP2, DDP. API doc: https://pytorch.org/docs/stable/distributed.checkpoint.html#torch.distributed.checkpoint.state_dict.get_state_dict .Tutorial: https://pytorch.org/tutorials/recipes/distributed_checkpoint_recipe.html .
[36m(WorkerDict pid=1104591)[0m   warnings.warn(
[36m(TaskRunner pid=1092302)[0m wandb: Currently logged in as: shenaozhang (shenaoz) to https://api.wandb.ai. Use `wandb login --relogin` to force relogin
[36m(WorkerDict pid=1104590)[0m Capturing batches (avail_mem=10.01 GB): 100%|██████████| 23/23 [00:13<00:00,  1.78it/s]Capturing batches (avail_mem=10.01 GB): 100%|██████████| 23/23 [00:13<00:00,  1.77it/s][32m [repeated 21x across cluster][0m
[36m(WorkerDict pid=1104590)[0m Capturing batches (avail_mem=10.03 GB):  87%|████████▋ | 20/23 [00:11<00:01,  1.80it/s]Capturing batches (avail_mem=10.02 GB):  87%|████████▋ | 20/23 [00:11<00:01,  1.80it/s][32m [repeated 23x across cluster][0m
[36m(TaskRunner pid=1092302)[0m wandb: Tracking run with wandb version 0.21.1
[36m(TaskRunner pid=1092302)[0m wandb: Run data is saved locally in /mnt/task_runtime/verl/wandb/run-20250826_020538-3bi86zyt
[36m(TaskRunner pid=1092302)[0m wandb: Run `wandb offline` to turn off syncing.
[36m(TaskRunner pid=1092302)[0m wandb: Syncing run 80-400-qwen-nowarmup-005penalty-log-nolenpenalty
[36m(TaskRunner pid=1092302)[0m wandb: ⭐️ View project at https://wandb.ai/shenaoz/em-aug24
[36m(TaskRunner pid=1092302)[0m wandb: 🚀 View run at https://wandb.ai/shenaoz/em-aug24/runs/3bi86zyt
[36m(WorkerDict pid=1104590)[0m /usr/local/lib/python3.10/dist-packages/torch/distributed/fsdp/fully_sharded_data_parallel.py:690: FutureWarning: FSDP.state_dict_type() and FSDP.set_state_dict_type() are being deprecated. Please use APIs, get_state_dict() and set_state_dict(), which can support different parallelisms, FSDP1, FSDP2, DDP. API doc: https://pytorch.org/docs/stable/distributed.checkpoint.html#torch.distributed.checkpoint.state_dict.get_state_dict .Tutorial: https://pytorch.org/tutorials/recipes/distributed_checkpoint_recipe.html .[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=1104590)[0m   warnings.warn([32m [repeated 7x across cluster][0m
[36m(TaskRunner pid=1092302)[0m Training Progress:   0%|          | 0/2226 [00:00<?, ?it/s]
[36m(TaskRunner pid=1092302)[0m Checkpoint tracker file does not exist: /mnt/task_wrapper/user_output/artifacts/checkpoints/em-aug24/80-400-qwen-nowarmup-005penalty-log-nolenpenalty/latest_checkpointed_iteration.txt
[36m(TaskRunner pid=1092302)[0m Training from scratch
[36m(TaskRunner pid=1092302)[0m global_steps 1
[36m(WorkerDict pid=1104591)[0m /mnt/task_runtime/verl/verl/workers/rollout/sglang_rollout/utils.py:49: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at /pytorch/torch/csrc/utils/tensor_numpy.cpp:203.)
[36m(WorkerDict pid=1104591)[0m   tensor_data = torch.ByteTensor(np.frombuffer(serialized_data, dtype=np.uint8)).to(device)
[36m(WorkerDict pid=1104592)[0m NCCL version 2.21.5+cuda12.4
[36m(WorkerDict pid=1104252)[0m 
[36m(WorkerDict pid=1104252)[0m bolt-8xfg93i4zr-6csgcu35ry:1104252:1108935 [0] /nccl-tuner-config-based/src/config_based_tuner.cc:155 NCCL WARN Cannot find communicatorTunerConfig for communicator(num_node:1, num_rank:1) with config:communicator_configs {
[36m(WorkerDict pid=1104252)[0m   node_range {
[36m(WorkerDict pid=1104252)[0m     min: 2
[36m(WorkerDict pid=1104252)[0m     max: 3
[36m(WorkerDict pid=1104252)[0m   }
[36m(WorkerDict pid=1104252)[0m   rank_per_node_range {
[36m(WorkerDict pid=1104252)[0m     min: 1
[36m(WorkerDict pid=1104252)[0m     max: 2
[36m(WorkerDict pid=1104252)[0m   }
[36m(WorkerDict pid=1104252)[0m   coll_configs {
[36m(WorkerDict pid=1104252)[0m     coll_type: COLL_ALL_REDUCE
[36m(WorkerDict pid=1104252)[0m     msg_size_tuning_rules {
[36m(WorkerDict pid=1104252)[0m       per_rank_message_size {
[36m(WorkerDict pid=1104252)[0m         min: 0
[36m(WorkerDict pid=1104252)[0m       }
[36m(WorkerDict pid=1104252)[0m       coll_tuning_spec {
[36m(WorkerDict pid=1104252)[0m         num_channel: 2
[36m(WorkerDict pid=1104252)[0m         protocol: PROTO_SIMPLE
[36m(WorkerDict pid=1104252)[0m         algorithm: ALGO_TREE
[36m(WorkerDict pid=1104252)[0m       }
[36m(WorkerDict pid=1104252)[0m     }
[36m(WorkerDict pid=1104252)[0m   }
[36m(WorkerDict pid=1104252)[0m   coll_configs {
[36m(WorkerDict pid=1104252)[0m     coll_type: COLL_DEFAULT
[36m(WorkerDict pid=1104252)[0m     msg_size_tuning_rules {
[36m(WorkerDict pid=1104252)[0m       per_rank_message_size {
[36m(WorkerDict pid=1104252)[0m         min: 0
[36m(WorkerDict pid=1104252)[0m         max: 65536
[36m(WorkerDict pid=1104252)[0m       }
[36m(WorkerDict pid=1104252)[0m       coll_tuning_spec {
[36m(WorkerDict pid=1104252)[0m         num_channel: 2
[36m(WorkerDict pid=1104252)[0m         protocol: PROTO_SIMPLE
[36m(WorkerDict pid=1104252)[0m         algorithm: ALGO_RING
[36m(WorkerDict pid=1104252)[0m       }
[36m(WorkerDict pid=1104252)[0m     }
[36m(WorkerDict pid=1104252)[0m     msg_size_tuning_rules {
[36m(WorkerDict pid=1104252)[0m       per_rank_message_size {
[36m(WorkerDict pid=1104252)[0m         min: 65536
[36m(WorkerDict pid=1104252)[0m       }
[36m(WorkerDict pid=1104252)[0m       coll_tuning_spec {
[36m(WorkerDict pid=1104252)[0m         num_channel: 4
[36m(WorkerDict pid=1104252)[0m         protocol: PROTO_SIMPLE
[36m(WorkerDict pid=1104252)[0m         algorithm: AL
[36m(WorkerDict pid=1104252)[0m 
[36m(WorkerDict pid=1104252)[0m bolt-8xfg93i4zr-6csgcu35ry:1104252:1108935 [0] /nccl-tuner-config-based/src/config_based_tuner.cc:271 NCCL WARN No communicator config selected from config:communicator_configs {
[36m(WorkerDict pid=1104252)[0m   node_range {
[36m(WorkerDict pid=1104252)[0m     min: 2
[36m(WorkerDict pid=1104252)[0m     max: 3
[36m(WorkerDict pid=1104252)[0m   }
[36m(WorkerDict pid=1104252)[0m   rank_per_node_range {
[36m(WorkerDict pid=1104252)[0m     min: 1
[36m(WorkerDict pid=1104252)[0m     max: 2
[36m(WorkerDict pid=1104252)[0m   }
[36m(WorkerDict pid=1104252)[0m   coll_configs {
[36m(WorkerDict pid=1104252)[0m     coll_type: COLL_ALL_REDUCE
[36m(WorkerDict pid=1104252)[0m     msg_size_tuning_rules {
[36m(WorkerDict pid=1104252)[0m       per_rank_message_size {
[36m(WorkerDict pid=1104252)[0m         min: 0
[36m(WorkerDict pid=1104252)[0m       }
[36m(WorkerDict pid=1104252)[0m       coll_tuning_spec {
[36m(WorkerDict pid=1104252)[0m         num_channel: 2
[36m(WorkerDict pid=1104252)[0m         protocol: PROTO_SIMPLE
[36m(WorkerDict pid=1104252)[0m         algorithm: ALGO_TREE
[36m(WorkerDict pid=1104252)[0m       }
[36m(WorkerDict pid=1104252)[0m     }
[36m(WorkerDict pid=1104252)[0m   }
[36m(WorkerDict pid=1104252)[0m   coll_configs {
[36m(WorkerDict pid=1104252)[0m     coll_type: COLL_DEFAULT
[36m(WorkerDict pid=1104252)[0m     msg_size_tuning_rules {
[36m(WorkerDict pid=1104252)[0m       per_rank_message_size {
[36m(WorkerDict pid=1104252)[0m         min: 0
[36m(WorkerDict pid=1104252)[0m         max: 65536
[36m(WorkerDict pid=1104252)[0m       }
[36m(WorkerDict pid=1104252)[0m       coll_tuning_spec {
[36m(WorkerDict pid=1104252)[0m         num_channel: 2
[36m(WorkerDict pid=1104252)[0m         protocol: PROTO_SIMPLE
[36m(WorkerDict pid=1104252)[0m         algorithm: ALGO_RING
[36m(WorkerDict pid=1104252)[0m       }
[36m(WorkerDict pid=1104252)[0m     }
[36m(WorkerDict pid=1104252)[0m     msg_size_tuning_rules {
[36m(WorkerDict pid=1104252)[0m       per_rank_message_size {
[36m(WorkerDict pid=1104252)[0m         min: 65536
[36m(WorkerDict pid=1104252)[0m       }
[36m(WorkerDict pid=1104252)[0m       coll_tuning_spec {
[36m(WorkerDict pid=1104252)[0m         num_channel: 4
[36m(WorkerDict pid=1104252)[0m         protocol: PROTO_SIMPLE
[36m(WorkerDict pid=1104252)[0m         algorithm: ALGO_RING
[36m(WorkerDict pid=1104252)[0m       }
[36m(WorkerDict pid=1104252)[0m     }
[36m(WorkerDict pid=1104252)[0m   }
[36m(WorkerDict pid=1104252)[0m }
[36m(WorkerDict pid=1104252)[0m communicator_conf
[36m(WorkerDict pid=1104252)[0m 
[36m(WorkerDict pid=1104252)[0m bolt-8xfg93i4zr-6csgcu35ry:1104252:1108935 [0] /nccl-tuner-config-based/src/tuner_tcpx.cc:70 NCCL WARN No communicator found for nRanks:1, nNodes:1 from config_path:/usr/local/nvidia/lib64/a3plus_tuner_config.textproto
[36m(WorkerDict pid=1104589)[0m 
[36m(WorkerDict pid=1104589)[0m 
[36m(WorkerDict pid=1104589)[0m 
[36m(WorkerDict pid=1104588)[0m 
[36m(WorkerDict pid=1104588)[0m 
[36m(WorkerDict pid=1104588)[0m 
[36m(WorkerDict pid=1104592)[0m 
[36m(WorkerDict pid=1104592)[0m 
[36m(WorkerDict pid=1104592)[0m 
[36m(WorkerDict pid=1104590)[0m 
[36m(WorkerDict pid=1104590)[0m 
[36m(WorkerDict pid=1104590)[0m 
[36m(WorkerDict pid=1104587)[0m 
[36m(WorkerDict pid=1104587)[0m 
[36m(WorkerDict pid=1104587)[0m 
[36m(WorkerDict pid=1104586)[0m 
[36m(WorkerDict pid=1104586)[0m 
[36m(WorkerDict pid=1104586)[0m 
[36m(WorkerDict pid=1104591)[0m 
[36m(WorkerDict pid=1104591)[0m 
[36m(WorkerDict pid=1104591)[0m 
[36m(TaskRunner pid=1092302)[0m Training Progress:   0%|          | 1/2226 [00:49<30:34:39, 49.47s/it]
[36m(WorkerDict pid=1104588)[0m /mnt/task_runtime/verl/verl/workers/rollout/sglang_rollout/utils.py:49: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at /pytorch/torch/csrc/utils/tensor_numpy.cpp:203.)[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=1104588)[0m   tensor_data = torch.ByteTensor(np.frombuffer(serialized_data, dtype=np.uint8)).to(device)[32m [repeated 7x across cluster][0m
[36m(TaskRunner pid=1092302)[0m first_prompt: class Solution(object): end1prompt
[36m(TaskRunner pid=1092302)[0m first_res: 
[36m(TaskRunner pid=1092302)[0m  endfirst
[36m(TaskRunner pid=1092302)[0m second_prompt:     def twoSum(self, nums, target): end2prompt
[36m(TaskRunner pid=1092302)[0m second_res:  # 中规中矩，没啥想的
[36m(TaskRunner pid=1092302)[0m         numDict = {}
[36m(TaskRunner pid=1092302)[0m         endsecond
[36m(TaskRunner pid=1092302)[0m third_prompt:         """
[36m(TaskRunner pid=1092302)[0m         :type nums: List[int]
[36m(TaskRunner pid=1092302)[0m         :type target: int
[36m(TaskRunner pid=1092302)[0m         :rtype: List[int]
[36m(TaskRunner pid=1092302)[0m         """
[36m(TaskRunner pid=1092302)[0m         n = len(nums) end3prompt
[36m(TaskRunner pid=1092302)[0m third_res:  -1
[36m(TaskRunner pid=1092302)[0m         findNumber = 0
[36m(TaskRunner pid=1092302)[0m         while n >= 0 endthird
[36m(TaskRunner pid=1092302)[0m fourth_prompt:         hashmap = {} end4prompt
[36m(TaskRunner pid=1092302)[0m fourth_res:   对于已找到的数字，直接利用dict={'value1':'key endfourth
[36m(TaskRunner pid=1092302)[0m fifth_prompt:         for i in range(n): end5prompt
[36m(TaskRunner pid=1092302)[0m fifth_res:         hashmap[nums[i]] = i        for i in nums:            if endfifth
[36m(TaskRunner pid=1092302)[0m six_prompt:             key = target - nums[i] endsix
[36m(TaskRunner pid=1092302)[0m six_res:             if key in hashmap:                 return [hashmap[key], hashmap[i]]
[36m(TaskRunner pid=1092302)[0m 
[36m(TaskRunner pid=1092302)[0m  endsix
[36m(TaskRunner pid=1092302)[0m seven_prompt:             if nums[i] in hashmap: end7prompt
[36m(TaskRunner pid=1092302)[0m seven_res: 
[36m(TaskRunner pid=1092302)[0m  endseven
[36m(TaskRunner pid=1092302)[0m step:1 - global_seqlen/min:115168 - global_seqlen/max:135141 - global_seqlen/minmax_diff:19973 - global_seqlen/balanced_min:123834 - global_seqlen/balanced_max:123835 - global_seqlen/mean:123834.5 - actor/entropy:2.067628860473633 - actor/pg_loss:0.18795119784772396 - actor/pg_clipfrac:0.006898004891506086 - actor/ppo_kl:-0.003316017168496425 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:1.4182147085666656 - perf/mfu/actor:0.22027565971262314 - perf/max_memory_allocated_gb:17.839139938354492 - perf/max_memory_reserved_gb:23.015625 - perf/cpu_memory_used_gb:86.96134567260742 - actor/lr:2e-06 - training/global_step:1 - training/epoch:0 - critic/rewards/mean:-1.4529918432235718 - critic/advantages/mean:-0.18733151257038116 - critic/advantages/max:1.154699683189392 - critic/advantages/min:-1.154699683189392 - critic/format_reward/mean:0.44599154591560364 - critic/skip_freq:0.9144516587257385 - response_length/mean:9.919376373291016 - response_length/max:16.18181800842285 - response_length/min:1.0 - response_length/think_response_length:115.9505386352539 - response_length/clip_ratio:0.0 - prompt_length/mean:27.728515625 - prompt_length/max:125.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0 - timing_s/start_profile:2.2088992409408092e-05 - timing_s/generate_sequences:33.138492584228516 - timing_s/reshard:0.726642906665802 - timing_s/gen:34.57138178101741 - timing_s/reward:0.5519627580652013 - timing_s/old_log_prob:4.0696837400319055 - timing_s/ref:2.551225333008915 - timing_s/adv:0.25025488797109574 - timing_s/update_actor:6.2638616289477795 - timing_s/step:48.340232167975046 - timing_s/stop_profile:2.738088369369507e-06 - timing_per_token_ms/update_actor:0.05416020258006294 - timing_per_token_ms/gen:1.134517391349663 - timing_per_token_ms/ref:0.022059057023959574 - timing_per_token_ms/adv:0.0021638178223043402 - perf/total_num_tokens:990676 - perf/time_per_step:48.340232167975046 - perf/throughput:2561.727456535453
[36m(TaskRunner pid=1092302)[0m global_steps 2
[36m(WorkerDict pid=1104588)[0m NCCL version 2.21.5+cuda12.4[32m [repeated 6x across cluster][0m
[36m(WorkerDict pid=1104591)[0m bolt-8xfg93i4zr-6csgcu35ry:1104591:1108927 [0] /nccl-tuner-config-based/src/config_based_tuner.cc:155 NCCL WARN Cannot find communicatorTunerConfig for communicator(num_node:1, num_rank:1) with config:communicator_configs {[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=1104591)[0m   node_range {[32m [repeated 14x across cluster][0m
[36m(WorkerDict pid=1104591)[0m         min: 65536[32m [repeated 70x across cluster][0m
[36m(WorkerDict pid=1104591)[0m         max: 65536[32m [repeated 42x across cluster][0m
[36m(WorkerDict pid=1104591)[0m }[32m [repeated 168x across cluster][0m
[36m(WorkerDict pid=1104591)[0m   rank_per_node_range {[32m [repeated 14x across cluster][0m
[36m(WorkerDict pid=1104591)[0m   coll_configs {[32m [repeated 28x across cluster][0m
[36m(WorkerDict pid=1104591)[0m     coll_type: COLL_ALL_REDUCE[32m [repeated 14x across cluster][0m
[36m(WorkerDict pid=1104591)[0m     msg_size_tuning_rules {[32m [repeated 42x across cluster][0m
[36m(WorkerDict pid=1104591)[0m       per_rank_message_size {[32m [repeated 42x across cluster][0m
[36m(WorkerDict pid=1104591)[0m       coll_tuning_spec {[32m [repeated 42x across cluster][0m
[36m(WorkerDict pid=1104591)[0m         num_channel: 4[32m [repeated 42x across cluster][0m
[36m(WorkerDict pid=1104591)[0m         protocol: PROTO_SIMPLE[32m [repeated 42x across cluster][0m
[36m(WorkerDict pid=1104591)[0m         algorithm: ALGO_TREE[32m [repeated 14x across cluster][0m
[36m(WorkerDict pid=1104591)[0m     coll_type: COLL_DEFAULT[32m [repeated 14x across cluster][0m
[36m(WorkerDict pid=1104591)[0m         algorithm: ALGO_RING[32m [repeated 21x across cluster][0m
[36m(WorkerDict pid=1104591)[0m         algorithm: AL[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=1104591)[0m bolt-8xfg93i4zr-6csgcu35ry:1104591:1108927 [0] /nccl-tuner-config-based/src/config_based_tuner.cc:271 NCCL WARN No communicator config selected from config:communicator_configs {[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=1104591)[0m communicator_conf[32m [repeated 7x across cluster][0m
[36m(WorkerDict pid=1104591)[0m bolt-8xfg93i4zr-6csgcu35ry:1104591:1108927 [0] /nccl-tuner-config-based/src/tuner_tcpx.cc:70 NCCL WARN No communicator found for nRanks:1, nNodes:1 from config_path:/usr/local/nvidia/lib64/a3plus_tuner_config.textproto[32m [repeated 7x across cluster][0m
[36m(TaskRunner pid=1092302)[0m Training Progress:   0%|          | 2/2226 [01:30<27:26:56, 44.43s/it]
[36m(TaskRunner pid=1092302)[0m first_prompt: 
[36m(TaskRunner pid=1092302)[0m '''
[36m(TaskRunner pid=1092302)[0m 
[36m(TaskRunner pid=1092302)[0m Given the root of a binary tree, return its maximum depth.
[36m(TaskRunner pid=1092302)[0m 
[36m(TaskRunner pid=1092302)[0m A binary tree's maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.
[36m(TaskRunner pid=1092302)[0m 
[36m(TaskRunner pid=1092302)[0m '''
[36m(TaskRunner pid=1092302)[0m 
[36m(TaskRunner pid=1092302)[0m class TreeNode: end1prompt
[36m(TaskRunner pid=1092302)[0m first_res:   # Código basado en EsteBot
[36m(TaskRunner pid=1092302)[0m     def __init__(self, endfirst
[36m(TaskRunner pid=1092302)[0m second_prompt:     def __init__(self, val): end2prompt
[36m(TaskRunner pid=1092302)[0m second_res: 
[36m(TaskRunner pid=1092302)[0m  endsecond
[36m(TaskRunner pid=1092302)[0m third_prompt:         self.left = None end3prompt
[36m(TaskRunner pid=1092302)[0m third_res: 
[36m(TaskRunner pid=1092302)[0m  endthird
[36m(TaskRunner pid=1092302)[0m fourth_prompt:         self.right = None end4prompt
[36m(TaskRunner pid=1092302)[0m fourth_res: 
[36m(TaskRunner pid=1092302)[0m  endfourth
[36m(TaskRunner pid=1092302)[0m fifth_prompt:         self.val = val end5prompt
[36m(TaskRunner pid=1092302)[0m fifth_res: 
[36m(TaskRunner pid=1092302)[0m  endfifth
[36m(TaskRunner pid=1092302)[0m six_prompt: 
[36m(TaskRunner pid=1092302)[0m 
[36m(TaskRunner pid=1092302)[0m 
[36m(TaskRunner pid=1092302)[0m class Solution: endsix
[36m(TaskRunner pid=1092302)[0m six_res:  # Código basado en SuelloDePiedra
[36m(TaskRunner pid=1092302)[0m     def max endsix
[36m(TaskRunner pid=1092302)[0m seven_prompt:     def maxDepth(self, root): end7prompt
[36m(TaskRunner pid=1092302)[0m seven_res: :
[36m(TaskRunner pid=1092302)[0m         return self.CalculateDepth(root, 0 )
[36m(TaskRunner pid=1092302)[0m 
[36m(TaskRunner pid=1092302)[0m     def CalculateDepth endseven
[36m(TaskRunner pid=1092302)[0m step:2 - global_seqlen/min:111710 - global_seqlen/max:122692 - global_seqlen/minmax_diff:10982 - global_seqlen/balanced_min:116716 - global_seqlen/balanced_max:116717 - global_seqlen/mean:116716.875 - actor/entropy:2.0476157665252686 - actor/pg_loss:0.2039135523761312 - actor/pg_clipfrac:0.008191844642472764 - actor/ppo_kl:-0.002529993628589485 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:1.3054791241884232 - perf/mfu/actor:0.21411763422491945 - perf/max_memory_allocated_gb:18.137521743774414 - perf/max_memory_reserved_gb:28.640625 - perf/cpu_memory_used_gb:87.25385284423828 - actor/lr:2e-06 - training/global_step:2 - training/epoch:0 - critic/rewards/mean:-1.4179397821426392 - critic/advantages/mean:-0.19827884435653687 - critic/advantages/max:1.154699683189392 - critic/advantages/min:-1.1546998023986816 - critic/format_reward/mean:0.4679982662200928 - critic/skip_freq:0.9182329177856445 - response_length/mean:9.491801261901855 - response_length/max:16.125 - response_length/min:1.0 - response_length/think_response_length:116.0833969116211 - response_length/clip_ratio:0.0 - prompt_length/mean:27.0849609375 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0009765625 - timing_s/start_profile:5.553942173719406e-06 - timing_s/generate_sequences:29.743953704833984 - timing_s/reshard:0.6567057967185974 - timing_s/gen:30.872540203039534 - timing_s/reward:0.5449655059492216 - timing_s/old_log_prob:1.4830075990175828 - timing_s/ref:1.4636628440348431 - timing_s/adv:0.2698001880198717 - timing_s/update_actor:6.04798251891043 - timing_s/step:40.77041159803048 - timing_s/stop_profile:2.763001248240471e-06 - timing_per_token_ms/update_actor:0.053825002768666565 - timing_per_token_ms/gen:1.058772204905105 - timing_per_token_ms/ref:0.01302610521545665 - timing_per_token_ms/adv:0.002401130595491958 - perf/total_num_tokens:933735 - perf/time_per_step:40.77041159803048 - perf/throughput:2862.783828398689
[36m(TaskRunner pid=1092302)[0m global_steps 3
[36m(TaskRunner pid=1092302)[0m first_prompt: # Definition for a binary tree node.
[36m(TaskRunner pid=1092302)[0m # class TreeNode:
[36m(TaskRunner pid=1092302)[0m #     def __init__(self, val=0, left=None, right=None):
[36m(TaskRunner pid=1092302)[0m #         self.val = val
[36m(TaskRunner pid=1092302)[0m #         self.left = left
[36m(TaskRunner pid=1092302)[0m #         self.right = right
[36m(TaskRunner pid=1092302)[0m class Solution: end1prompt
[36m(TaskRunner pid=1092302)[0m first_res:  # bfs level order traversal
[36m(TaskRunner pid=1092302)[0m     def findDuplicateSubtrees(self, root: endfirst
[36m(TaskRunner pid=1092302)[0m second_prompt:     def increasingBST(self, root: TreeNode) -> TreeNode: end2prompt
[36m(TaskRunner pid=1092302)[0m second_res: 
[36m(TaskRunner pid=1092302)[0m  endsecond
[36m(TaskRunner pid=1092302)[0m third_prompt:         orderedArray = [] end3prompt
[36m(TaskRunner pid=1092302)[0m third_res:     # use to output bst order
[36m(TaskRunner pid=1092302)[0m         level = []
[36m(TaskRunner pid=1092302)[0m         level.append(root endthird
[36m(TaskRunner pid=1092302)[0m fourth_prompt:         def helper(root): end4prompt
[36m(TaskRunner pid=1092302)[0m fourth_res:       # recursive helper function
[36m(TaskRunner pid=1092302)[0m             if root :      # condition check
[36m(TaskRunner pid=1092302)[0m                 endfourth
[36m(TaskRunner pid=1092302)[0m fifth_prompt:             if not root: end5prompt
[36m(TaskRunner pid=1092302)[0m fifth_res:  return None
[36m(TaskRunner pid=1092302)[0m                 newTree = TreeNode(root.val)
[36m(TaskRunner pid=1092302)[0m                 newTree.left = endfifth
[36m(TaskRunner pid=1092302)[0m six_prompt:                 return endsix
[36m(TaskRunner pid=1092302)[0m six_res:  newTree
[36m(TaskRunner pid=1092302)[0m                     
[36m(TaskRunner pid=1092302)[0m                 orderedArray.append(root)
[36m(TaskRunner pid=1092302)[0m                 When a duplicate root node is endsix
[36m(TaskRunner pid=1092302)[0m seven_prompt:             helper(root.left) end7prompt
[36m(TaskRunner pid=1092302)[0m seven_res:   # caller of helper function
[36m(TaskRunner pid=1092302)[0m                 
[36m(TaskRunner pid=1092302)[0m             leftLoop = helper(root.left)
[36m(TaskRunner pid=1092302)[0m             endseven
[36m(TaskRunner pid=1092302)[0m Training Progress:   0%|          | 3/2226 [02:10<26:16:37, 42.55s/it]
[36m(TaskRunner pid=1092302)[0m step:3 - global_seqlen/min:101686 - global_seqlen/max:115564 - global_seqlen/minmax_diff:13878 - global_seqlen/balanced_min:110077 - global_seqlen/balanced_max:110078 - global_seqlen/mean:110077.25 - actor/entropy:1.9816176891326904 - actor/pg_loss:0.19351148015509048 - actor/pg_clipfrac:0.015575204277411103 - actor/ppo_kl:-0.002310901438856187 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:1.5059763938188553 - perf/mfu/actor:0.2118706596696539 - perf/max_memory_allocated_gb:18.137521743774414 - perf/max_memory_reserved_gb:28.640625 - perf/cpu_memory_used_gb:87.40062713623047 - actor/lr:2e-06 - training/global_step:3 - training/epoch:0 - critic/rewards/mean:-1.324019193649292 - critic/advantages/mean:-0.21697117388248444 - critic/advantages/max:1.154699683189392 - critic/advantages/min:-1.1546999216079712 - critic/format_reward/mean:0.5205621123313904 - critic/skip_freq:0.9201540946960449 - response_length/mean:8.55321216583252 - response_length/max:16.0 - response_length/min:1.0 - response_length/think_response_length:107.12149047851562 - response_length/clip_ratio:0.0 - prompt_length/mean:28.6767578125 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0029296875 - timing_s/start_profile:6.171991117298603e-06 - timing_s/generate_sequences:29.52621078491211 - timing_s/reshard:0.8181232810020447 - timing_s/gen:30.739386555040255 - timing_s/reward:0.5502294750185683 - timing_s/old_log_prob:1.446419270010665 - timing_s/ref:1.3539661769755185 - timing_s/adv:0.27722540393006057 - timing_s/update_actor:5.761188677977771 - timing_s/step:40.194423048058525 - timing_s/stop_profile:3.1259842216968536e-06 - timing_per_token_ms/update_actor:0.050373045064245434 - timing_per_token_ms/gen:1.1698892656284288 - timing_per_token_ms/ref:0.011838424856481513 - timing_per_token_ms/adv:0.002423924739438375 - perf/total_num_tokens:880618 - perf/time_per_step:40.194423048058525 - perf/throughput:2738.6199789056795
[36m(TaskRunner pid=1092302)[0m global_steps 4
[36m(TaskRunner pid=1092302)[0m Training Progress:   0%|          | 4/2226 [02:53<26:13:08, 42.48s/it]
[36m(TaskRunner pid=1092302)[0m first_prompt: class Solution: end1prompt
[36m(TaskRunner pid=1092302)[0m first_res: 
[36m(TaskRunner pid=1092302)[0m  endfirst
[36m(TaskRunner pid=1092302)[0m second_prompt:     def wordBreak(self, s: str, wordDict: list) -> bool: end2prompt
[36m(TaskRunner pid=1092302)[0m second_res: 
[36m(TaskRunner pid=1092302)[0m  endsecond
[36m(TaskRunner pid=1092302)[0m third_prompt:         self.wordDict = {key:True for key in wordDict} end3prompt
[36m(TaskRunner pid=1092302)[0m third_res: 
[36m(TaskRunner pid=1092302)[0m  endthird
[36m(TaskRunner pid=1092302)[0m fourth_prompt:         self.checked = {} end4prompt
[36m(TaskRunner pid=1092302)[0m fourth_res: 
[36m(TaskRunner pid=1092302)[0m  endfourth
[36m(TaskRunner pid=1092302)[0m fifth_prompt:         return self.recursive(s) end5prompt
[36m(TaskRunner pid=1092302)[0m fifth_res: 
[36m(TaskRunner pid=1092302)[0m  endfifth
[36m(TaskRunner pid=1092302)[0m six_prompt:         
[36m(TaskRunner pid=1092302)[0m     def recursive(self, string): endsix
[36m(TaskRunner pid=1092302)[0m six_res: 
[36m(TaskRunner pid=1092302)[0m  endsix
[36m(TaskRunner pid=1092302)[0m seven_prompt:         if not string: return True end7prompt
[36m(TaskRunner pid=1092302)[0m seven_res: 
[36m(TaskRunner pid=1092302)[0m  endseven
[36m(TaskRunner pid=1092302)[0m step:4 - global_seqlen/min:99706 - global_seqlen/max:117009 - global_seqlen/minmax_diff:17303 - global_seqlen/balanced_min:107555 - global_seqlen/balanced_max:107556 - global_seqlen/mean:107555.375 - actor/entropy:1.8105411529541016 - actor/pg_loss:0.2442706630875667 - actor/pg_clipfrac:0.011783160269260406 - actor/ppo_kl:-0.0031977288693572823 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:2.178717225790024 - perf/mfu/actor:0.21252552283299178 - perf/max_memory_allocated_gb:18.137521743774414 - perf/max_memory_reserved_gb:33.498046875 - perf/cpu_memory_used_gb:87.59949493408203 - actor/lr:2e-06 - training/global_step:4 - training/epoch:0 - critic/rewards/mean:-1.1666293144226074 - critic/advantages/mean:-0.25125038623809814 - critic/advantages/max:1.154699683189392 - critic/advantages/min:-1.1547001600265503 - critic/format_reward/mean:0.6027792096138 - critic/skip_freq:0.9253051280975342 - response_length/mean:6.930633544921875 - response_length/max:16.0 - response_length/min:1.0 - response_length/think_response_length:92.78594207763672 - response_length/clip_ratio:0.0 - prompt_length/mean:28.70703125 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0009765625 - timing_s/start_profile:5.392939783632755e-06 - timing_s/generate_sequences:31.885765075683594 - timing_s/reshard:0.7647064328193665 - timing_s/gen:33.04421254200861 - timing_s/reward:0.5404949689982459 - timing_s/old_log_prob:1.3893189439550042 - timing_s/ref:1.30924885510467 - timing_s/adv:0.270868830033578 - timing_s/update_actor:5.617784220026806 - timing_s/step:42.24002142099198 - timing_s/stop_profile:2.969987690448761e-06 - timing_per_token_ms/update_actor:0.05131385042519829 - timing_per_token_ms/gen:1.5520341010382595 - timing_per_token_ms/ref:0.011958914278107066 - timing_per_token_ms/adv:0.002474164561116795 - perf/total_num_tokens:860443 - perf/time_per_step:42.24002142099198 - perf/throughput:2546.2907304906885
[36m(TaskRunner pid=1092302)[0m global_steps 5
[36m(TaskRunner pid=1092302)[0m Training Progress:   0%|          | 5/2226 [03:37<26:37:05, 43.15s/it]
[36m(TaskRunner pid=1092302)[0m first_prompt: # Problem Id:  539
[36m(TaskRunner pid=1092302)[0m # Problem Name:  Minimum Time Difference, 最小时间差
[36m(TaskRunner pid=1092302)[0m # Problem Url:  https://leetcode-cn.com/problems/minimum-time-difference/
[36m(TaskRunner pid=1092302)[0m # Problem Level:  Medium
[36m(TaskRunner pid=1092302)[0m # Language:  Python3
[36m(TaskRunner pid=1092302)[0m  
[36m(TaskRunner pid=1092302)[0m class Solution: end1prompt
[36m(TaskRunner pid=1092302)[0m first_res: 
[36m(TaskRunner pid=1092302)[0m  endfirst
[36m(TaskRunner pid=1092302)[0m second_prompt:     def findMinDifference(self, timePoints: List[str]) -> int: end2prompt
[36m(TaskRunner pid=1092302)[0m second_res: 
[36m(TaskRunner pid=1092302)[0m  endsecond
[36m(TaskRunner pid=1092302)[0m third_prompt:         timePoints.sort(key=lambda x:int(x[:x.find(':')])*60+int(x[(x.find(':')+1):])) end3prompt
[36m(TaskRunner pid=1092302)[0m third_res: 
[36m(TaskRunner pid=1092302)[0m  endthird
[36m(TaskRunner pid=1092302)[0m fourth_prompt:         res = float("inf") end4prompt
[36m(TaskRunner pid=1092302)[0m fourth_res: 
[36m(TaskRunner pid=1092302)[0m  endfourth
[36m(TaskRunner pid=1092302)[0m fifth_prompt:         for i in range(len(timePoints)-1): end5prompt
[36m(TaskRunner pid=1092302)[0m fifth_res: 
[36m(TaskRunner pid=1092302)[0m  endfifth
[36m(TaskRunner pid=1092302)[0m six_prompt:             f = timePoints[i] endsix
[36m(TaskRunner pid=1092302)[0m six_res:  + min(60+timePoints[i+1] - timePoints[i endsix
[36m(TaskRunner pid=1092302)[0m seven_prompt:             s = timePoints[i+1] end7prompt
[36m(TaskRunner pid=1092302)[0m seven_res:  - timePoints[i]
[36m(TaskRunner pid=1092302)[0m                                     - 60*timePoints[i])
[36m(TaskRunner pid=1092302)[0m             res endseven
[36m(TaskRunner pid=1092302)[0m step:5 - global_seqlen/min:97500 - global_seqlen/max:102986 - global_seqlen/minmax_diff:5486 - global_seqlen/balanced_min:99620 - global_seqlen/balanced_max:99621 - global_seqlen/mean:99620.25 - actor/entropy:1.7493098974227905 - actor/pg_loss:0.28591765463352203 - actor/pg_clipfrac:0.025097313763884205 - actor/ppo_kl:-0.0036507275047673224 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:2.9793761372566223 - perf/mfu/actor:0.20603208204136922 - perf/max_memory_allocated_gb:18.137521743774414 - perf/max_memory_reserved_gb:33.498046875 - perf/cpu_memory_used_gb:87.77886962890625 - actor/lr:2e-06 - training/global_step:5 - training/epoch:0 - critic/rewards/mean:-1.0663124322891235 - critic/advantages/mean:-0.2753005623817444 - critic/advantages/max:1.154699683189392 - critic/advantages/min:-1.154699683189392 - critic/format_reward/mean:0.6490764617919922 - critic/skip_freq:0.9224273562431335 - response_length/mean:6.021976947784424 - response_length/max:16.0 - response_length/min:1.0 - response_length/think_response_length:77.6301498413086 - response_length/clip_ratio:0.0 - prompt_length/mean:29.0322265625 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0009765625 - timing_s/start_profile:6.5229833126068115e-06 - timing_s/generate_sequences:34.177677154541016 - timing_s/reshard:0.8653489947319031 - timing_s/gen:35.44699224899523 - timing_s/reward:0.5198915629880503 - timing_s/old_log_prob:1.3104732460342348 - timing_s/ref:1.2315944009460509 - timing_s/adv:0.2657465620432049 - timing_s/update_actor:5.3545933259883896 - timing_s/step:44.1980273029767 - timing_s/stop_profile:2.4550827220082283e-06 - timing_per_token_ms/update_actor:0.049723898967553574 - timing_per_token_ms/gen:1.91610400563587 - timing_per_token_ms/ref:0.011436849044057337 - timing_per_token_ms/adv:0.0024677794180703537 - perf/total_num_tokens:796962 - perf/time_per_step:44.1980273029767 - perf/throughput:2253.9524064525535
[36m(TaskRunner pid=1092302)[0m global_steps 6
[36m(TaskRunner pid=1092302)[0m Training Progress:   0%|          | 6/2226 [04:20<26:41:59, 43.30s/it]
[36m(TaskRunner pid=1092302)[0m error!! index 6 is out of bounds for dimension 0 with size 6
[36m(TaskRunner pid=1092302)[0m step:6 - global_seqlen/min:82834 - global_seqlen/max:94737 - global_seqlen/minmax_diff:11903 - global_seqlen/balanced_min:90320 - global_seqlen/balanced_max:90321 - global_seqlen/mean:90320.875 - actor/entropy:1.6155965328216553 - actor/pg_loss:0.30230105854570866 - actor/pg_clipfrac:0.028030847664922476 - actor/ppo_kl:-0.0064650854231634485 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:3.6639628410339355 - perf/mfu/actor:0.18715798849647677 - perf/max_memory_allocated_gb:18.137521743774414 - perf/max_memory_reserved_gb:33.498046875 - perf/cpu_memory_used_gb:87.93092346191406 - actor/lr:2e-06 - training/global_step:6 - training/epoch:0 - critic/rewards/mean:-0.9351091384887695 - critic/advantages/mean:-0.30392640829086304 - critic/advantages/max:1.154699683189392 - critic/advantages/min:-1.1547001600265503 - critic/format_reward/mean:0.7125235199928284 - critic/skip_freq:0.9223055839538574 - response_length/mean:4.729698657989502 - response_length/max:16.0 - response_length/min:1.0 - response_length/think_response_length:60.87565994262695 - response_length/clip_ratio:0.0 - prompt_length/mean:27.376953125 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0009765625 - timing_s/start_profile:6.2229810282588005e-06 - timing_s/generate_sequences:33.757652282714844 - timing_s/reshard:0.6933053731918335 - timing_s/gen:34.85117798799183 - timing_s/reward:0.48387125600129366 - timing_s/old_log_prob:1.2292364949826151 - timing_s/ref:1.1930600890191272 - timing_s/adv:0.2721195670310408 - timing_s/update_actor:5.339810857083648 - timing_s/step:43.43800217600074 - timing_s/stop_profile:3.185938112437725e-06 - timing_per_token_ms/update_actor:0.05413892682375649 - timing_per_token_ms/gen:2.3986272573378544 - timing_per_token_ms/ref:0.012096119990854408 - timing_per_token_ms/adv:0.0027589481577352873 - perf/total_num_tokens:722567 - perf/time_per_step:43.43800217600074 - perf/throughput:2079.305457788798
[36m(TaskRunner pid=1092302)[0m global_steps 7
[36m(TaskRunner pid=1092302)[0m Training Progress:   0%|          | 7/2226 [05:04<26:40:56, 43.29s/it]
[36m(TaskRunner pid=1092302)[0m first_prompt: 
[36m(TaskRunner pid=1092302)[0m Write a python function to find the length of the longest substring without repeating characters.
[36m(TaskRunner pid=1092302)[0m 
[36m(TaskRunner pid=1092302)[0m ```python
[36m(TaskRunner pid=1092302)[0m def length_of_Longest_Substring(s): end1prompt
[36m(TaskRunner pid=1092302)[0m first_res: 
[36m(TaskRunner pid=1092302)[0m  endfirst
[36m(TaskRunner pid=1092302)[0m second_prompt:     char_map = {} end2prompt
[36m(TaskRunner pid=1092302)[0m second_res: 
[36m(TaskRunner pid=1092302)[0m  endsecond
[36m(TaskRunner pid=1092302)[0m third_prompt:     left = 0 end3prompt
[36m(TaskRunner pid=1092302)[0m third_res: 
[36m(TaskRunner pid=1092302)[0m  endthird
[36m(TaskRunner pid=1092302)[0m fourth_prompt:     max_length = 0 end4prompt
[36m(TaskRunner pid=1092302)[0m fourth_res: 
[36m(TaskRunner pid=1092302)[0m  endfourth
[36m(TaskRunner pid=1092302)[0m fifth_prompt:     for right in range(len(s)): end5prompt
[36m(TaskRunner pid=1092302)[0m fifth_res: 
[36m(TaskRunner pid=1092302)[0m  endfifth
[36m(TaskRunner pid=1092302)[0m six_prompt:         if s[right] in char_map: endsix
[36m(TaskRunner pid=1092302)[0m six_res: 
[36m(TaskRunner pid=1092302)[0m  endsix
[36m(TaskRunner pid=1092302)[0m seven_prompt:             left = max(left, char_map[s[right]] + 1) end7prompt
[36m(TaskRunner pid=1092302)[0m seven_res: 
[36m(TaskRunner pid=1092302)[0m  endseven
[36m(TaskRunner pid=1092302)[0m step:7 - global_seqlen/min:79885 - global_seqlen/max:93360 - global_seqlen/minmax_diff:13475 - global_seqlen/balanced_min:88191 - global_seqlen/balanced_max:88191 - global_seqlen/mean:88191.0 - actor/entropy:1.5079759359359741 - actor/pg_loss:0.2758260952929656 - actor/pg_clipfrac:0.030990489137669403 - actor/ppo_kl:-0.007068664034401688 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:4.52845686674118 - perf/mfu/actor:0.18753733331212752 - perf/max_memory_allocated_gb:18.137521743774414 - perf/max_memory_reserved_gb:33.498046875 - perf/cpu_memory_used_gb:87.94829177856445 - actor/lr:2e-06 - training/global_step:7 - training/epoch:0 - critic/rewards/mean:-0.8438882827758789 - critic/advantages/mean:-0.2931373119354248 - critic/advantages/max:1.154699683189392 - critic/advantages/min:-1.1546998023986816 - critic/format_reward/mean:0.7513408064842224 - critic/skip_freq:0.9263871908187866 - response_length/mean:3.803790330886841 - response_length/max:16.0 - response_length/min:1.0 - response_length/think_response_length:51.672943115234375 - response_length/clip_ratio:0.0 - prompt_length/mean:30.01171875 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.001953125 - timing_s/start_profile:5.8979494497179985e-06 - timing_s/generate_sequences:33.45545196533203 - timing_s/reshard:0.7761943340301514 - timing_s/gen:34.70866396895144 - timing_s/reward:0.4892267690738663 - timing_s/old_log_prob:1.2340700889471918 - timing_s/ref:1.1638206109637395 - timing_s/adv:0.2735838609514758 - timing_s/update_actor:5.2004872389370576 - timing_s/step:43.138353766989894 - timing_s/stop_profile:2.6510097086429596e-06 - timing_per_token_ms/update_actor:0.05006184977816698 - timing_per_token_ms/gen:2.970298570680527 - timing_per_token_ms/ref:0.011203375744983039 - timing_per_token_ms/adv:0.0026336213357352825 - perf/total_num_tokens:705528 - perf/time_per_step:43.138353766989894 - perf/throughput:2044.375649482597
[36m(TaskRunner pid=1092302)[0m global_steps 8
[36m(TaskRunner pid=1092302)[0m error!! index 1 is out of bounds for dimension 0 with size 1
[36m(TaskRunner pid=1092302)[0m Training Progress:   0%|          | 8/2226 [05:46<26:24:52, 42.87s/it]
[36m(TaskRunner pid=1092302)[0m step:8 - global_seqlen/min:76629 - global_seqlen/max:89619 - global_seqlen/minmax_diff:12990 - global_seqlen/balanced_min:81851 - global_seqlen/balanced_max:81852 - global_seqlen/mean:81851.5 - actor/entropy:1.4100350141525269 - actor/pg_loss:0.2921353255709012 - actor/pg_clipfrac:0.04180135562395056 - actor/ppo_kl:-0.010031320940470323 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:5.791079163551331 - perf/mfu/actor:0.1735491739853203 - perf/max_memory_allocated_gb:18.137521743774414 - perf/max_memory_reserved_gb:33.498046875 - perf/cpu_memory_used_gb:88.15481567382812 - actor/lr:2e-06 - training/global_step:8 - training/epoch:0 - critic/rewards/mean:-0.7555336952209473 - critic/advantages/mean:-0.2861785292625427 - critic/advantages/max:1.154699683189392 - critic/advantages/min:-1.1546998023986816 - critic/format_reward/mean:0.7939789295196533 - critic/skip_freq:0.9379560947418213 - response_length/mean:3.0528042316436768 - response_length/max:16.0 - response_length/min:1.0 - response_length/think_response_length:49.20393371582031 - response_length/clip_ratio:0.0 - prompt_length/mean:29.5576171875 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0009765625 - timing_s/start_profile:6.381073035299778e-06 - timing_s/generate_sequences:32.38823699951172 - timing_s/reshard:0.6662633419036865 - timing_s/gen:33.46779215603601 - timing_s/reward:0.4912773319520056 - timing_s/old_log_prob:1.165204456076026 - timing_s/ref:1.1557680390542373 - timing_s/adv:0.28286111005581915 - timing_s/update_actor:5.205233635962941 - timing_s/step:41.83951300999615 - timing_s/stop_profile:2.746935933828354e-06 - timing_per_token_ms/update_actor:0.05195921772876308 - timing_per_token_ms/gen:3.5686740721599297 - timing_per_token_ms/ref:0.011537004366194068 - timing_per_token_ms/adv:0.00282355087826351 - perf/total_num_tokens:654812 - perf/time_per_step:41.83951300999615 - perf/throughput:1956.3205714283606
[36m(TaskRunner pid=1092302)[0m global_steps 9
[36m(TaskRunner pid=1092302)[0m Training Progress:   0%|          | 9/2226 [06:27<26:02:05, 42.28s/it]
[36m(TaskRunner pid=1092302)[0m first_prompt: class Solution: end1prompt
[36m(TaskRunner pid=1092302)[0m first_res: 
[36m(TaskRunner pid=1092302)[0m  endfirst
[36m(TaskRunner pid=1092302)[0m second_prompt:     def DFS(self,sv,graph,color): end2prompt
[36m(TaskRunner pid=1092302)[0m second_res: 
[36m(TaskRunner pid=1092302)[0m  endsecond
[36m(TaskRunner pid=1092302)[0m third_prompt:         
[36m(TaskRunner pid=1092302)[0m         for sib in graph[sv]: end3prompt
[36m(TaskRunner pid=1092302)[0m third_res: 
[36m(TaskRunner pid=1092302)[0m  endthird
[36m(TaskRunner pid=1092302)[0m fourth_prompt:             if color[sib] == -1: end4prompt
[36m(TaskRunner pid=1092302)[0m fourth_res: 
[36m(TaskRunner pid=1092302)[0m  endfourth
[36m(TaskRunner pid=1092302)[0m fifth_prompt:                 color[sib] = 1 - color[sv] end5prompt
[36m(TaskRunner pid=1092302)[0m fifth_res: 
[36m(TaskRunner pid=1092302)[0m  endfifth
[36m(TaskRunner pid=1092302)[0m six_prompt:                 if self.DFS(sib,graph,color): endsix
[36m(TaskRunner pid=1092302)[0m six_res: 
[36m(TaskRunner pid=1092302)[0m  endsix
[36m(TaskRunner pid=1092302)[0m seven_prompt:                     return True end7prompt
[36m(TaskRunner pid=1092302)[0m seven_res: 
[36m(TaskRunner pid=1092302)[0m  endseven
[36m(TaskRunner pid=1092302)[0m step:9 - global_seqlen/min:74290 - global_seqlen/max:86334 - global_seqlen/minmax_diff:12044 - global_seqlen/balanced_min:79980 - global_seqlen/balanced_max:79981 - global_seqlen/mean:79980.875 - actor/entropy:1.3653318881988525 - actor/pg_loss:0.18238856053600708 - actor/pg_clipfrac:0.036172045045532286 - actor/ppo_kl:-0.0018369689635922744 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:4.4641135931015015 - perf/mfu/actor:0.17018900177414661 - perf/max_memory_allocated_gb:18.137521743774414 - perf/max_memory_reserved_gb:33.498046875 - perf/cpu_memory_used_gb:88.19454956054688 - actor/lr:2e-06 - training/global_step:9 - training/epoch:0 - critic/rewards/mean:-0.7464356422424316 - critic/advantages/mean:-0.24866056442260742 - critic/advantages/max:1.154699683189392 - critic/advantages/min:-1.1547000408172607 - critic/format_reward/mean:0.7943429350852966 - critic/skip_freq:0.9382324814796448 - response_length/mean:2.65417218208313 - response_length/max:16.0 - response_length/min:1.0 - response_length/think_response_length:42.97035598754883 - response_length/clip_ratio:0.0 - prompt_length/mean:29.4619140625 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0029296875 - timing_s/start_profile:5.853944458067417e-06 - timing_s/generate_sequences:31.25897789001465 - timing_s/reshard:0.8240317702293396 - timing_s/gen:32.48362006107345 - timing_s/reward:0.48772995301987976 - timing_s/old_log_prob:1.156375179067254 - timing_s/ref:1.0892669099848717 - timing_s/adv:0.2759235789999366 - timing_s/update_actor:5.192925284965895 - timing_s/step:40.754739635041915 - timing_s/stop_profile:3.054039552807808e-06 - timing_per_token_ms/update_actor:0.052634226895188416 - timing_per_token_ms/gen:3.9839523072240954 - timing_per_token_ms/ref:0.011040544306606764 - timing_per_token_ms/adv:0.0027966942457001843 - perf/total_num_tokens:639847 - perf/time_per_step:40.754739635041915 - perf/throughput:1962.4926012588362
[36m(TaskRunner pid=1092302)[0m global_steps 10
[36m(TaskRunner pid=1092302)[0m Training Progress:   0%|          | 10/2226 [07:12<26:30:53, 43.07s/it]
[36m(TaskRunner pid=1092302)[0m first_prompt: 
[36m(TaskRunner pid=1092302)[0m Write a function that takes a list of integers and returns a new list with only the prime numbers from the original list.
[36m(TaskRunner pid=1092302)[0m 
[36m(TaskRunner pid=1092302)[0m A prime number is a natural number greater than 1 that has no positive divisors other than 1 and itself.
[36m(TaskRunner pid=1092302)[0m 
[36m(TaskRunner pid=1092302)[0m ```python end1prompt
[36m(TaskRunner pid=1092302)[0m first_res: 
[36m(TaskRunner pid=1092302)[0m  endfirst
[36m(TaskRunner pid=1092302)[0m second_prompt: def is_prime(num): end2prompt
[36m(TaskRunner pid=1092302)[0m second_res: 
[36m(TaskRunner pid=1092302)[0m  endsecond
[36m(TaskRunner pid=1092302)[0m third_prompt:     if num < 2: end3prompt
[36m(TaskRunner pid=1092302)[0m third_res: 
[36m(TaskRunner pid=1092302)[0m  endthird
[36m(TaskRunner pid=1092302)[0m fourth_prompt:         return False end4prompt
[36m(TaskRunner pid=1092302)[0m fourth_res: 
[36m(TaskRunner pid=1092302)[0m  endfourth
[36m(TaskRunner pid=1092302)[0m fifth_prompt:     for i in range(2, int(num**0.5) + 1): end5prompt
[36m(TaskRunner pid=1092302)[0m fifth_res: 
[36m(TaskRunner pid=1092302)[0m  endfifth
[36m(TaskRunner pid=1092302)[0m six_prompt:         if num % i == 0: endsix
[36m(TaskRunner pid=1092302)[0m six_res: 
[36m(TaskRunner pid=1092302)[0m  endsix
[36m(TaskRunner pid=1092302)[0m seven_prompt:             return False end7prompt
[36m(TaskRunner pid=1092302)[0m seven_res: 
[36m(TaskRunner pid=1092302)[0m  endseven
[36m(TaskRunner pid=1092302)[0m step:10 - global_seqlen/min:73084 - global_seqlen/max:83489 - global_seqlen/minmax_diff:10405 - global_seqlen/balanced_min:77189 - global_seqlen/balanced_max:77190 - global_seqlen/mean:77189.375 - actor/entropy:1.2962216138839722 - actor/pg_loss:0.22897708710903922 - actor/pg_clipfrac:0.04555249493569136 - actor/ppo_kl:-0.0021895698349302015 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:5.119545102119446 - perf/mfu/actor:0.1729851617509924 - perf/max_memory_allocated_gb:18.137521743774414 - perf/max_memory_reserved_gb:33.498046875 - perf/cpu_memory_used_gb:88.40670776367188 - actor/lr:2e-06 - training/global_step:10 - training/epoch:0 - critic/rewards/mean:-0.7294471859931946 - critic/advantages/mean:-0.2120867818593979 - critic/advantages/max:1.154699683189392 - critic/advantages/min:-1.154699683189392 - critic/format_reward/mean:0.8005685806274414 - critic/skip_freq:0.9416553378105164 - response_length/mean:2.2857186794281006 - response_length/max:16.0 - response_length/min:1.0 - response_length/think_response_length:39.176143646240234 - response_length/clip_ratio:0.0 - prompt_length/mean:27.447265625 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.001953125 - timing_s/start_profile:5.5300770327448845e-06 - timing_s/generate_sequences:34.79479217529297 - timing_s/reshard:0.5678768754005432 - timing_s/gen:36.22501008503605 - timing_s/reward:0.4709656899794936 - timing_s/old_log_prob:1.1856816440122202 - timing_s/ref:1.1011693999171257 - timing_s/adv:0.2626115520251915 - timing_s/update_actor:4.9313436060911044 - timing_s/step:44.73661124298815 - timing_s/stop_profile:2.966029569506645e-06 - timing_per_token_ms/update_actor:0.053989033168730716 - timing_per_token_ms/gen:5.158987922057073 - timing_per_token_ms/ref:0.012055755186696814 - timing_per_token_ms/adv:0.002875107663409894 - perf/total_num_tokens:617515 - perf/time_per_step:44.73661124298815 - perf/throughput:1725.4184627607076
[36m(TaskRunner pid=1092302)[0m global_steps 11
[36m(TaskRunner pid=1092302)[0m Training Progress:   0%|          | 11/2226 [07:58<27:11:50, 44.20s/it]
[36m(TaskRunner pid=1092302)[0m first_prompt: class Solution: end1prompt
[36m(TaskRunner pid=1092302)[0m first_res: 
[36m(TaskRunner pid=1092302)[0m  endfirst
[36m(TaskRunner pid=1092302)[0m second_prompt:     def lengthOfLongestSubstring(self, s: str) -> int: end2prompt
[36m(TaskRunner pid=1092302)[0m second_res: 
[36m(TaskRunner pid=1092302)[0m  endsecond
[36m(TaskRunner pid=1092302)[0m third_prompt:         maxlen = 0 end3prompt
[36m(TaskRunner pid=1092302)[0m third_res: 
[36m(TaskRunner pid=1092302)[0m  endthird
[36m(TaskRunner pid=1092302)[0m fourth_prompt:         for i in range(len(s)): end4prompt
[36m(TaskRunner pid=1092302)[0m fourth_res: 
[36m(TaskRunner pid=1092302)[0m  endfourth
[36m(TaskRunner pid=1092302)[0m fifth_prompt:             for j in range(i, len(s)+1): end5prompt
[36m(TaskRunner pid=1092302)[0m fifth_res: 
[36m(TaskRunner pid=1092302)[0m  endfifth
[36m(TaskRunner pid=1092302)[0m six_prompt:                 if self.isUnique(s[i:j]): endsix
[36m(TaskRunner pid=1092302)[0m six_res: 
[36m(TaskRunner pid=1092302)[0m  endsix
[36m(TaskRunner pid=1092302)[0m seven_prompt:                     maxlen = max(maxlen, len(s[i:j])) end7prompt
[36m(TaskRunner pid=1092302)[0m seven_res: 
[36m(TaskRunner pid=1092302)[0m  endseven
[36m(TaskRunner pid=1092302)[0m step:11 - global_seqlen/min:70307 - global_seqlen/max:83670 - global_seqlen/minmax_diff:13363 - global_seqlen/balanced_min:75889 - global_seqlen/balanced_max:75890 - global_seqlen/mean:75889.375 - actor/entropy:1.216261863708496 - actor/pg_loss:0.14576054991630372 - actor/pg_clipfrac:0.03834811396275958 - actor/ppo_kl:0.0024050667610329888 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:4.621256440877914 - perf/mfu/actor:0.16424546546841157 - perf/max_memory_allocated_gb:18.137521743774414 - perf/max_memory_reserved_gb:33.498046875 - perf/cpu_memory_used_gb:88.5745849609375 - actor/lr:2e-06 - training/global_step:11 - training/epoch:0 - critic/rewards/mean:-0.7660916447639465 - critic/advantages/mean:-0.16911004483699799 - critic/advantages/max:1.154699683189392 - critic/advantages/min:-1.154699683189392 - critic/format_reward/mean:0.7816791534423828 - critic/skip_freq:0.9548622369766235 - response_length/mean:1.9362870454788208 - response_length/max:10.0 - response_length/min:1.0 - response_length/think_response_length:42.89727783203125 - response_length/clip_ratio:0.0 - prompt_length/mean:28.7998046875 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0009765625 - timing_s/start_profile:5.607027560472488e-06 - timing_s/generate_sequences:37.35765075683594 - timing_s/reshard:0.6374967694282532 - timing_s/gen:38.58908487809822 - timing_s/reward:0.4598727960838005 - timing_s/old_log_prob:1.1147208720212802 - timing_s/ref:1.0364643329521641 - timing_s/adv:0.26342914800625294 - timing_s/update_actor:5.10025283601135 - timing_s/step:46.63254355196841 - timing_s/stop_profile:3.0460068956017494e-06 - timing_per_token_ms/update_actor:0.05401592907992689 - timing_per_token_ms/gen:6.48744246811564 - timing_per_token_ms/ref:0.010977021277714013 - timing_per_token_ms/adv:0.0027899342706741957 - perf/total_num_tokens:607115 - perf/time_per_step:46.63254355196841 - perf/throughput:1627.390856675598
[36m(TaskRunner pid=1092302)[0m global_steps 12
[36m(TaskRunner pid=1092302)[0m first_prompt: class Solution: end1prompt
[36m(TaskRunner pid=1092302)[0m first_res: 
[36m(TaskRunner pid=1092302)[0m  endfirst
[36m(TaskRunner pid=1092302)[0m second_prompt:     def furthestBuilding(self, heights: List[int], bricks: int, ladders: int) -> int: end2prompt
[36m(TaskRunner pid=1092302)[0m second_res: 
[36m(TaskRunner pid=1092302)[0m  endsecond
[36m(TaskRunner pid=1092302)[0m third_prompt:         buildHeight = [] end3prompt
[36m(TaskRunner pid=1092302)[0m third_res: 
[36m(TaskRunner pid=1092302)[0m  endthird
[36m(TaskRunner pid=1092302)[0m fourth_prompt:         n = len(heights) end4prompt
[36m(TaskRunner pid=1092302)[0m fourth_res: 
[36m(TaskRunner pid=1092302)[0m  endfourth
[36m(TaskRunner pid=1092302)[0m fifth_prompt:         
[36m(TaskRunner pid=1092302)[0m         for i in range(n - 1): end5prompt
[36m(TaskRunner pid=1092302)[0m fifth_res: 
[36m(TaskRunner pid=1092302)[0m  endfifth
[36m(TaskRunner pid=1092302)[0m six_prompt:             heightDiff = heights[i + 1] - heights[i] endsix
[36m(TaskRunner pid=1092302)[0m six_res: 
[36m(TaskRunner pid=1092302)[0m  endsix
[36m(TaskRunner pid=1092302)[0m seven_prompt:             if heightDiff <= 0: end7prompt
[36m(TaskRunner pid=1092302)[0m seven_res: 
[36m(TaskRunner pid=1092302)[0m  endseven
[36m(TaskRunner pid=1092302)[0m Training Progress:   1%|          | 12/2226 [08:43<27:17:07, 44.37s/it]
[36m(TaskRunner pid=1092302)[0m step:12 - global_seqlen/min:72583 - global_seqlen/max:79292 - global_seqlen/minmax_diff:6709 - global_seqlen/balanced_min:76086 - global_seqlen/balanced_max:76087 - global_seqlen/mean:76086.875 - actor/entropy:1.178438663482666 - actor/pg_loss:0.15662087981278697 - actor/pg_clipfrac:0.049078437383286655 - actor/ppo_kl:0.0035601902224395112 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:4.720151662826538 - perf/mfu/actor:0.12964989303803456 - perf/max_memory_allocated_gb:18.137521743774414 - perf/max_memory_reserved_gb:33.498046875 - perf/cpu_memory_used_gb:88.574951171875 - actor/lr:2e-06 - training/global_step:12 - training/epoch:0 - critic/rewards/mean:-0.8220405578613281 - critic/advantages/mean:-0.13654008507728577 - critic/advantages/max:1.154699683189392 - critic/advantages/min:-1.1546998023986816 - critic/format_reward/mean:0.7544496655464172 - critic/skip_freq:0.9561595916748047 - response_length/mean:1.772297978401184 - response_length/max:13.0 - response_length/min:1.0 - response_length/think_response_length:40.42612838745117 - response_length/clip_ratio:0.0 - prompt_length/mean:28.439453125 - prompt_length/max:126.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0 - timing_s/start_profile:5.976995453238487e-06 - timing_s/generate_sequences:33.81711959838867 - timing_s/reshard:0.6390745639801025 - timing_s/gen:35.125170400948264 - timing_s/reward:0.45706128992605954 - timing_s/old_log_prob:1.1796360859880224 - timing_s/ref:1.0348974560620263 - timing_s/adv:0.2669870560057461 - timing_s/update_actor:6.477194285020232 - timing_s/step:44.6071573930094 - timing_s/stop_profile:2.9639340937137604e-06 - timing_per_token_ms/update_actor:0.06978945614016857 - timing_per_token_ms/gen:6.451496657377742 - timing_per_token_ms/ref:0.011150650643048793 - timing_per_token_ms/adv:0.0028766902172747697 - perf/total_num_tokens:608695 - perf/time_per_step:44.6071573930094 - perf/throughput:1705.7100126251025
[36m(TaskRunner pid=1092302)[0m global_steps 13
[36m(TaskRunner pid=1092302)[0m Training Progress:   1%|          | 13/2226 [09:27<27:12:01, 44.25s/it]
[36m(TaskRunner pid=1092302)[0m first_prompt: class Solution(object): end1prompt
[36m(TaskRunner pid=1092302)[0m first_res: 
[36m(TaskRunner pid=1092302)[0m  endfirst
[36m(TaskRunner pid=1092302)[0m second_prompt:     def maxSubArray(self, nums): end2prompt
[36m(TaskRunner pid=1092302)[0m second_res: 
[36m(TaskRunner pid=1092302)[0m  endsecond
[36m(TaskRunner pid=1092302)[0m third_prompt:         """
[36m(TaskRunner pid=1092302)[0m         :type nums: List[int]
[36m(TaskRunner pid=1092302)[0m         :rtype: int
[36m(TaskRunner pid=1092302)[0m         """
[36m(TaskRunner pid=1092302)[0m         s = [] end3prompt
[36m(TaskRunner pid=1092302)[0m third_res: 
[36m(TaskRunner pid=1092302)[0m  endthird
[36m(TaskRunner pid=1092302)[0m fourth_prompt:         s.append(nums[0]) end4prompt
[36m(TaskRunner pid=1092302)[0m fourth_res: 
[36m(TaskRunner pid=1092302)[0m  endfourth
[36m(TaskRunner pid=1092302)[0m fifth_prompt:         for i in range(1, len(nums)): end5prompt
[36m(TaskRunner pid=1092302)[0m fifth_res: 
[36m(TaskRunner pid=1092302)[0m  endfifth
[36m(TaskRunner pid=1092302)[0m six_prompt:             if s[i-1] > 0: endsix
[36m(TaskRunner pid=1092302)[0m six_res: 
[36m(TaskRunner pid=1092302)[0m  endsix
[36m(TaskRunner pid=1092302)[0m seven_prompt:                 s.append(nums[i]+ s[i-1]) end7prompt
[36m(TaskRunner pid=1092302)[0m seven_res: 
[36m(TaskRunner pid=1092302)[0m  endseven
[36m(TaskRunner pid=1092302)[0m step:13 - global_seqlen/min:65963 - global_seqlen/max:77936 - global_seqlen/minmax_diff:11973 - global_seqlen/balanced_min:72918 - global_seqlen/balanced_max:72919 - global_seqlen/mean:72918.125 - actor/entropy:1.1079893112182617 - actor/pg_loss:0.04663565824739635 - actor/pg_clipfrac:0.04984755270803968 - actor/ppo_kl:0.001109181282420953 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:6.891322910785675 - perf/mfu/actor:0.13313550829517717 - perf/max_memory_allocated_gb:18.137521743774414 - perf/max_memory_reserved_gb:33.498046875 - perf/cpu_memory_used_gb:88.68281173706055 - actor/lr:2e-06 - training/global_step:13 - training/epoch:0 - critic/rewards/mean:-0.8695790767669678 - critic/advantages/mean:-0.10078873485326767 - critic/advantages/max:1.154699683189392 - critic/advantages/min:-1.154699683189392 - critic/format_reward/mean:0.731565535068512 - critic/skip_freq:0.9653076529502869 - response_length/mean:1.6262537240982056 - response_length/max:16.0 - response_length/min:1.0 - response_length/think_response_length:46.87644577026367 - response_length/clip_ratio:0.0 - prompt_length/mean:28.57421875 - prompt_length/max:127.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0 - timing_s/start_profile:5.334964953362942e-06 - timing_s/generate_sequences:33.466087341308594 - timing_s/reshard:0.6412308812141418 - timing_s/gen:34.724240674986504 - timing_s/reward:0.45131419494282454 - timing_s/old_log_prob:1.1898008140269667 - timing_s/ref:1.0927207190543413 - timing_s/adv:0.27625968505162746 - timing_s/update_actor:6.0422331870067865 - timing_s/step:43.84656308207195 - timing_s/stop_profile:3.2009556889533997e-06 - timing_per_token_ms/update_actor:0.06512721883168418 - timing_per_token_ms/gen:6.950614973358009 - timing_per_token_ms/ref:0.011778072641221857 - timing_per_token_ms/adv:0.002977711122010241 - perf/total_num_tokens:583345 - perf/time_per_step:43.84656308207195 - perf/throughput:1663.0294343370067
[36m(TaskRunner pid=1092302)[0m global_steps 14
[36m(TaskRunner pid=1092302)[0m first_prompt: class Solution: end1prompt
[36m(TaskRunner pid=1092302)[0m first_res: 
[36m(TaskRunner pid=1092302)[0m  endfirst
[36m(TaskRunner pid=1092302)[0m second_prompt:     def getNoZeroIntegers(self, n: int): end2prompt
[36m(TaskRunner pid=1092302)[0m second_res: 
[36m(TaskRunner pid=1092302)[0m  endsecond
[36m(TaskRunner pid=1092302)[0m third_prompt:         #  try out all?
[36m(TaskRunner pid=1092302)[0m         for A in range(1, n): end3prompt
[36m(TaskRunner pid=1092302)[0m third_res: 
[36m(TaskRunner pid=1092302)[0m  endthird
[36m(TaskRunner pid=1092302)[0m fourth_prompt:             B = n - A end4prompt
[36m(TaskRunner pid=1092302)[0m fourth_res: 
[36m(TaskRunner pid=1092302)[0m  endfourth
[36m(TaskRunner pid=1092302)[0m fifth_prompt:             if '0' not in str(B) and '0' not in str(A): end5prompt
[36m(TaskRunner pid=1092302)[0m fifth_res: 
[36m(TaskRunner pid=1092302)[0m  endfifth
[36m(TaskRunner pid=1092302)[0m six_prompt:                 return [A,B] endsix
[36m(TaskRunner pid=1092302)[0m six_res: 
[36m(TaskRunner pid=1092302)[0m  endsix
[36m(TaskRunner pid=1092302)[0m seven_prompt:         return [] end7prompt
[36m(TaskRunner pid=1092302)[0m seven_res: 
[36m(TaskRunner pid=1092302)[0m  endseven
[36m(TaskRunner pid=1092302)[0m Training Progress:   1%|          | 14/2226 [10:12<27:14:55, 44.35s/it]
[36m(TaskRunner pid=1092302)[0m step:14 - global_seqlen/min:61758 - global_seqlen/max:79241 - global_seqlen/minmax_diff:17483 - global_seqlen/balanced_min:71571 - global_seqlen/balanced_max:71572 - global_seqlen/mean:71571.25 - actor/entropy:1.0589485168457031 - actor/pg_loss:0.06955108946810167 - actor/pg_clipfrac:0.043658994138240814 - actor/ppo_kl:0.02223895544860473 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:3.3538411259651184 - perf/mfu/actor:0.11675584710084075 - perf/max_memory_allocated_gb:18.137521743774414 - perf/max_memory_reserved_gb:33.498046875 - perf/cpu_memory_used_gb:88.85106658935547 - actor/lr:2e-06 - training/global_step:14 - training/epoch:0 - critic/rewards/mean:-0.9133397936820984 - critic/advantages/mean:-0.0767853632569313 - critic/advantages/max:1.154699683189392 - critic/advantages/min:-1.1546998023986816 - critic/format_reward/mean:0.7065686583518982 - critic/skip_freq:0.9669694900512695 - response_length/mean:1.5234495401382446 - response_length/max:16.0 - response_length/min:1.0 - response_length/think_response_length:46.12248611450195 - response_length/clip_ratio:0.0 - prompt_length/mean:28.076171875 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.001953125 - timing_s/start_profile:7.087946869432926e-06 - timing_s/generate_sequences:33.82906723022461 - timing_s/reshard:0.5579620599746704 - timing_s/gen:34.82157837599516 - timing_s/reward:0.45252558903303 - timing_s/old_log_prob:1.0398668589768931 - timing_s/ref:1.0170770470285788 - timing_s/adv:0.2633163050049916 - timing_s/update_actor:6.743558038957417 - timing_s/step:44.403509111958556 - timing_s/stop_profile:2.471962943673134e-06 - timing_per_token_ms/update_actor:0.07416205088364743 - timing_per_token_ms/gen:7.440449202046058 - timing_per_token_ms/ref:0.011185270339274028 - timing_per_token_ms/adv:0.0028958121361840217 - perf/total_num_tokens:572570 - perf/time_per_step:44.403509111958556 - perf/throughput:1611.8377000236846
[36m(TaskRunner pid=1092302)[0m global_steps 15
[36m(TaskRunner pid=1092302)[0m Training Progress:   1%|          | 15/2226 [10:56<27:19:28, 44.49s/it]
[36m(TaskRunner pid=1092302)[0m first_prompt: class Solution: end1prompt
[36m(TaskRunner pid=1092302)[0m first_res: 
[36m(TaskRunner pid=1092302)[0m  endfirst
[36m(TaskRunner pid=1092302)[0m second_prompt:     def addOperators(self, num: str, target: int) -> List[str]: end2prompt
[36m(TaskRunner pid=1092302)[0m second_res: 
[36m(TaskRunner pid=1092302)[0m  endsecond
[36m(TaskRunner pid=1092302)[0m third_prompt:         self.target = target end3prompt
[36m(TaskRunner pid=1092302)[0m third_res: 
[36m(TaskRunner pid=1092302)[0m  endthird
[36m(TaskRunner pid=1092302)[0m fourth_prompt:         res = [] end4prompt
[36m(TaskRunner pid=1092302)[0m fourth_res: 
[36m(TaskRunner pid=1092302)[0m  endfourth
[36m(TaskRunner pid=1092302)[0m fifth_prompt:         for i in range(1, len(num)+1): end5prompt
[36m(TaskRunner pid=1092302)[0m fifth_res: 
[36m(TaskRunner pid=1092302)[0m  endfifth
[36m(TaskRunner pid=1092302)[0m six_prompt:             if i == 1 or (i > 1 and num[0] != '0'): endsix
[36m(TaskRunner pid=1092302)[0m six_res: 
[36m(TaskRunner pid=1092302)[0m  endsix
[36m(TaskRunner pid=1092302)[0m seven_prompt:                 self.dfs(num[i:], int(num[:i]), int(num[:i]), num[:i], res) end7prompt
[36m(TaskRunner pid=1092302)[0m seven_res: 
[36m(TaskRunner pid=1092302)[0m  endseven
[36m(TaskRunner pid=1092302)[0m step:15 - global_seqlen/min:69071 - global_seqlen/max:78676 - global_seqlen/minmax_diff:9605 - global_seqlen/balanced_min:73671 - global_seqlen/balanced_max:73672 - global_seqlen/mean:73671.25 - actor/entropy:0.9881908893585205 - actor/pg_loss:0.05123467665786544 - actor/pg_clipfrac:0.058745983095529176 - actor/ppo_kl:0.007511128996460077 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:9.037638545036316 - perf/mfu/actor:0.14708488834226024 - perf/max_memory_allocated_gb:18.137521743774414 - perf/max_memory_reserved_gb:33.498046875 - perf/cpu_memory_used_gb:88.85603332519531 - actor/lr:2e-06 - training/global_step:15 - training/epoch:0 - critic/rewards/mean:-0.9757570624351501 - critic/advantages/mean:-0.059292372316122055 - critic/advantages/max:1.154699683189392 - critic/advantages/min:-1.1546998023986816 - critic/format_reward/mean:0.6725831031799316 - critic/skip_freq:0.9668238759040833 - response_length/mean:1.4766122102737427 - response_length/max:16.0 - response_length/min:1.0 - response_length/think_response_length:44.50828170776367 - response_length/clip_ratio:0.0 - prompt_length/mean:30.333984375 - prompt_length/max:127.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0 - timing_s/start_profile:5.10108657181263e-06 - timing_s/generate_sequences:35.31196975708008 - timing_s/reshard:0.6242806911468506 - timing_s/gen:36.35670518397819 - timing_s/reward:0.4735799659974873 - timing_s/old_log_prob:1.0658699350897223 - timing_s/ref:0.9868499210570008 - timing_s/adv:0.24719618307426572 - timing_s/update_actor:5.515872296993621 - timing_s/step:44.7135447380133 - timing_s/stop_profile:2.759043127298355e-06 - timing_per_token_ms/update_actor:0.056444441072379184 - timing_per_token_ms/gen:8.014876599230007 - timing_per_token_ms/ref:0.010098528250326595 - timing_per_token_ms/adv:0.0025295818390243248 - perf/total_num_tokens:589370 - perf/time_per_step:44.7135447380133 - perf/throughput:1647.6271436688012
[36m(TaskRunner pid=1092302)[0m global_steps 16
[36m(TaskRunner pid=1092302)[0m first_prompt: # Definition for singly-linked list.
[36m(TaskRunner pid=1092302)[0m # class ListNode:
[36m(TaskRunner pid=1092302)[0m #     def __init__(self, x):
[36m(TaskRunner pid=1092302)[0m #         self.val = x
[36m(TaskRunner pid=1092302)[0m #         self.next = None
[36m(TaskRunner pid=1092302)[0m 
[36m(TaskRunner pid=1092302)[0m 
[36m(TaskRunner pid=1092302)[0m class Solution: end1prompt
[36m(TaskRunner pid=1092302)[0m first_res: 
[36m(TaskRunner pid=1092302)[0m  endfirst
[36m(TaskRunner pid=1092302)[0m second_prompt:     def reverseList(self, head: ListNode) -> ListNode: end2prompt
[36m(TaskRunner pid=1092302)[0m second_res: 
[36m(TaskRunner pid=1092302)[0m  endsecond
[36m(TaskRunner pid=1092302)[0m third_prompt:         if head is None or head.next is None: end3prompt
[36m(TaskRunner pid=1092302)[0m third_res: 
[36m(TaskRunner pid=1092302)[0m  endthird
[36m(TaskRunner pid=1092302)[0m fourth_prompt:             return head end4prompt
[36m(TaskRunner pid=1092302)[0m fourth_res: 
[36m(TaskRunner pid=1092302)[0m  endfourth
[36m(TaskRunner pid=1092302)[0m fifth_prompt:         
[36m(TaskRunner pid=1092302)[0m         prev = head end5prompt
[36m(TaskRunner pid=1092302)[0m fifth_res: 
[36m(TaskRunner pid=1092302)[0m  endfifth
[36m(TaskRunner pid=1092302)[0m six_prompt:         cur = head.next endsix
[36m(TaskRunner pid=1092302)[0m six_res: 
[36m(TaskRunner pid=1092302)[0m  endsix
[36m(TaskRunner pid=1092302)[0m seven_prompt:         while cur.next is not None: end7prompt
[36m(TaskRunner pid=1092302)[0m seven_res: 
[36m(TaskRunner pid=1092302)[0m  endseven
[36m(TaskRunner pid=1092302)[0m Training Progress:   1%|          | 16/2226 [11:45<28:03:47, 45.71s/it]
[36m(TaskRunner pid=1092302)[0m step:16 - global_seqlen/min:63652 - global_seqlen/max:75461 - global_seqlen/minmax_diff:11809 - global_seqlen/balanced_min:71550 - global_seqlen/balanced_max:71551 - global_seqlen/mean:71550.625 - actor/entropy:0.9451519250869751 - actor/pg_loss:0.09538656659424305 - actor/pg_clipfrac:0.07133607100695372 - actor/ppo_kl:0.0402255590694646 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:9.28330397605896 - perf/mfu/actor:0.12348972946874079 - perf/max_memory_allocated_gb:18.137521743774414 - perf/max_memory_reserved_gb:33.498046875 - perf/cpu_memory_used_gb:88.84454727172852 - actor/lr:2e-06 - training/global_step:16 - training/epoch:0 - critic/rewards/mean:-1.0099416971206665 - critic/advantages/mean:-0.05586974322795868 - critic/advantages/max:1.154699683189392 - critic/advantages/min:-1.154699683189392 - critic/format_reward/mean:0.6568058133125305 - critic/skip_freq:0.9698734879493713 - response_length/mean:1.3976823091506958 - response_length/max:12.333333015441895 - response_length/min:1.0 - response_length/think_response_length:46.393768310546875 - response_length/clip_ratio:0.0 - prompt_length/mean:30.65234375 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0009765625 - timing_s/start_profile:6.144982762634754e-06 - timing_s/generate_sequences:37.91057586669922 - timing_s/reshard:0.7116245031356812 - timing_s/gen:39.281702465959825 - timing_s/reward:0.4590048029785976 - timing_s/old_log_prob:1.025580168934539 - timing_s/ref:0.9753087380668148 - timing_s/adv:0.25483822904061526 - timing_s/update_actor:6.367937745060772 - timing_s/step:48.420753273996525 - timing_s/stop_profile:2.786051481962204e-06 - timing_per_token_ms/update_actor:0.06467690213390956 - timing_per_token_ms/gen:9.148725768521496 - timing_per_token_ms/ref:0.009905867539490562 - timing_per_token_ms/adv:0.0025883021881649075 - perf/total_num_tokens:572405 - perf/time_per_step:48.420753273996525 - perf/throughput:1477.685086704856
[36m(TaskRunner pid=1092302)[0m global_steps 17
[36m(TaskRunner pid=1092302)[0m Training Progress:   1%|          | 17/2226 [12:33<28:31:19, 46.48s/it]
[36m(TaskRunner pid=1092302)[0m first_prompt: 
[36m(TaskRunner pid=1092302)[0m Write a python function to find the longest substring where the characters are in alphabetical order.
[36m(TaskRunner pid=1092302)[0m 
[36m(TaskRunner pid=1092302)[0m 
[36m(TaskRunner pid=1092302)[0m ```python
[36m(TaskRunner pid=1092302)[0m def longest_ordered_substring(s: str) -> str: end1prompt
[36m(TaskRunner pid=1092302)[0m first_res: 
[36m(TaskRunner pid=1092302)[0m  endfirst
[36m(TaskRunner pid=1092302)[0m second_prompt:     if not s: end2prompt
[36m(TaskRunner pid=1092302)[0m second_res: 
[36m(TaskRunner pid=1092302)[0m  endsecond
[36m(TaskRunner pid=1092302)[0m third_prompt:         return "" end3prompt
[36m(TaskRunner pid=1092302)[0m third_res: 
[36m(TaskRunner pid=1092302)[0m  endthird
[36m(TaskRunner pid=1092302)[0m fourth_prompt:     max_len = 1 end4prompt
[36m(TaskRunner pid=1092302)[0m fourth_res: 
[36m(TaskRunner pid=1092302)[0m  endfourth
[36m(TaskRunner pid=1092302)[0m fifth_prompt:     start = 0 end5prompt
[36m(TaskRunner pid=1092302)[0m fifth_res: 
[36m(TaskRunner pid=1092302)[0m  endfifth
[36m(TaskRunner pid=1092302)[0m six_prompt:     max_start = 0 endsix
[36m(TaskRunner pid=1092302)[0m six_res: 
[36m(TaskRunner pid=1092302)[0m  endsix
[36m(TaskRunner pid=1092302)[0m seven_prompt:     for i in range(1, len(s)): end7prompt
[36m(TaskRunner pid=1092302)[0m seven_res: 
[36m(TaskRunner pid=1092302)[0m  endseven
[36m(TaskRunner pid=1092302)[0m step:17 - global_seqlen/min:66848 - global_seqlen/max:78820 - global_seqlen/minmax_diff:11972 - global_seqlen/balanced_min:72347 - global_seqlen/balanced_max:72348 - global_seqlen/mean:72347.5 - actor/entropy:0.8879331946372986 - actor/pg_loss:0.03404691411803166 - actor/pg_clipfrac:0.05229624888549248 - actor/ppo_kl:0.03212893018644536 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:7.1553376615047455 - perf/mfu/actor:0.16096802463615445 - perf/max_memory_allocated_gb:18.137521743774414 - perf/max_memory_reserved_gb:33.498046875 - perf/cpu_memory_used_gb:88.87757873535156 - actor/lr:2e-06 - training/global_step:17 - training/epoch:0 - critic/rewards/mean:-1.0791513919830322 - critic/advantages/mean:-0.039111603051424026 - critic/advantages/max:1.1546998023986816 - critic/advantages/min:-1.154699683189392 - critic/format_reward/mean:0.6213736534118652 - critic/skip_freq:0.9746034741401672 - response_length/mean:1.3430184125900269 - response_length/max:16.0 - response_length/min:1.0 - response_length/think_response_length:52.88197708129883 - response_length/clip_ratio:0.0 - prompt_length/mean:27.2939453125 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.001953125 - timing_s/start_profile:6.141955964267254e-06 - timing_s/generate_sequences:39.03807067871094 - timing_s/reshard:0.555328369140625 - timing_s/gen:40.23129521298688 - timing_s/reward:0.45793763897381723 - timing_s/old_log_prob:1.0909571539377794 - timing_s/ref:1.0586648029275239 - timing_s/adv:0.24261394597124308 - timing_s/update_actor:4.955865786992945 - timing_s/step:48.093290684977546 - timing_s/stop_profile:2.285931259393692e-06 - timing_per_token_ms/update_actor:0.05633409947351336 - timing_per_token_ms/gen:9.751262535585912 - timing_per_token_ms/ref:0.012034007957550738 - timing_per_token_ms/adv:0.0027578305695599866 - perf/total_num_tokens:578780 - perf/time_per_step:48.093290684977546 - perf/throughput:1504.3158613099126
[36m(TaskRunner pid=1092302)[0m global_steps 18
[36m(TaskRunner pid=1092302)[0m Training Progress:   1%|          | 18/2226 [13:20<28:33:04, 46.55s/it]
[36m(TaskRunner pid=1092302)[0m error!! index 6 is out of bounds for dimension 0 with size 6
[36m(TaskRunner pid=1092302)[0m step:18 - global_seqlen/min:68076 - global_seqlen/max:76482 - global_seqlen/minmax_diff:8406 - global_seqlen/balanced_min:72536 - global_seqlen/balanced_max:72537 - global_seqlen/mean:72536.875 - actor/entropy:0.8781225085258484 - actor/pg_loss:0.027872772747893276 - actor/pg_clipfrac:0.06462255430718263 - actor/ppo_kl:-0.012374921391407648 - actor/pg_clipfrac_lower:0.0 - actor/grad_norm:15.123848617076874 - perf/mfu/actor:0.14924295648277885 - perf/max_memory_allocated_gb:18.137521743774414 - perf/max_memory_reserved_gb:33.498046875 - perf/cpu_memory_used_gb:88.82825469970703 - actor/lr:2e-06 - training/global_step:18 - training/epoch:0 - critic/rewards/mean:-1.1241936683654785 - critic/advantages/mean:-0.03557704761624336 - critic/advantages/max:1.1546998023986816 - critic/advantages/min:-1.1546998023986816 - critic/format_reward/mean:0.6010175943374634 - critic/skip_freq:0.967574417591095 - response_length/mean:1.3256962299346924 - response_length/max:12.0 - response_length/min:1.0 - response_length/think_response_length:40.8842658996582 - response_length/clip_ratio:0.0 - prompt_length/mean:28.4873046875 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.001953125 - timing_s/start_profile:5.61494380235672e-06 - timing_s/generate_sequences:37.38777160644531 - timing_s/reshard:0.6819804906845093 - timing_s/gen:38.46744002401829 - timing_s/reward:0.46127866103779525 - timing_s/old_log_prob:1.0347314539831132 - timing_s/ref:0.9847982239443809 - timing_s/adv:0.24798883392941207 - timing_s/update_actor:5.3550940490094945 - timing_s/step:46.60738445702009 - timing_s/stop_profile:2.4460023269057274e-06 - timing_per_token_ms/update_actor:0.058470956420644045 - timing_per_token_ms/gen:9.44556743096065 - timing_per_token_ms/ref:0.010752769887585863 - timing_per_token_ms/adv:0.002707729158216186 - perf/total_num_tokens:580295 - perf/time_per_step:46.60738445702009 - perf/throughput:1556.3386756210552
[36m(TaskRunner pid=1092302)[0m global_steps 19
[36m(TaskRunner pid=1092302)[0m first_prompt: import collections, itertools  end1prompt
[36m(TaskRunner pid=1092302)[0m first_res:  # itertools.product is faster
[36m(TaskRunner pid=1092302)[0m import util
[36m(TaskRunner pid=1092302)[0m 
[36m(TaskRunner pid=1092302)[0m 
[36m(TaskRunner pid=1092302)[0m def gen_primes(n):
[36m(TaskRunner pid=1092302)[0m     endfirst
[36m(TaskRunner pid=1092302)[0m second_prompt: class Solution(object): end2prompt
[36m(TaskRunner pid=1092302)[0m second_res: 
[36m(TaskRunner pid=1092302)[0m  endsecond
[36m(TaskRunner pid=1092302)[0m third_prompt:     def minJumps(self, arr): end3prompt
[36m(TaskRunner pid=1092302)[0m third_res: 
[36m(TaskRunner pid=1092302)[0m  endthird
[36m(TaskRunner pid=1092302)[0m fourth_prompt:         """
[36m(TaskRunner pid=1092302)[0m         :type arr: List[int]
[36m(TaskRunner pid=1092302)[0m         :rtype: int
[36m(TaskRunner pid=1092302)[0m         """
[36m(TaskRunner pid=1092302)[0m         h2i = collections.defaultdict(list) end4prompt
[36m(TaskRunner pid=1092302)[0m fourth_res: 
[36m(TaskRunner pid=1092302)[0m  endfourth
[36m(TaskRunner pid=1092302)[0m fifth_prompt:         for i, h in enumerate(arr): end5prompt
[36m(TaskRunner pid=1092302)[0m fifth_res: 
[36m(TaskRunner pid=1092302)[0m  endfifth
[36m(TaskRunner pid=1092302)[0m six_prompt:             h2i[h].append(i) endsix
[36m(TaskRunner pid=1092302)[0m six_res: 
[36m(TaskRunner pid=1092302)[0m  endsix
[36m(TaskRunner pid=1092302)[0m seven_prompt:         data = [None] * len(arr) end7prompt
[36m(TaskRunner pid=1092302)[0m seven_res: 
[36m(TaskRunner pid=1092302)[0m  endseven
[36m(TaskRunner pid=1092302)[0m Training Progress:   1%|          | 19/2226 [14:07<28:41:23, 46.80s/it]
[36m(TaskRunner pid=1092302)[0m step:19 - global_seqlen/min:64753 - global_seqlen/max:77102 - global_seqlen/minmax_diff:12349 - global_seqlen/balanced_min:72830 - global_seqlen/balanced_max:72831 - global_seqlen/mean:72830.125 - actor/entropy:0.8660640716552734 - actor/pg_loss:0.04587228021894892 - actor/pg_clipfrac:0.06260935092965762 - actor/ppo_kl:0.013562895978490511 - actor/pg_clipfrac_lower:9.600614430382848e-05 - actor/grad_norm:12.327825009822845 - perf/mfu/actor:0.16213088421871902 - perf/max_memory_allocated_gb:18.137521743774414 - perf/max_memory_reserved_gb:33.498046875 - perf/cpu_memory_used_gb:88.9062271118164 - actor/lr:2e-06 - training/global_step:19 - training/epoch:0 - critic/rewards/mean:-1.174019694328308 - critic/advantages/mean:-0.018592631444334984 - critic/advantages/max:1.154699683189392 - critic/advantages/min:-1.154699683189392 - critic/format_reward/mean:0.5757558941841125 - critic/skip_freq:0.9632775187492371 - response_length/mean:1.3348890542984009 - response_length/max:16.0 - response_length/min:1.0 - response_length/think_response_length:36.35072708129883 - response_length/clip_ratio:0.0 - prompt_length/mean:28.810546875 - prompt_length/max:128.0 - prompt_length/min:2.0 - prompt_length/clip_ratio:0.0009765625 - timing_s/start_profile:6.115995347499847e-06 - timing_s/generate_sequences:38.162742614746094 - timing_s/reshard:0.6282206773757935 - timing_s/gen:39.36177675588988 - timing_s/reward:0.4686901969835162 - timing_s/old_log_prob:1.0841632439987734 - timing_s/ref:1.0238810550654307 - timing_s/adv:0.26789935503620654 - timing_s/update_actor:4.9593938699690625 - timing_s/step:47.23718444793485 - timing_s/stop_profile:2.8440263122320175e-06 - timing_per_token_ms/update_actor:0.0535532485593786 - timing_per_token_ms/gen:9.598608924378235 - timing_per_token_ms/ref:0.011056221400197009 - timing_per_token_ms/adv:0.0028928697992766364 - perf/total_num_tokens:582641 - perf/time_per_step:47.23718444793485 - perf/throughput:1541.7964862040808
[36m(TaskRunner pid=1092302)[0m global_steps 20
*** SIGTERM received at time=1756174802 on cpu 91 ***
PC: @     0x7a4e04451117  (unknown)  (unknown)
    @     0x7a4e04402520  (unknown)  (unknown)
    @ ... and at least 1 more frames
[2025-08-26 02:20:02,845 E 1079271 1079271] logging.cc:501: *** SIGTERM received at time=1756174802 on cpu 91 ***
[2025-08-26 02:20:02,845 E 1079271 1079271] logging.cc:501: PC: @     0x7a4e04451117  (unknown)  (unknown)
[2025-08-26 02:20:02,845 E 1079271 1079271] logging.cc:501:     @     0x7a4e04402520  (unknown)  (unknown)
[2025-08-26 02:20:02,845 E 1079271 1079271] logging.cc:501:     @ ... and at least 1 more frames
